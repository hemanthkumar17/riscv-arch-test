
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.6.0
// timestamp : Mon Feb 14 07:47:35 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/zeusprime/riscv-project/riscof_zfh_env/tests/ctg_test/dataset.cgf \
//                  --cgf /home/zeusprime/riscv-project/riscof_zfh_env/tests/ctg_test/rv64f_zfhfull.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.h instruction of the RISC-V RV64FZfh extension for the fmadd_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFZfh")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*F.*Zfh.*);def TEST_CASE_1=True;",fmadd_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f5, rs2==f21, rs3==f14, rd==f14, fs1 == 0 and fe1 == 0x00 and fm1 == 0x050 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x266 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x021 and rm_val == 0  
// opcode: fmadd.h ; op1:f5; op2:f21; op3:f14; dest:f14; op1val:0x50; op2val:0xb666; op3val:0x21; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f14, f5, f21, f14, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f23, rs2==f1, rs3==f1, rd==f8, fs1 == 0 and fe1 == 0x1e and fm1 == 0x03d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x047 and rm_val == 0  
// opcode: fmadd.h ; op1:f23; op2:f1; op3:f1; dest:f8; op1val:0x783d; op2val:0xc0d9; op3val:0xc0d9; valaddr_reg:x16; val_offset:6; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f8, f23, f1, f1, 0x0, 0, x16, 6, x17, x15, 10, x18)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f17, rs2==f18, rs3==f23, rd==f17, fs1 == 0 and fe1 == 0x1e and fm1 == 0x04b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x120 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x002 and rm_val == 0  
// opcode: fmadd.h ; op1:f17; op2:f18; op3:f23; dest:f17; op1val:0x784b; op2val:0xc120; op3val:0x7802; valaddr_reg:x16; val_offset:12; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f17, f17, f18, f23, 0x0, 0, x16, 12, x17, x15, 20, x18)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f18, rs2==f24, rs3==f18, rd==f31, fs1 == 0 and fe1 == 0x1e and fm1 == 0x054 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x15a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x017 and rm_val == 0  
// opcode: fmadd.h ; op1:f18; op2:f24; op3:f18; dest:f31; op1val:0x7854; op2val:0xc15a; op3val:0x7854; valaddr_reg:x16; val_offset:18; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f18, f24, f18, 0x0, 0, x16, 18, x17, x15, 30, x18)

inst_4:
// rs1 == rs2 == rd != rs3, rs1==f6, rs2==f6, rs3==f26, rd==f6, fs1 == 0 and fe1 == 0x1e and fm1 == 0x026 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1be and fs3 == 0 and fe3 == 0x1e and fm3 == 0x02c and rm_val == 0  
// opcode: fmadd.h ; op1:f6; op2:f6; op3:f26; dest:f6; op1val:0x7826; op2val:0x7826; op3val:0x782c; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f6, f6, f6, f26, 0x0, 0, x16, 24, x17, x15, 40, x18)

inst_5:
// rs1 == rs2 == rs3 == rd, rs1==f27, rs2==f27, rs3==f27, rd==f27, fs1 == 0 and fe1 == 0x1e and fm1 == 0x059 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1a0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05c and rm_val == 0  
// opcode: fmadd.h ; op1:f27; op2:f27; op3:f27; dest:f27; op1val:0x7859; op2val:0x7859; op3val:0x7859; valaddr_reg:x16; val_offset:30; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f27, f27, f27, f27, 0x0, 0, x16, 30, x17, x15, 50, x18)

inst_6:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f8, rs2==f8, rs3==f31, rd==f12, fs1 == 0 and fe1 == 0x1e and fm1 == 0x022 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x063 and rm_val == 0  
// opcode: fmadd.h ; op1:f8; op2:f8; op3:f31; dest:f12; op1val:0x7822; op2val:0x7822; op3val:0x7863; valaddr_reg:x16; val_offset:36; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f12, f8, f8, f31, 0x0, 0, x16, 36, x17, x15, 60, x18)

inst_7:
// rs1 == rs2 == rs3 != rd, rs1==f15, rs2==f15, rs3==f15, rd==f5, fs1 == 0 and fe1 == 0x1e and fm1 == 0x024 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e5 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x03f and rm_val == 0  
// opcode: fmadd.h ; op1:f15; op2:f15; op3:f15; dest:f5; op1val:0x7824; op2val:0x7824; op3val:0x7824; valaddr_reg:x16; val_offset:42; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f5, f15, f15, f15, 0x0, 0, x16, 42, x17, x15, 70, x18)

inst_8:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f25, rs2==f26, rs3==f3, rd==f26, fs1 == 0 and fe1 == 0x1e and fm1 == 0x05b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1a7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x056 and rm_val == 0  
// opcode: fmadd.h ; op1:f25; op2:f26; op3:f3; dest:f26; op1val:0x785b; op2val:0xc1a7; op3val:0x7856; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f26, f25, f26, f3, 0x0, 0, x16, 48, x17, x15, 80, x18)

inst_9:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f24, rs2==f23, rs3==f12, rd==f9, fs1 == 0 and fe1 == 0x1e and fm1 == 0x02f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1dd and fs3 == 0 and fe3 == 0x1e and fm3 == 0x048 and rm_val == 0  
// opcode: fmadd.h ; op1:f24; op2:f23; op3:f12; dest:f9; op1val:0x782f; op2val:0xc1dd; op3val:0x7848; valaddr_reg:x16; val_offset:54; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f9, f24, f23, f12, 0x0, 0, x16, 54, x17, x15, 90, x18)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==f10, rs2==f2, rs3==f10, rd==f10, fs1 == 0 and fe1 == 0x1e and fm1 == 0x062 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x18b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x028 and rm_val == 0  
// opcode: fmadd.h ; op1:f10; op2:f2; op3:f10; dest:f10; op1val:0x7862; op2val:0xc18b; op3val:0x7862; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f10, f10, f2, f10, 0x0, 0, x16, 60, x17, x15, 100, x18)

inst_11:
// rd == rs2 == rs3 != rs1, rs1==f29, rs2==f30, rs3==f30, rd==f30, fs1 == 0 and fe1 == 0x1e and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x34c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x005 and rm_val == 0  
// opcode: fmadd.h ; op1:f29; op2:f30; op3:f30; dest:f30; op1val:0x7855; op2val:0x374c; op3val:0x374c; valaddr_reg:x16; val_offset:66; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f30, f29, f30, f30, 0x0, 0, x16, 66, x17, x15, 110, x18)

inst_12:
// rs1==f7, rs2==f19, rs3==f21, rd==f22, fs1 == 0 and fe1 == 0x1e and fm1 == 0x059 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x0f7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x04c and rm_val == 0  
// opcode: fmadd.h ; op1:f7; op2:f19; op3:f21; dest:f22; op1val:0x7859; op2val:0x38f7; op3val:0x784c; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f22, f7, f19, f21, 0x0, 0, x16, 72, x17, x15, 120, x18)

inst_13:
// rs1==f13, rs2==f11, rs3==f17, rd==f19, fs1 == 0 and fe1 == 0x1e and fm1 == 0x009 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x293 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x02e and rm_val == 0  
// opcode: fmadd.h ; op1:f13; op2:f11; op3:f17; dest:f19; op1val:0x7809; op2val:0x3a93; op3val:0x782e; valaddr_reg:x16; val_offset:78; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f19, f13, f11, f17, 0x0, 0, x16, 78, x17, x15, 130, x18)

inst_14:
// rs1==f4, rs2==f25, rs3==f29, rd==f3, fs1 == 0 and fe1 == 0x1e and fm1 == 0x041 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2b3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x02f and rm_val == 0  
// opcode: fmadd.h ; op1:f4; op2:f25; op3:f29; dest:f3; op1val:0x7841; op2val:0x3ab3; op3val:0x782f; valaddr_reg:x16; val_offset:84; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f3, f4, f25, f29, 0x0, 0, x16, 84, x17, x15, 140, x18)

inst_15:
// rs1==f22, rs2==f17, rs3==f4, rd==f1, fs1 == 0 and fe1 == 0x1e and fm1 == 0x042 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2c0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x047 and rm_val == 0  
// opcode: fmadd.h ; op1:f22; op2:f17; op3:f4; dest:f1; op1val:0x7842; op2val:0x3ac0; op3val:0x7847; valaddr_reg:x16; val_offset:90; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f1, f22, f17, f4, 0x0, 0, x16, 90, x17, x15, 150, x18)

inst_16:
// rs1==f14, rs2==f0, rs3==f16, rd==f20, fs1 == 0 and fe1 == 0x1e and fm1 == 0x03f and fs2 == 0 and fe2 == 0x0e and fm2 == 0x327 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x023 and rm_val == 0  
// opcode: fmadd.h ; op1:f14; op2:f0; op3:f16; dest:f20; op1val:0x783f; op2val:0x3b27; op3val:0x7823; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f20, f14, f0, f16, 0x0, 0, x16, 96, x17, x15, 160, x18)

inst_17:
// rs1==f20, rs2==f12, rs3==f8, rd==f7, fs1 == 0 and fe1 == 0x1e and fm1 == 0x018 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x3a8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00c and rm_val == 0  
// opcode: fmadd.h ; op1:f20; op2:f12; op3:f8; dest:f7; op1val:0x7818; op2val:0x3ba8; op3val:0x780c; valaddr_reg:x16; val_offset:102; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f7, f20, f12, f8, 0x0, 0, x16, 102, x17, x15, 170, x18)

inst_18:
// rs1==f1, rs2==f3, rs3==f6, rd==f25, fs1 == 0 and fe1 == 0x1e and fm1 == 0x040 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x32b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x02c and rm_val == 0  
// opcode: fmadd.h ; op1:f1; op2:f3; op3:f6; dest:f25; op1val:0x7840; op2val:0x3b2b; op3val:0x782c; valaddr_reg:x16; val_offset:108; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f25, f1, f3, f6, 0x0, 0, x16, 108, x17, x15, 180, x18)

inst_19:
// rs1==f31, rs2==f9, rs3==f5, rd==f21, fs1 == 0 and fe1 == 0x1e and fm1 == 0x017 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x32e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x051 and rm_val == 0  
// opcode: fmadd.h ; op1:f31; op2:f9; op3:f5; dest:f21; op1val:0x7817; op2val:0x3b2e; op3val:0x7851; valaddr_reg:x16; val_offset:114; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f21, f31, f9, f5, 0x0, 0, x16, 114, x17, x15, 190, x18)

inst_20:
// rs1==f19, rs2==f13, rs3==f9, rd==f2, fs1 == 0 and fe1 == 0x1e and fm1 == 0x031 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x31a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x045 and rm_val == 0  
// opcode: fmadd.h ; op1:f19; op2:f13; op3:f9; dest:f2; op1val:0x7831; op2val:0x3b1a; op3val:0x7845; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f2, f19, f13, f9, 0x0, 0, x16, 120, x17, x15, 200, x18)

inst_21:
// rs1==f26, rs2==f20, rs3==f22, rd==f11, fs1 == 0 and fe1 == 0x01 and fm1 == 0x013 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0f0 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00f and rm_val == 0  
// opcode: fmadd.h ; op1:f26; op2:f20; op3:f22; dest:f11; op1val:0x413; op2val:0xc0f0; op3val:0x40f; valaddr_reg:x16; val_offset:126; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f11, f26, f20, f22, 0x0, 0, x16, 126, x17, x15, 210, x18)

inst_22:
// rs1==f2, rs2==f31, rs3==f0, rd==f18, fs1 == 0 and fe1 == 0x01 and fm1 == 0x03d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x057 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x034 and rm_val == 0  
// opcode: fmadd.h ; op1:f2; op2:f31; op3:f0; dest:f18; op1val:0x43d; op2val:0xc057; op3val:0x434; valaddr_reg:x16; val_offset:132; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f18, f2, f31, f0, 0x0, 0, x16, 132, x17, x15, 220, x18)

inst_23:
// rs1==f16, rs2==f22, rs3==f19, rd==f4, fs1 == 0 and fe1 == 0x01 and fm1 == 0x024 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x02d and fs3 == 0 and fe3 == 0x01 and fm3 == 0x026 and rm_val == 0  
// opcode: fmadd.h ; op1:f16; op2:f22; op3:f19; dest:f4; op1val:0x424; op2val:0xc02d; op3val:0x426; valaddr_reg:x16; val_offset:138; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f4, f16, f22, f19, 0x0, 0, x16, 138, x17, x15, 230, x18)

inst_24:
// rs1==f28, rs2==f29, rs3==f20, rd==f13, fs1 == 0 and fe1 == 0x01 and fm1 == 0x029 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x03e and rm_val == 0  
// opcode: fmadd.h ; op1:f28; op2:f29; op3:f20; dest:f13; op1val:0x429; op2val:0xc015; op3val:0x43e; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f13, f28, f29, f20, 0x0, 0, x16, 144, x17, x15, 240, x18)

inst_25:
// rs1==f9, rs2==f7, rs3==f11, rd==f0, fs1 == 0 and fe1 == 0x01 and fm1 == 0x059 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3d0 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x05e and rm_val == 0  
// opcode: fmadd.h ; op1:f9; op2:f7; op3:f11; dest:f0; op1val:0x459; op2val:0xbfd0; op3val:0x45e; valaddr_reg:x16; val_offset:150; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f0, f9, f7, f11, 0x0, 0, x16, 150, x17, x15, 250, x18)

inst_26:
// rs1==f30, rs2==f28, rs3==f25, rd==f16, fs1 == 0 and fe1 == 0x01 and fm1 == 0x03b and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3db and fs3 == 0 and fe3 == 0x01 and fm3 == 0x03f and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f28; op3:f25; dest:f16; op1val:0x43b; op2val:0xbfdb; op3val:0x43f; valaddr_reg:x16; val_offset:156; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f16, f30, f28, f25, 0x0, 0, x16, 156, x17, x15, 260, x18)

inst_27:
// rs1==f11, rs2==f5, rs3==f24, rd==f15, fs1 == 0 and fe1 == 0x01 and fm1 == 0x016 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x00f and fs3 == 0 and fe3 == 0x01 and fm3 == 0x043 and rm_val == 0  
// opcode: fmadd.h ; op1:f11; op2:f5; op3:f24; dest:f15; op1val:0x416; op2val:0xc00f; op3val:0x443; valaddr_reg:x16; val_offset:162; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f15, f11, f5, f24, 0x0, 0, x16, 162, x17, x15, 270, x18)

inst_28:
// rs1==f12, rs2==f16, rs3==f13, rd==f28, fs1 == 0 and fe1 == 0x01 and fm1 == 0x03b and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3df and fs3 == 0 and fe3 == 0x01 and fm3 == 0x050 and rm_val == 0  
// opcode: fmadd.h ; op1:f12; op2:f16; op3:f13; dest:f28; op1val:0x43b; op2val:0xbfdf; op3val:0x450; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f28, f12, f16, f13, 0x0, 0, x16, 168, x17, x15, 280, x18)

inst_29:
// rs1==f0, rs2==f14, rs3==f2, rd==f23, fs1 == 0 and fe1 == 0x01 and fm1 == 0x026 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3ca and fs3 == 0 and fe3 == 0x01 and fm3 == 0x013 and rm_val == 0  
// opcode: fmadd.h ; op1:f0; op2:f14; op3:f2; dest:f23; op1val:0x426; op2val:0xbfca; op3val:0x413; valaddr_reg:x16; val_offset:174; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f23, f0, f14, f2, 0x0, 0, x16, 174, x17, x15, 290, x18)

inst_30:
// rs1==f3, rs2==f10, rs3==f7, rd==f29, fs1 == 0 and fe1 == 0x01 and fm1 == 0x008 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x013 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x036 and rm_val == 0  
// opcode: fmadd.h ; op1:f3; op2:f10; op3:f7; dest:f29; op1val:0x408; op2val:0xc013; op3val:0x436; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f29, f3, f10, f7, 0x0, 0, x16, 180, x17, x15, 300, x18)

inst_31:
// rs1==f21, rs2==f4, rs3==f28, rd==f24, fs1 == 0 and fe1 == 0x01 and fm1 == 0x030 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x357 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x014 and rm_val == 0  
// opcode: fmadd.h ; op1:f21; op2:f4; op3:f28; dest:f24; op1val:0x430; op2val:0x3757; op3val:0x414; valaddr_reg:x16; val_offset:186; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f24, f21, f4, f28, 0x0, 0, x16, 186, x17, x15, 310, x18)

inst_32:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x016 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x21e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x038 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x416; op2val:0x321e; op3val:0x438; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 192, x17, x15, 320, x18)

inst_33:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x035 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2c6 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00e and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x435; op2val:0x2ec6; op3val:0x40e; valaddr_reg:x16; val_offset:198; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 198, x17, x15, 330, x18)

inst_34:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x011 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x02e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x051 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x411; op2val:0xa42e; op3val:0x451; valaddr_reg:x16; val_offset:204; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 204, x17, x15, 340, x18)

inst_35:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x05e and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0b1 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x049 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x45e; op2val:0xa8b1; op3val:0x449; valaddr_reg:x16; val_offset:210; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 210, x17, x15, 350, x18)

inst_36:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x01b and fs2 == 1 and fe2 == 0x04 and fm2 == 0x3cb and fs3 == 0 and fe3 == 0x01 and fm3 == 0x011 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x41b; op2val:0x93cb; op3val:0x411; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 216, x17, x15, 360, x18)

inst_37:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x040 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x01e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x02b and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x440; op2val:0xa81e; op3val:0x42b; valaddr_reg:x16; val_offset:222; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 222, x17, x15, 370, x18)

inst_38:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x052 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x368 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x005 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x452; op2val:0x9368; op3val:0x405; valaddr_reg:x16; val_offset:228; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 228, x17, x15, 380, x18)

inst_39:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x013 and fs2 == 1 and fe2 == 0x07 and fm2 == 0x1e4 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x008 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x413; op2val:0x9de4; op3val:0x408; valaddr_reg:x16; val_offset:234; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 234, x17, x15, 390, x18)

inst_40:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x054 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x21f and fs3 == 0 and fe3 == 0x01 and fm3 == 0x036 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x454; op2val:0xaa1f; op3val:0x436; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 240, x17, x15, 400, x18)

inst_41:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x021 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x051 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03b and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x21; op2val:0xcc51; op3val:0x3b; valaddr_reg:x16; val_offset:246; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 246, x17, x15, 410, x18)

inst_42:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04d and fs2 == 1 and fe2 == 0x12 and fm2 == 0x145 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02d and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4d; op2val:0xc945; op3val:0x2d; valaddr_reg:x16; val_offset:252; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 252, x17, x15, 420, x18)

inst_43:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01f and fs2 == 1 and fe2 == 0x13 and fm2 == 0x3fb and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05f and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x1f; op2val:0xcffb; op3val:0x5f; valaddr_reg:x16; val_offset:258; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 258, x17, x15, 430, x18)

inst_44:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x034 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x0a2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x005 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x34; op2val:0xcca2; op3val:0x5; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 264, x17, x15, 440, x18)

inst_45:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04d and fs2 == 1 and fe2 == 0x12 and fm2 == 0x2e2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x045 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4d; op2val:0xcae2; op3val:0x45; valaddr_reg:x16; val_offset:270; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 270, x17, x15, 450, x18)

inst_46:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x007 and fs2 == 1 and fe2 == 0x16 and fm2 == 0x08b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00b and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7; op2val:0xd88b; op3val:0xb; valaddr_reg:x16; val_offset:276; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 276, x17, x15, 460, x18)

inst_47:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x015 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x298 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05d and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x15; op2val:0xd298; op3val:0x5d; valaddr_reg:x16; val_offset:282; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 282, x17, x15, 470, x18)

inst_48:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x028 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x2c1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03e and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x28; op2val:0xcec1; op3val:0x3e; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 288, x17, x15, 480, x18)

inst_49:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05d and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1f7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x059 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5d; op2val:0xc9f7; op3val:0x59; valaddr_reg:x16; val_offset:294; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 294, x17, x15, 490, x18)

inst_50:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x051 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x26e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x014 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x51; op2val:0xca6e; op3val:0x14; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 300, x17, x15, 500, x18)

inst_51:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x017 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x16f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00b and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x17; op2val:0x4d6f; op3val:0xb; valaddr_reg:x16; val_offset:306; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 306, x17, x15, 510, x18)

inst_52:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x029 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x06e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x028 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x29; op2val:0x4c6e; op3val:0x28; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 312, x17, x15, 520, x18)

inst_53:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x028 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x10b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x058 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x28; op2val:0x4d0b; op3val:0x58; valaddr_reg:x16; val_offset:318; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 318, x17, x15, 530, x18)

inst_54:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x046 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x2c3 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00c and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x46; op2val:0x4ac3; op3val:0xc; valaddr_reg:x16; val_offset:324; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 324, x17, x15, 540, x18)

inst_55:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x024 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x241 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05a and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x24; op2val:0x4e41; op3val:0x5a; valaddr_reg:x16; val_offset:330; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 330, x17, x15, 550, x18)

inst_56:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x013 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x255 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02c and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x13; op2val:0x5255; op3val:0x2c; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 336, x17, x15, 560, x18)

inst_57:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04f and fs2 == 0 and fe2 == 0x12 and fm2 == 0x220 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02f and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4f; op2val:0x4a20; op3val:0x2f; valaddr_reg:x16; val_offset:342; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 342, x17, x15, 570, x18)

inst_58:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02c and fs2 == 0 and fe2 == 0x13 and fm2 == 0x16a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x042 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2c; op2val:0x4d6a; op3val:0x42; valaddr_reg:x16; val_offset:348; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 348, x17, x15, 580, x18)

inst_59:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00c and fs2 == 0 and fe2 == 0x15 and fm2 == 0x12d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01b and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0xc; op2val:0x552d; op3val:0x1b; valaddr_reg:x16; val_offset:354; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 354, x17, x15, 590, x18)

inst_60:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x005 and fs2 == 0 and fe2 == 0x16 and fm2 == 0x209 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x038 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5; op2val:0x5a09; op3val:0x38; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 360, x17, x15, 600, x18)

inst_61:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x030 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1bd and fs3 == 0 and fe3 == 0x00 and fm3 == 0x026 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x30; op2val:0xc9bd; op3val:0x26; valaddr_reg:x16; val_offset:366; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 366, x17, x15, 610, x18)

inst_62:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04c and fs2 == 1 and fe2 == 0x11 and fm2 == 0x0a5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x060 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4c; op2val:0xc4a5; op3val:0x60; valaddr_reg:x16; val_offset:372; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 372, x17, x15, 620, x18)

inst_63:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03c and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0c4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00e and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c; op2val:0xc0c4; op3val:0xe; valaddr_reg:x16; val_offset:378; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 378, x17, x15, 630, x18)

inst_64:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x044 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1c3 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x021 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x44; op2val:0xbdc3; op3val:0x21; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 384, x17, x15, 640, x18)

inst_65:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x042 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x0c9 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02e and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x42; op2val:0xbcc9; op3val:0x2e; valaddr_reg:x16; val_offset:390; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 390, x17, x15, 650, x18)

inst_66:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03c and fs2 == 1 and fe2 == 0x0f and fm2 == 0x022 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02d and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c; op2val:0xbc22; op3val:0x2d; valaddr_reg:x16; val_offset:396; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 396, x17, x15, 660, x18)

inst_67:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x061 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2c3 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x020 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x61; op2val:0xb6c3; op3val:0x20; valaddr_reg:x16; val_offset:402; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 402, x17, x15, 670, x18)

inst_68:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01a and fs2 == 1 and fe2 == 0x0e and fm2 == 0x276 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x010 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x1a; op2val:0xba76; op3val:0x10; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 408, x17, x15, 680, x18)

inst_69:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x018 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x2ea and fs3 == 0 and fe3 == 0x00 and fm3 == 0x050 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x18; op2val:0xc2ea; op3val:0x50; valaddr_reg:x16; val_offset:414; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 414, x17, x15, 690, x18)

inst_70:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x006 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x3aa and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05b and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6; op2val:0xcbaa; op3val:0x5b; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 420, x17, x15, 700, x18)

inst_71:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x16 and fm2 == 0x31c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03a and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2; op2val:0x5b1c; op3val:0x3a; valaddr_reg:x16; val_offset:426; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 426, x17, x15, 710, x18)

inst_72:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x36d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04b and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x31; op2val:0x436d; op3val:0x4b; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 432, x17, x15, 720, x18)

inst_73:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x036 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x212 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02f and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x36; op2val:0x3e12; op3val:0x2f; valaddr_reg:x16; val_offset:438; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 438, x17, x15, 730, x18)

inst_74:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x047 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3; op2val:0xc000; op3val:0x47; valaddr_reg:x16; val_offset:444; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 444, x17, x15, 740, x18)

inst_75:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x034 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2e; op2val:0xb69b; op3val:0x34; valaddr_reg:x16; val_offset:450; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 450, x17, x15, 750, x18)

inst_76:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x295 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x060 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3; op2val:0xce95; op3val:0x60; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 456, x17, x15, 760, x18)

inst_77:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x008 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x200 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x021 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x8; op2val:0xc200; op3val:0x21; valaddr_reg:x16; val_offset:462; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 462, x17, x15, 770, x18)

inst_78:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05b and fs2 == 1 and fe2 == 0x0c and fm2 == 0x254 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x017 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5b; op2val:0xb254; op3val:0x17; valaddr_reg:x16; val_offset:468; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 468, x17, x15, 780, x18)

inst_79:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03e and fs2 == 1 and fe2 == 0x0e and fm2 == 0x37b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03d and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3e; op2val:0xbb7b; op3val:0x3d; valaddr_reg:x16; val_offset:474; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 474, x17, x15, 790, x18)

inst_80:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x029 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x07c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x018 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x29; op2val:0xb87c; op3val:0x18; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 480, x17, x15, 800, x18)

inst_81:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x03e and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0e1 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x05a and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c3e; op2val:0xc0e1; op3val:0x3c5a; valaddr_reg:x16; val_offset:486; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 486, x17, x15, 810, x18)

inst_82:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x02e and fs2 == 1 and fe2 == 0x10 and fm2 == 0x061 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x028 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c2e; op2val:0xc061; op3val:0x3c28; valaddr_reg:x16; val_offset:492; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 492, x17, x15, 820, x18)

inst_83:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x009 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x04a and fs3 == 0 and fe3 == 0x0f and fm3 == 0x028 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c09; op2val:0xc04a; op3val:0x3c28; valaddr_reg:x16; val_offset:498; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 498, x17, x15, 830, x18)

inst_84:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x05b and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3bc and fs3 == 0 and fe3 == 0x0f and fm3 == 0x02c and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c5b; op2val:0xbfbc; op3val:0x3c2c; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 504, x17, x15, 840, x18)

inst_85:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x04d and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3df and fs3 == 0 and fe3 == 0x0f and fm3 == 0x057 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c4d; op2val:0xbfdf; op3val:0x3c57; valaddr_reg:x16; val_offset:510; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 510, x17, x15, 850, x18)

inst_86:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x04c and fs2 == 1 and fe2 == 0x0f and fm2 == 0x382 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x001 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c4c; op2val:0xbf82; op3val:0x3c01; valaddr_reg:x16; val_offset:516; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 516, x17, x15, 860, x18)

inst_87:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x027 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x003 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x04e and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c27; op2val:0xc003; op3val:0x3c4e; valaddr_reg:x16; val_offset:522; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 522, x17, x15, 870, x18)

inst_88:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x009 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x00e and fs3 == 0 and fe3 == 0x0f and fm3 == 0x02b and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c09; op2val:0xc00e; op3val:0x3c2b; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 528, x17, x15, 880, x18)

inst_89:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x013 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3fe and fs3 == 0 and fe3 == 0x0f and fm3 == 0x022 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c13; op2val:0xbffe; op3val:0x3c22; valaddr_reg:x16; val_offset:534; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 534, x17, x15, 890, x18)

inst_90:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x036 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3af and fs3 == 0 and fe3 == 0x0f and fm3 == 0x016 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c36; op2val:0xbfaf; op3val:0x3c16; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 540, x17, x15, 900, x18)

inst_91:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x003 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x33e and fs3 == 0 and fe3 == 0x0f and fm3 == 0x02f and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c03; op2val:0x373e; op3val:0x3c2f; valaddr_reg:x16; val_offset:546; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 546, x17, x15, 910, x18)

inst_92:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x032 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x277 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x027 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c32; op2val:0x3277; op3val:0x3c27; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 552, x17, x15, 920, x18)

inst_93:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x059 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x1dd and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01a and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c59; op2val:0x2ddd; op3val:0x3c1a; valaddr_reg:x16; val_offset:558; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 558, x17, x15, 930, x18)

inst_94:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x01b and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0df and fs3 == 0 and fe3 == 0x0f and fm3 == 0x018 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c1b; op2val:0x28df; op3val:0x3c18; valaddr_reg:x16; val_offset:564; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 564, x17, x15, 940, x18)

inst_95:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x057 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x1a5 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x051 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c57; op2val:0xa9a5; op3val:0x3c51; valaddr_reg:x16; val_offset:570; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 570, x17, x15, 950, x18)

inst_96:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x01a and fs2 == 1 and fe2 == 0x0a and fm2 == 0x295 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x046 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c1a; op2val:0xaa95; op3val:0x3c46; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 576, x17, x15, 960, x18)

inst_97:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x026 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x3f4 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x029 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c26; op2val:0xa7f4; op3val:0x3c29; valaddr_reg:x16; val_offset:582; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 582, x17, x15, 970, x18)

inst_98:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x016 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x067 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x016 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c16; op2val:0xa467; op3val:0x3c16; valaddr_reg:x16; val_offset:588; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 588, x17, x15, 980, x18)

inst_99:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x01b and fs2 == 1 and fe2 == 0x09 and fm2 == 0x255 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01c and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c1b; op2val:0xa655; op3val:0x3c1c; valaddr_reg:x16; val_offset:594; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 594, x17, x15, 990, x18)

inst_100:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0f0 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x001 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c01; op2val:0xf0; op3val:0x3c01; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 600, x17, x15, 1000, x18)

inst_101:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x011 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x3c7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x011 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x11; op2val:0xcfc7; op3val:0x11; valaddr_reg:x16; val_offset:606; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 606, x17, x15, 1010, x18)

inst_102:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x050 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x3d3 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x039 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x50; op2val:0xc3d3; op3val:0x39; valaddr_reg:x16; val_offset:612; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 612, x17, x15, 1020, x18)

inst_103:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1c7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x050 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x12; op2val:0xc9c7; op3val:0x50; valaddr_reg:x16; val_offset:618; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 618, x17, x15, 1030, x18)

inst_104:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x062 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x20a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00a and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x62; op2val:0xba0a; op3val:0xa; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 624, x17, x15, 1040, x18)

inst_105:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x032 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x03d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x015 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x32; op2val:0xbc3d; op3val:0x15; valaddr_reg:x16; val_offset:630; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 630, x17, x15, 1050, x18)

inst_106:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x018 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x0ca and fs3 == 0 and fe3 == 0x00 and fm3 == 0x063 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x18; op2val:0xc4ca; op3val:0x63; valaddr_reg:x16; val_offset:636; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 636, x17, x15, 1060, x18)

inst_107:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x035 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2a4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x024 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x35; op2val:0xbaa4; op3val:0x24; valaddr_reg:x16; val_offset:642; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 642, x17, x15, 1070, x18)

inst_108:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05e and fs2 == 1 and fe2 == 0x0d and fm2 == 0x172 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01c and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5e; op2val:0xb572; op3val:0x1c; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 648, x17, x15, 1080, x18)

inst_109:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x020 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x002 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x20; op2val:0xb000; op3val:0x2; valaddr_reg:x16; val_offset:654; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 654, x17, x15, 1090, x18)

inst_110:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00e and fs2 == 1 and fe2 == 0x11 and fm2 == 0x15b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04a and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0xe; op2val:0xc55b; op3val:0x4a; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 660, x17, x15, 1100, x18)

inst_111:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x082 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x046 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x31; op2val:0x4882; op3val:0x46; valaddr_reg:x16; val_offset:666; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 666, x17, x15, 1110, x18)

inst_112:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03d and fs2 == 0 and fe2 == 0x10 and fm2 == 0x358 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x020 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3d; op2val:0x4358; op3val:0x20; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 672, x17, x15, 1120, x18)

inst_113:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00f and fs2 == 0 and fe2 == 0x11 and fm2 == 0x155 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x030 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0xf; op2val:0x4555; op3val:0x30; valaddr_reg:x16; val_offset:678; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 678, x17, x15, 1130, x18)

inst_114:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x007 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x224 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x015 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7; op2val:0x4624; op3val:0x15; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 684, x17, x15, 1140, x18)

inst_115:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x020 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x280 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x054 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x20; op2val:0xbe80; op3val:0x54; valaddr_reg:x16; val_offset:690; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 690, x17, x15, 1150, x18)

inst_116:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x180 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03c and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4; op2val:0xc980; op3val:0x3c; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 696, x17, x15, 1160, x18)

inst_117:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x054 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1b6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x044 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x54; op2val:0xb9b6; op3val:0x44; valaddr_reg:x16; val_offset:702; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 702, x17, x15, 1170, x18)

inst_118:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x059 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x017 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05f and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x59; op2val:0xbc17; op3val:0x5f; valaddr_reg:x16; val_offset:708; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 708, x17, x15, 1180, x18)

inst_119:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x369 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02e and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f; op2val:0xb769; op3val:0x2e; valaddr_reg:x16; val_offset:714; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 714, x17, x15, 1190, x18)

inst_120:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x047 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x783d; op2val:0xc0d9; op3val:0x7847; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_121:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x054 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x15a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x017 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7854; op2val:0xc15a; op3val:0x7817; valaddr_reg:x16; val_offset:726; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 726, x17, x15, 1210, x18)

inst_122:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x026 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1be and fs3 == 0 and fe3 == 0x1e and fm3 == 0x02c and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7826; op2val:0xc1be; op3val:0x782c; valaddr_reg:x16; val_offset:732; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 732, x17, x15, 1220, x18)

inst_123:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x059 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1a0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05c and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7859; op2val:0xc1a0; op3val:0x785c; valaddr_reg:x16; val_offset:738; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 738, x17, x15, 1230, x18)

inst_124:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x022 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f6 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x063 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7822; op2val:0xc1f6; op3val:0x7863; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 744, x17, x15, 1240, x18)

inst_125:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x024 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e5 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x03f and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7824; op2val:0xc1e5; op3val:0x783f; valaddr_reg:x16; val_offset:750; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 750, x17, x15, 1250, x18)

inst_126:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x062 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x18b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x028 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7862; op2val:0xc18b; op3val:0x7828; valaddr_reg:x16; val_offset:756; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 756, x17, x15, 1260, x18)

inst_127:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x34c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x005 and rm_val == 0  
// opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7855; op2val:0x374c; op3val:0x7805; valaddr_reg:x16; val_offset:762; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 762, x17, x15, 1270, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.hword 0x50
.hword 0xb666
.hword 0x21
.hword 0x783d
.hword 0xc0d9
.hword 0xc0d9
.hword 0x784b
.hword 0xc120
.hword 0x7802
.hword 0x7854
.hword 0xc15a
.hword 0x7854
.hword 0x7826
.hword 0x7826
.hword 0x782c
.hword 0x7859
.hword 0x7859
.hword 0x7859
.hword 0x7822
.hword 0x7822
.hword 0x7863
.hword 0x7824
.hword 0x7824
.hword 0x7824
.hword 0x785b
.hword 0xc1a7
.hword 0x7856
.hword 0x782f
.hword 0xc1dd
.hword 0x7848
.hword 0x7862
.hword 0xc18b
.hword 0x7862
.hword 0x7855
.hword 0x374c
.hword 0x374c
.hword 0x7859
.hword 0x38f7
.hword 0x784c
.hword 0x7809
.hword 0x3a93
.hword 0x782e
.hword 0x7841
.hword 0x3ab3
.hword 0x782f
.hword 0x7842
.hword 0x3ac0
.hword 0x7847
.hword 0x783f
.hword 0x3b27
.hword 0x7823
.hword 0x7818
.hword 0x3ba8
.hword 0x780c
.hword 0x7840
.hword 0x3b2b
.hword 0x782c
.hword 0x7817
.hword 0x3b2e
.hword 0x7851
.hword 0x7831
.hword 0x3b1a
.hword 0x7845
.hword 0x413
.hword 0xc0f0
.hword 0x40f
.hword 0x43d
.hword 0xc057
.hword 0x434
.hword 0x424
.hword 0xc02d
.hword 0x426
.hword 0x429
.hword 0xc015
.hword 0x43e
.hword 0x459
.hword 0xbfd0
.hword 0x45e
.hword 0x43b
.hword 0xbfdb
.hword 0x43f
.hword 0x416
.hword 0xc00f
.hword 0x443
.hword 0x43b
.hword 0xbfdf
.hword 0x450
.hword 0x426
.hword 0xbfca
.hword 0x413
.hword 0x408
.hword 0xc013
.hword 0x436
.hword 0x430
.hword 0x3757
.hword 0x414
.hword 0x416
.hword 0x321e
.hword 0x438
.hword 0x435
.hword 0x2ec6
.hword 0x40e
.hword 0x411
.hword 0xa42e
.hword 0x451
.hword 0x45e
.hword 0xa8b1
.hword 0x449
.hword 0x41b
.hword 0x93cb
.hword 0x411
.hword 0x440
.hword 0xa81e
.hword 0x42b
.hword 0x452
.hword 0x9368
.hword 0x405
.hword 0x413
.hword 0x9de4
.hword 0x408
.hword 0x454
.hword 0xaa1f
.hword 0x436
.hword 0x21
.hword 0xcc51
.hword 0x3b
.hword 0x4d
.hword 0xc945
.hword 0x2d
.hword 0x1f
.hword 0xcffb
.hword 0x5f
.hword 0x34
.hword 0xcca2
.hword 0x5
.hword 0x4d
.hword 0xcae2
.hword 0x45
.hword 0x7
.hword 0xd88b
.hword 0xb
.hword 0x15
.hword 0xd298
.hword 0x5d
.hword 0x28
.hword 0xcec1
.hword 0x3e
.hword 0x5d
.hword 0xc9f7
.hword 0x59
.hword 0x51
.hword 0xca6e
.hword 0x14
.hword 0x17
.hword 0x4d6f
.hword 0xb
.hword 0x29
.hword 0x4c6e
.hword 0x28
.hword 0x28
.hword 0x4d0b
.hword 0x58
.hword 0x46
.hword 0x4ac3
.hword 0xc
.hword 0x24
.hword 0x4e41
.hword 0x5a
.hword 0x13
.hword 0x5255
.hword 0x2c
.hword 0x4f
.hword 0x4a20
.hword 0x2f
.hword 0x2c
.hword 0x4d6a
.hword 0x42
.hword 0xc
.hword 0x552d
.hword 0x1b
.hword 0x5
.hword 0x5a09
.hword 0x38
.hword 0x30
.hword 0xc9bd
.hword 0x26
.hword 0x4c
.hword 0xc4a5
.hword 0x60
.hword 0x3c
.hword 0xc0c4
.hword 0xe
.hword 0x44
.hword 0xbdc3
.hword 0x21
.hword 0x42
.hword 0xbcc9
.hword 0x2e
.hword 0x3c
.hword 0xbc22
.hword 0x2d
.hword 0x61
.hword 0xb6c3
.hword 0x20
.hword 0x1a
.hword 0xba76
.hword 0x10
.hword 0x18
.hword 0xc2ea
.hword 0x50
.hword 0x6
.hword 0xcbaa
.hword 0x5b
.hword 0x2
.hword 0x5b1c
.hword 0x3a
.hword 0x31
.hword 0x436d
.hword 0x4b
.hword 0x36
.hword 0x3e12
.hword 0x2f
.hword 0x3
.hword 0xc000
.hword 0x47
.hword 0x2e
.hword 0xb69b
.hword 0x34
.hword 0x3
.hword 0xce95
.hword 0x60
.hword 0x8
.hword 0xc200
.hword 0x21
.hword 0x5b
.hword 0xb254
.hword 0x17
.hword 0x3e
.hword 0xbb7b
.hword 0x3d
.hword 0x29
.hword 0xb87c
.hword 0x18
.hword 0x3c3e
.hword 0xc0e1
.hword 0x3c5a
.hword 0x3c2e
.hword 0xc061
.hword 0x3c28
.hword 0x3c09
.hword 0xc04a
.hword 0x3c28
.hword 0x3c5b
.hword 0xbfbc
.hword 0x3c2c
.hword 0x3c4d
.hword 0xbfdf
.hword 0x3c57
.hword 0x3c4c
.hword 0xbf82
.hword 0x3c01
.hword 0x3c27
.hword 0xc003
.hword 0x3c4e
.hword 0x3c09
.hword 0xc00e
.hword 0x3c2b
.hword 0x3c13
.hword 0xbffe
.hword 0x3c22
.hword 0x3c36
.hword 0xbfaf
.hword 0x3c16
.hword 0x3c03
.hword 0x373e
.hword 0x3c2f
.hword 0x3c32
.hword 0x3277
.hword 0x3c27
.hword 0x3c59
.hword 0x2ddd
.hword 0x3c1a
.hword 0x3c1b
.hword 0x28df
.hword 0x3c18
.hword 0x3c57
.hword 0xa9a5
.hword 0x3c51
.hword 0x3c1a
.hword 0xaa95
.hword 0x3c46
.hword 0x3c26
.hword 0xa7f4
.hword 0x3c29
.hword 0x3c16
.hword 0xa467
.hword 0x3c16
.hword 0x3c1b
.hword 0xa655
.hword 0x3c1c
.hword 0x3c01
.hword 0xf0
.hword 0x3c01
.hword 0x11
.hword 0xcfc7
.hword 0x11
.hword 0x50
.hword 0xc3d3
.hword 0x39
.hword 0x12
.hword 0xc9c7
.hword 0x50
.hword 0x62
.hword 0xba0a
.hword 0xa
.hword 0x32
.hword 0xbc3d
.hword 0x15
.hword 0x18
.hword 0xc4ca
.hword 0x63
.hword 0x35
.hword 0xbaa4
.hword 0x24
.hword 0x5e
.hword 0xb572
.hword 0x1c
.hword 0x20
.hword 0xb000
.hword 0x2
.hword 0xe
.hword 0xc55b
.hword 0x4a
.hword 0x31
.hword 0x4882
.hword 0x46
.hword 0x3d
.hword 0x4358
.hword 0x20
.hword 0xf
.hword 0x4555
.hword 0x30
.hword 0x7
.hword 0x4624
.hword 0x15
.hword 0x20
.hword 0xbe80
.hword 0x54
.hword 0x4
.hword 0xc980
.hword 0x3c
.hword 0x54
.hword 0xb9b6
.hword 0x44
.hword 0x59
.hword 0xbc17
.hword 0x5f
.hword 0x5f
.hword 0xb769
.hword 0x2e
.hword 0x783d
.hword 0xc0d9
.hword 0x7847
.hword 0x7854
.hword 0xc15a
.hword 0x7817
.hword 0x7826
.hword 0xc1be
.hword 0x782c
.hword 0x7859
.hword 0xc1a0
.hword 0x785c
.hword 0x7822
.hword 0xc1f6
.hword 0x7863
.hword 0x7824
.hword 0xc1e5
.hword 0x783f
.hword 0x7862
.hword 0xc18b
.hword 0x7828
.hword 0x7855
.hword 0x374c
.hword 0x7805
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 256*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
