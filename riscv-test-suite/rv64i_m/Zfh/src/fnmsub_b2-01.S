
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.6.0
// timestamp : Mon Feb 14 07:47:35 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/zeusprime/riscv-project/riscof_zfh_env/tests/ctg_test/dataset.cgf \
//                  --cgf /home/zeusprime/riscv-project/riscof_zfh_env/tests/ctg_test/rv64f_zfhfull.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.h instruction of the RISC-V RV64FZfh extension for the fnmsub_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFZfh")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*F.*Zfh.*);def TEST_CASE_1=True;",fnmsub_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f19, rs2==f16, rs3==f26, rd==f26, fs1 == 0 and fe1 == 0x00 and fm1 == 0x01e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x288 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x030 and rm_val == 0  
// opcode: fnmsub.h ; op1:f19; op2:f16; op3:f26; dest:f26; op1val:0x1e; op2val:0xbe88; op3val:0x30; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f26, f19, f16, f26, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f16, rs2==f22, rs3==f22, rd==f2, fs1 == 0 and fe1 == 0x1e and fm1 == 0x05b and fs2 == 0 and fe2 == 0x0d and fm2 == 0x249 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x049 and rm_val == 0  
// opcode: fnmsub.h ; op1:f16; op2:f22; op3:f22; dest:f2; op1val:0x785b; op2val:0x3649; op3val:0x3649; valaddr_reg:x16; val_offset:6; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f2, f16, f22, f22, 0x0, 0, x16, 6, x17, x15, 10, x18)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f14, rs2==f29, rs3==f8, rd==f14, fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 0 and fe2 == 0x0e and fm2 == 0x119 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x041 and rm_val == 0  
// opcode: fnmsub.h ; op1:f14; op2:f29; op3:f8; dest:f14; op1val:0x784d; op2val:0x3919; op3val:0x7841; valaddr_reg:x16; val_offset:12; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f14, f14, f29, f8, 0x0, 0, x16, 12, x17, x15, 20, x18)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f2, rs2==f13, rs3==f2, rd==f17, fs1 == 0 and fe1 == 0x1e and fm1 == 0x060 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x1b3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x061 and rm_val == 0  
// opcode: fnmsub.h ; op1:f2; op2:f13; op3:f2; dest:f17; op1val:0x7860; op2val:0x39b3; op3val:0x7860; valaddr_reg:x16; val_offset:18; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f17, f2, f13, f2, 0x0, 0, x16, 18, x17, x15, 30, x18)

inst_4:
// rs1 == rs2 == rd != rs3, rs1==f20, rs2==f20, rs3==f28, rd==f20, fs1 == 0 and fe1 == 0x1e and fm1 == 0x044 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2f0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00c and rm_val == 0  
// opcode: fnmsub.h ; op1:f20; op2:f20; op3:f28; dest:f20; op1val:0x7844; op2val:0x7844; op3val:0x780c; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f20, f20, f20, f28, 0x0, 0, x16, 24, x17, x15, 40, x18)

inst_5:
// rs1 == rs2 == rs3 == rd, rs1==f4, rs2==f4, rs3==f4, rd==f4, fs1 == 0 and fe1 == 0x1e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2fb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x038 and rm_val == 0  
// opcode: fnmsub.h ; op1:f4; op2:f4; op3:f4; dest:f4; op1val:0x782f; op2val:0x782f; op3val:0x782f; valaddr_reg:x16; val_offset:30; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f4, f4, f4, f4, 0x0, 0, x16, 30, x17, x15, 50, x18)

inst_6:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f8, rs2==f8, rs3==f18, rd==f9, fs1 == 0 and fe1 == 0x1e and fm1 == 0x003 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x330 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x054 and rm_val == 0  
// opcode: fnmsub.h ; op1:f8; op2:f8; op3:f18; dest:f9; op1val:0x7803; op2val:0x7803; op3val:0x7854; valaddr_reg:x16; val_offset:36; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f9, f8, f8, f18, 0x0, 0, x16, 36, x17, x15, 60, x18)

inst_7:
// rs1 == rs2 == rs3 != rd, rs1==f9, rs2==f9, rs3==f9, rd==f28, fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2cd and fs3 == 0 and fe3 == 0x1e and fm3 == 0x04f and rm_val == 0  
// opcode: fnmsub.h ; op1:f9; op2:f9; op3:f9; dest:f28; op1val:0x784d; op2val:0x784d; op3val:0x784d; valaddr_reg:x16; val_offset:42; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f28, f9, f9, f9, 0x0, 0, x16, 42, x17, x15, 70, x18)

inst_8:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f21, rs2==f11, rs3==f0, rd==f11, fs1 == 0 and fe1 == 0x1e and fm1 == 0x001 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x33e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05b and rm_val == 0  
// opcode: fnmsub.h ; op1:f21; op2:f11; op3:f0; dest:f11; op1val:0x7801; op2val:0x3b3e; op3val:0x785b; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f11, f21, f11, f0, 0x0, 0, x16, 48, x17, x15, 80, x18)

inst_9:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f26, rs2==f19, rs3==f10, rd==f13, fs1 == 0 and fe1 == 0x1e and fm1 == 0x01c and fs2 == 0 and fe2 == 0x0e and fm2 == 0x30e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05d and rm_val == 0  
// opcode: fnmsub.h ; op1:f26; op2:f19; op3:f10; dest:f13; op1val:0x781c; op2val:0x3b0e; op3val:0x785d; valaddr_reg:x16; val_offset:54; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f13, f26, f19, f10, 0x0, 0, x16, 54, x17, x15, 90, x18)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==f1, rs2==f26, rs3==f1, rd==f1, fs1 == 0 and fe1 == 0x1e and fm1 == 0x00f and fs2 == 0 and fe2 == 0x0e and fm2 == 0x3c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00e and rm_val == 0  
// opcode: fnmsub.h ; op1:f1; op2:f26; op3:f1; dest:f1; op1val:0x780f; op2val:0x3bc2; op3val:0x780f; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f1, f1, f26, f1, 0x0, 0, x16, 60, x17, x15, 100, x18)

inst_11:
// rd == rs2 == rs3 != rs1, rs1==f12, rs2==f23, rs3==f23, rd==f23, fs1 == 0 and fe1 == 0x1e and fm1 == 0x007 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x113 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x03a and rm_val == 0  
// opcode: fnmsub.h ; op1:f12; op2:f23; op3:f23; dest:f23; op1val:0x7807; op2val:0xc113; op3val:0xc113; valaddr_reg:x16; val_offset:66; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f23, f12, f23, f23, 0x0, 0, x16, 66, x17, x15, 110, x18)

inst_12:
// rs1==f11, rs2==f2, rs3==f19, rd==f10, fs1 == 0 and fe1 == 0x1e and fm1 == 0x007 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x182 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x01a and rm_val == 0  
// opcode: fnmsub.h ; op1:f11; op2:f2; op3:f19; dest:f10; op1val:0x7807; op2val:0xc182; op3val:0x781a; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f10, f11, f2, f19, 0x0, 0, x16, 72, x17, x15, 120, x18)

inst_13:
// rs1==f24, rs2==f30, rs3==f11, rd==f18, fs1 == 0 and fe1 == 0x1e and fm1 == 0x03b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x17d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x01d and rm_val == 0  
// opcode: fnmsub.h ; op1:f24; op2:f30; op3:f11; dest:f18; op1val:0x783b; op2val:0xc17d; op3val:0x781d; valaddr_reg:x16; val_offset:78; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f18, f24, f30, f11, 0x0, 0, x16, 78, x17, x15, 130, x18)

inst_14:
// rs1==f10, rs2==f12, rs3==f21, rd==f30, fs1 == 0 and fe1 == 0x1e and fm1 == 0x033 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1ae and fs3 == 0 and fe3 == 0x1e and fm3 == 0x02f and rm_val == 0  
// opcode: fnmsub.h ; op1:f10; op2:f12; op3:f21; dest:f30; op1val:0x7833; op2val:0xc1ae; op3val:0x782f; valaddr_reg:x16; val_offset:84; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f30, f10, f12, f21, 0x0, 0, x16, 84, x17, x15, 140, x18)

inst_15:
// rs1==f22, rs2==f24, rs3==f13, rd==f7, fs1 == 0 and fe1 == 0x1e and fm1 == 0x03d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1bc and fs3 == 0 and fe3 == 0x1e and fm3 == 0x049 and rm_val == 0  
// opcode: fnmsub.h ; op1:f22; op2:f24; op3:f13; dest:f7; op1val:0x783d; op2val:0xc1bc; op3val:0x7849; valaddr_reg:x16; val_offset:90; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f7, f22, f24, f13, 0x0, 0, x16, 90, x17, x15, 150, x18)

inst_16:
// rs1==f3, rs2==f31, rs3==f15, rd==f24, fs1 == 0 and fe1 == 0x1e and fm1 == 0x00c and fs2 == 1 and fe2 == 0x10 and fm2 == 0x213 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05c and rm_val == 0  
// opcode: fnmsub.h ; op1:f3; op2:f31; op3:f15; dest:f24; op1val:0x780c; op2val:0xc213; op3val:0x785c; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f24, f3, f31, f15, 0x0, 0, x16, 96, x17, x15, 160, x18)

inst_17:
// rs1==f30, rs2==f1, rs3==f7, rd==f25, fs1 == 0 and fe1 == 0x1e and fm1 == 0x042 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1ca and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05d and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f1; op3:f7; dest:f25; op1val:0x7842; op2val:0xc1ca; op3val:0x785d; valaddr_reg:x16; val_offset:102; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f25, f30, f1, f7, 0x0, 0, x16, 102, x17, x15, 170, x18)

inst_18:
// rs1==f17, rs2==f28, rs3==f16, rd==f19, fs1 == 0 and fe1 == 0x1e and fm1 == 0x05d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x197 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x039 and rm_val == 0  
// opcode: fnmsub.h ; op1:f17; op2:f28; op3:f16; dest:f19; op1val:0x785d; op2val:0xc197; op3val:0x7839; valaddr_reg:x16; val_offset:108; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f19, f17, f28, f16, 0x0, 0, x16, 108, x17, x15, 180, x18)

inst_19:
// rs1==f13, rs2==f15, rs3==f30, rd==f21, fs1 == 0 and fe1 == 0x1e and fm1 == 0x053 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x193 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x011 and rm_val == 0  
// opcode: fnmsub.h ; op1:f13; op2:f15; op3:f30; dest:f21; op1val:0x7853; op2val:0xc193; op3val:0x7811; valaddr_reg:x16; val_offset:114; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f21, f13, f15, f30, 0x0, 0, x16, 114, x17, x15, 190, x18)

inst_20:
// rs1==f7, rs2==f14, rs3==f20, rd==f31, fs1 == 0 and fe1 == 0x1e and fm1 == 0x05d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x199 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x03a and rm_val == 0  
// opcode: fnmsub.h ; op1:f7; op2:f14; op3:f20; dest:f31; op1val:0x785d; op2val:0xc199; op3val:0x783a; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f7, f14, f20, 0x0, 0, x16, 120, x17, x15, 200, x18)

inst_21:
// rs1==f23, rs2==f17, rs3==f29, rd==f5, fs1 == 0 and fe1 == 0x01 and fm1 == 0x00e and fs2 == 0 and fe2 == 0x0d and fm2 == 0x2bc and fs3 == 0 and fe3 == 0x01 and fm3 == 0x04b and rm_val == 0  
// opcode: fnmsub.h ; op1:f23; op2:f17; op3:f29; dest:f5; op1val:0x40e; op2val:0x36bc; op3val:0x44b; valaddr_reg:x16; val_offset:126; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f5, f23, f17, f29, 0x0, 0, x16, 126, x17, x15, 210, x18)

inst_22:
// rs1==f27, rs2==f25, rs3==f12, rd==f22, fs1 == 0 and fe1 == 0x01 and fm1 == 0x031 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x328 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x010 and rm_val == 0  
// opcode: fnmsub.h ; op1:f27; op2:f25; op3:f12; dest:f22; op1val:0x431; op2val:0x3328; op3val:0x410; valaddr_reg:x16; val_offset:132; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f22, f27, f25, f12, 0x0, 0, x16, 132, x17, x15, 220, x18)

inst_23:
// rs1==f5, rs2==f3, rs3==f25, rd==f12, fs1 == 0 and fe1 == 0x01 and fm1 == 0x03d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x25e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x014 and rm_val == 0  
// opcode: fnmsub.h ; op1:f5; op2:f3; op3:f25; dest:f12; op1val:0x43d; op2val:0x2e5e; op3val:0x414; valaddr_reg:x16; val_offset:138; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f12, f5, f3, f25, 0x0, 0, x16, 138, x17, x15, 230, x18)

inst_24:
// rs1==f25, rs2==f0, rs3==f14, rd==f29, fs1 == 0 and fe1 == 0x01 and fm1 == 0x01d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f0 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x040 and rm_val == 0  
// opcode: fnmsub.h ; op1:f25; op2:f0; op3:f14; dest:f29; op1val:0x41d; op2val:0x2f0; op3val:0x440; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f29, f25, f0, f14, 0x0, 0, x16, 144, x17, x15, 240, x18)

inst_25:
// rs1==f15, rs2==f27, rs3==f5, rd==f6, fs1 == 0 and fe1 == 0x01 and fm1 == 0x01a and fs2 == 1 and fe2 == 0x0a and fm2 == 0x19b and fs3 == 0 and fe3 == 0x01 and fm3 == 0x04e and rm_val == 0  
// opcode: fnmsub.h ; op1:f15; op2:f27; op3:f5; dest:f6; op1val:0x41a; op2val:0xa99b; op3val:0x44e; valaddr_reg:x16; val_offset:150; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f6, f15, f27, f5, 0x0, 0, x16, 150, x17, x15, 250, x18)

inst_26:
// rs1==f28, rs2==f18, rs3==f24, rd==f27, fs1 == 0 and fe1 == 0x01 and fm1 == 0x010 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x0ec and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00b and rm_val == 0  
// opcode: fnmsub.h ; op1:f28; op2:f18; op3:f24; dest:f27; op1val:0x410; op2val:0x1cec; op3val:0x40b; valaddr_reg:x16; val_offset:156; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f27, f28, f18, f24, 0x0, 0, x16, 156, x17, x15, 260, x18)

inst_27:
// rs1==f18, rs2==f10, rs3==f6, rd==f15, fs1 == 0 and fe1 == 0x01 and fm1 == 0x038 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x1ce and fs3 == 0 and fe3 == 0x01 and fm3 == 0x039 and rm_val == 0  
// opcode: fnmsub.h ; op1:f18; op2:f10; op3:f6; dest:f15; op1val:0x438; op2val:0xa9ce; op3val:0x439; valaddr_reg:x16; val_offset:162; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f15, f18, f10, f6, 0x0, 0, x16, 162, x17, x15, 270, x18)

inst_28:
// rs1==f0, rs2==f21, rs3==f31, rd==f8, fs1 == 0 and fe1 == 0x01 and fm1 == 0x017 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0e3 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x02c and rm_val == 0  
// opcode: fnmsub.h ; op1:f0; op2:f21; op3:f31; dest:f8; op1val:0x417; op2val:0xa8e3; op3val:0x42c; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f8, f0, f21, f31, 0x0, 0, x16, 168, x17, x15, 280, x18)

inst_29:
// rs1==f31, rs2==f7, rs3==f17, rd==f3, fs1 == 0 and fe1 == 0x01 and fm1 == 0x04b and fs2 == 1 and fe2 == 0x09 and fm2 == 0x0e4 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x017 and rm_val == 0  
// opcode: fnmsub.h ; op1:f31; op2:f7; op3:f17; dest:f3; op1val:0x44b; op2val:0xa4e4; op3val:0x417; valaddr_reg:x16; val_offset:174; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f3, f31, f7, f17, 0x0, 0, x16, 174, x17, x15, 290, x18)

inst_30:
// rs1==f6, rs2==f5, rs3==f27, rd==f16, fs1 == 0 and fe1 == 0x01 and fm1 == 0x005 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x208 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x062 and rm_val == 0  
// opcode: fnmsub.h ; op1:f6; op2:f5; op3:f27; dest:f16; op1val:0x405; op2val:0xae08; op3val:0x462; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f16, f6, f5, f27, 0x0, 0, x16, 180, x17, x15, 300, x18)

inst_31:
// rs1==f29, rs2==f6, rs3==f3, rd==f0, fs1 == 0 and fe1 == 0x01 and fm1 == 0x008 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x11d and fs3 == 0 and fe3 == 0x01 and fm3 == 0x050 and rm_val == 0  
// opcode: fnmsub.h ; op1:f29; op2:f6; op3:f3; dest:f0; op1val:0x408; op2val:0xc11d; op3val:0x450; valaddr_reg:x16; val_offset:186; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f0, f29, f6, f3, 0x0, 0, x16, 186, x17, x15, 310, x18)

inst_32:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x040 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x048 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x01b and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x440; op2val:0xc048; op3val:0x41b; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 192, x17, x15, 320, x18)

inst_33:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x068 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x053 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x401; op2val:0xc068; op3val:0x453; valaddr_reg:x16; val_offset:198; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 198, x17, x15, 330, x18)

inst_34:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x02a and fs2 == 1 and fe2 == 0x10 and fm2 == 0x00c and fs3 == 0 and fe3 == 0x01 and fm3 == 0x02f and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x42a; op2val:0xc00c; op3val:0x42f; valaddr_reg:x16; val_offset:204; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 204, x17, x15, 340, x18)

inst_35:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x027 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3ff and fs3 == 0 and fe3 == 0x01 and fm3 == 0x02d and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x427; op2val:0xbfff; op3val:0x42d; valaddr_reg:x16; val_offset:210; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 210, x17, x15, 350, x18)

inst_36:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x010 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x027 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x060 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x410; op2val:0xc027; op3val:0x460; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 216, x17, x15, 360, x18)

inst_37:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3ae and fs3 == 0 and fe3 == 0x01 and fm3 == 0x04a and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x455; op2val:0xbfae; op3val:0x44a; valaddr_reg:x16; val_offset:222; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 222, x17, x15, 370, x18)

inst_38:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3df and fs3 == 0 and fe3 == 0x01 and fm3 == 0x032 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x42c; op2val:0xbfdf; op3val:0x432; valaddr_reg:x16; val_offset:228; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 228, x17, x15, 380, x18)

inst_39:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x003 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x006 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x012 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x403; op2val:0xc006; op3val:0x412; valaddr_reg:x16; val_offset:234; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 234, x17, x15, 390, x18)

inst_40:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x009 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x003 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x019 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x409; op2val:0xc003; op3val:0x419; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 240, x17, x15, 400, x18)

inst_41:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x014 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x169 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04e and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x14; op2val:0x4d69; op3val:0x4e; valaddr_reg:x16; val_offset:246; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 246, x17, x15, 410, x18)

inst_42:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 0 and fe2 == 0x12 and fm2 == 0x15d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05b and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3f; op2val:0x495d; op3val:0x5b; valaddr_reg:x16; val_offset:252; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 252, x17, x15, 420, x18)

inst_43:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x014 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x130 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x041 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x14; op2val:0x5130; op3val:0x41; valaddr_reg:x16; val_offset:258; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 258, x17, x15, 430, x18)

inst_44:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x044 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x2b4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02f and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x44; op2val:0x4ab4; op3val:0x2f; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 264, x17, x15, 440, x18)

inst_45:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x062 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x0b6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x043 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x62; op2val:0x48b6; op3val:0x43; valaddr_reg:x16; val_offset:270; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 270, x17, x15, 450, x18)

inst_46:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x1d7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00e and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x55; op2val:0x49d7; op3val:0xe; valaddr_reg:x16; val_offset:276; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 276, x17, x15, 460, x18)

inst_47:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x005 and fs2 == 0 and fe2 == 0x16 and fm2 == 0x246 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00b and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5; op2val:0x5a46; op3val:0xb; valaddr_reg:x16; val_offset:282; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 282, x17, x15, 470, x18)

inst_48:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05c and fs2 == 0 and fe2 == 0x12 and fm2 == 0x177 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00d and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5c; op2val:0x4977; op3val:0xd; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 288, x17, x15, 480, x18)

inst_49:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x009 and fs2 == 0 and fe2 == 0x15 and fm2 == 0x2d5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x025 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x9; op2val:0x56d5; op3val:0x25; valaddr_reg:x16; val_offset:294; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 294, x17, x15, 490, x18)

inst_50:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00b and fs2 == 0 and fe2 == 0x15 and fm2 == 0x160 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04c and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0xb; op2val:0x5560; op3val:0x4c; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 300, x17, x15, 500, x18)

inst_51:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x035 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x154 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x036 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x35; op2val:0xc954; op3val:0x36; valaddr_reg:x16; val_offset:306; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 306, x17, x15, 510, x18)

inst_52:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x049 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1a6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03a and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x49; op2val:0xc9a6; op3val:0x3a; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 312, x17, x15, 520, x18)

inst_53:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x295 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x035 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x12; op2val:0xd295; op3val:0x35; valaddr_reg:x16; val_offset:318; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 318, x17, x15, 530, x18)

inst_54:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x038 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x06a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01e and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x38; op2val:0xcc6a; op3val:0x1e; valaddr_reg:x16; val_offset:324; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 324, x17, x15, 540, x18)

inst_55:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x016 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x20b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x049 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x16; op2val:0xd20b; op3val:0x49; valaddr_reg:x16; val_offset:330; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 330, x17, x15, 550, x18)

inst_56:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x15c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02c and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x31; op2val:0xcd5c; op3val:0x2c; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 336, x17, x15, 560, x18)

inst_57:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x18 and fm2 == 0x059 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x062 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2; op2val:0xe059; op3val:0x62; valaddr_reg:x16; val_offset:342; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 342, x17, x15, 570, x18)

inst_58:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x027 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x2a0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00f and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x27; op2val:0xcea0; op3val:0xf; valaddr_reg:x16; val_offset:348; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 348, x17, x15, 580, x18)

inst_59:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x063 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x143 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x015 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x63; op2val:0xc943; op3val:0x15; valaddr_reg:x16; val_offset:354; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 354, x17, x15, 590, x18)

inst_60:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 1 and fe2 == 0x17 and fm2 == 0x018 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01a and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4; op2val:0xdc18; op3val:0x1a; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 360, x17, x15, 600, x18)

inst_61:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x016 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x0dd and fs3 == 0 and fe3 == 0x00 and fm3 == 0x055 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x16; op2val:0x4cdd; op3val:0x55; valaddr_reg:x16; val_offset:366; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 366, x17, x15, 610, x18)

inst_62:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x033 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0be and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00f and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x33; op2val:0x44be; op3val:0xf; valaddr_reg:x16; val_offset:372; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 372, x17, x15, 620, x18)

inst_63:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x017 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3a6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x055 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x17; op2val:0x3fa6; op3val:0x55; valaddr_reg:x16; val_offset:378; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 378, x17, x15, 630, x18)

inst_64:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05b and fs2 == 0 and fe2 == 0x0b and fm2 == 0x3bc and fs3 == 0 and fe3 == 0x00 and fm3 == 0x036 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5b; op2val:0x2fbc; op3val:0x36; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 384, x17, x15, 640, x18)

inst_65:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3d6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x027 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x31; op2val:0xafd6; op3val:0x27; valaddr_reg:x16; val_offset:390; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 390, x17, x15, 650, x18)

inst_66:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x037 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x021 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x37; op2val:0xb4a7; op3val:0x21; valaddr_reg:x16; val_offset:396; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 396, x17, x15, 660, x18)

inst_67:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x023 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x350 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x005 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x23; op2val:0x2f50; op3val:0x5; valaddr_reg:x16; val_offset:402; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 402, x17, x15, 670, x18)

inst_68:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x05d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01d and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2c; op2val:0xb85d; op3val:0x1d; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 408, x17, x15, 680, x18)

inst_69:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x060 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x026 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2; op2val:0xcc60; op3val:0x26; valaddr_reg:x16; val_offset:414; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 414, x17, x15, 690, x18)

inst_70:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x182 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x020 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2d; op2val:0xb982; op3val:0x20; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 420, x17, x15, 700, x18)

inst_71:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x046 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x3be and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01d and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x46; op2val:0xc7be; op3val:0x1d; valaddr_reg:x16; val_offset:426; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 426, x17, x15, 710, x18)

inst_72:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x041 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x156 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05a and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x41; op2val:0xc556; op3val:0x5a; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 432, x17, x15, 720, x18)

inst_73:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x28a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00a and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x55; op2val:0xbe8a; op3val:0xa; valaddr_reg:x16; val_offset:438; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 438, x17, x15, 730, x18)

inst_74:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x025 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x314 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x042 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x25; op2val:0xc314; op3val:0x42; valaddr_reg:x16; val_offset:444; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 444, x17, x15, 740, x18)

inst_75:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02e and fs2 == 1 and fe2 == 0x10 and fm2 == 0x064 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x044 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2e; op2val:0xc064; op3val:0x44; valaddr_reg:x16; val_offset:450; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 450, x17, x15, 750, x18)

inst_76:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x028 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x366 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x014 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x28; op2val:0xbb66; op3val:0x14; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 456, x17, x15, 760, x18)

inst_77:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x050 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x300 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01a and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x50; op2val:0xb700; op3val:0x1a; valaddr_reg:x16; val_offset:462; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 462, x17, x15, 770, x18)

inst_78:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x040 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x060 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x041 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x40; op2val:0xbc60; op3val:0x41; valaddr_reg:x16; val_offset:468; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 468, x17, x15, 780, x18)

inst_79:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x37a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x053 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2e; op2val:0xbf7a; op3val:0x53; valaddr_reg:x16; val_offset:474; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 474, x17, x15, 790, x18)

inst_80:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x029 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x070 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05a and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x29; op2val:0xc070; op3val:0x5a; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 480, x17, x15, 800, x18)

inst_81:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x045 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x231 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x059 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c45; op2val:0x3631; op3val:0x3c59; valaddr_reg:x16; val_offset:486; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 486, x17, x15, 810, x18)

inst_82:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x04d and fs2 == 0 and fe2 == 0x0c and fm2 == 0x310 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00d and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c4d; op2val:0x3310; op3val:0x3c0d; valaddr_reg:x16; val_offset:492; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 492, x17, x15, 820, x18)

inst_83:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x015 and fs2 == 0 and fe2 == 0x09 and fm2 == 0x359 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x062 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c15; op2val:0x2759; op3val:0x3c62; valaddr_reg:x16; val_offset:498; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 498, x17, x15, 830, x18)

inst_84:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x037 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x174 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x012 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c37; op2val:0x2974; op3val:0x3c12; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 504, x17, x15, 840, x18)

inst_85:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x048 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x28a and fs3 == 0 and fe3 == 0x0f and fm3 == 0x02e and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c48; op2val:0xa28a; op3val:0x3c2e; valaddr_reg:x16; val_offset:510; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 510, x17, x15, 850, x18)

inst_86:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x039 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x0f9 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x025 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c39; op2val:0xa4f9; op3val:0x3c25; valaddr_reg:x16; val_offset:516; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 516, x17, x15, 860, x18)

inst_87:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x05e and fs2 == 1 and fe2 == 0x0a and fm2 == 0x3ab and fs3 == 0 and fe3 == 0x0f and fm3 == 0x04b and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c5e; op2val:0xabab; op3val:0x3c4b; valaddr_reg:x16; val_offset:522; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 522, x17, x15, 870, x18)

inst_88:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0a and fm2 == 0x267 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x03b and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c4b; op2val:0xaa67; op3val:0x3c3b; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 528, x17, x15, 880, x18)

inst_89:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x019 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x026 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x013 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c19; op2val:0xa426; op3val:0x3c13; valaddr_reg:x16; val_offset:534; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 534, x17, x15, 890, x18)

inst_90:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x03f and fs2 == 1 and fe2 == 0x0b and fm2 == 0x13d and fs3 == 0 and fe3 == 0x0f and fm3 == 0x05a and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c3f; op2val:0xad3d; op3val:0x3c5a; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 540, x17, x15, 900, x18)

inst_91:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x046 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0b0 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x005 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c46; op2val:0xc0b0; op3val:0x3c05; valaddr_reg:x16; val_offset:546; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 546, x17, x15, 910, x18)

inst_92:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x04e and fs2 == 1 and fe2 == 0x10 and fm2 == 0x032 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x009 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c4e; op2val:0xc032; op3val:0x3c09; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 552, x17, x15, 920, x18)

inst_93:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3fd and fs3 == 0 and fe3 == 0x0f and fm3 == 0x013 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c4b; op2val:0xbffd; op3val:0x3c13; valaddr_reg:x16; val_offset:558; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 558, x17, x15, 930, x18)

inst_94:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3d7 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01b and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c43; op2val:0xbfd7; op3val:0x3c1b; valaddr_reg:x16; val_offset:564; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 564, x17, x15, 940, x18)

inst_95:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x040 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3f4 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x054 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c40; op2val:0xbff4; op3val:0x3c54; valaddr_reg:x16; val_offset:570; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 570, x17, x15, 950, x18)

inst_96:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x059 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x375 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00c and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c59; op2val:0xbf75; op3val:0x3c0c; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 576, x17, x15, 960, x18)

inst_97:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3d1 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01f and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c2c; op2val:0xbfd1; op3val:0x3c1f; valaddr_reg:x16; val_offset:582; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 582, x17, x15, 970, x18)

inst_98:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x055 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x36e and fs3 == 0 and fe3 == 0x0f and fm3 == 0x008 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c55; op2val:0xbf6e; op3val:0x3c08; valaddr_reg:x16; val_offset:588; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 588, x17, x15, 980, x18)

inst_99:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x031 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3b1 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00e and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c31; op2val:0xbfb1; op3val:0x3c0e; valaddr_reg:x16; val_offset:594; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 594, x17, x15, 990, x18)

inst_100:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x032 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3ed and fs3 == 0 and fe3 == 0x0f and fm3 == 0x050 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c32; op2val:0xbfed; op3val:0x3c50; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 600, x17, x15, 1000, x18)

inst_101:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0d6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x009 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0xd; op2val:0x50d6; op3val:0x9; valaddr_reg:x16; val_offset:606; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 606, x17, x15, 1010, x18)

inst_102:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x139 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x022 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x55; op2val:0x4139; op3val:0x22; valaddr_reg:x16; val_offset:612; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 612, x17, x15, 1020, x18)

inst_103:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05d and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0dc and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00f and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5d; op2val:0x3cdc; op3val:0xf; valaddr_reg:x16; val_offset:618; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 618, x17, x15, 1030, x18)

inst_104:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03d and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3de and fs3 == 0 and fe3 == 0x00 and fm3 == 0x031 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3d; op2val:0x33de; op3val:0x31; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 624, x17, x15, 1040, x18)

inst_105:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x103 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x035 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x43; op2val:0xb503; op3val:0x35; valaddr_reg:x16; val_offset:630; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 630, x17, x15, 1050, x18)

inst_106:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05a and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2c1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x023 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5a; op2val:0xb2c1; op3val:0x23; valaddr_reg:x16; val_offset:636; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 636, x17, x15, 1060, x18)

inst_107:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x062 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x287 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x003 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x62; op2val:0x2a87; op3val:0x3; valaddr_reg:x16; val_offset:642; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 642, x17, x15, 1070, x18)

inst_108:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01e and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3f; op2val:0xb69a; op3val:0x1e; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 648, x17, x15, 1080, x18)

inst_109:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x034 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x227 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00c and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x34; op2val:0xb227; op3val:0xc; valaddr_reg:x16; val_offset:654; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 654, x17, x15, 1090, x18)

inst_110:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x130 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x019 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4a; op2val:0xb530; op3val:0x19; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 660, x17, x15, 1100, x18)

inst_111:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x032 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1c2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x040 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x32; op2val:0xc9c2; op3val:0x40; valaddr_reg:x16; val_offset:666; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 666, x17, x15, 1110, x18)

inst_112:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 1 and fe2 == 0x11 and fm2 == 0x100 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03b and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3f; op2val:0xc500; op3val:0x3b; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 672, x17, x15, 1120, x18)

inst_113:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x1d8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03b and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4; op2val:0xd1d8; op3val:0x3b; valaddr_reg:x16; val_offset:678; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 678, x17, x15, 1130, x18)

inst_114:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x034 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x053 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x34; op2val:0xc1a7; op3val:0x53; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 684, x17, x15, 1140, x18)

inst_115:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x041 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x342 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01b and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x41; op2val:0xbb42; op3val:0x1b; valaddr_reg:x16; val_offset:690; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 690, x17, x15, 1150, x18)

inst_116:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x155 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x020 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x12; op2val:0xc155; op3val:0x20; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 696, x17, x15, 1160, x18)

inst_117:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x006 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x255 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00b and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6; op2val:0xc255; op3val:0xb; valaddr_reg:x16; val_offset:702; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 702, x17, x15, 1170, x18)

inst_118:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x019 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x399 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05b and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x19; op2val:0xc399; op3val:0x5b; valaddr_reg:x16; val_offset:708; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 708, x17, x15, 1180, x18)

inst_119:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x234 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x011 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x31; op2val:0xb634; op3val:0x11; valaddr_reg:x16; val_offset:714; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 714, x17, x15, 1190, x18)

inst_120:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05b and fs2 == 0 and fe2 == 0x0d and fm2 == 0x249 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x049 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x785b; op2val:0x3649; op3val:0x7849; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_121:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x060 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x1b3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x061 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7860; op2val:0x39b3; op3val:0x7861; valaddr_reg:x16; val_offset:726; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 726, x17, x15, 1210, x18)

inst_122:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x044 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2f0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00c and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7844; op2val:0x3af0; op3val:0x780c; valaddr_reg:x16; val_offset:732; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 732, x17, x15, 1220, x18)

inst_123:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2fb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x038 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x782f; op2val:0x3afb; op3val:0x7838; valaddr_reg:x16; val_offset:738; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 738, x17, x15, 1230, x18)

inst_124:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x003 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x330 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x054 and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7803; op2val:0x3b30; op3val:0x7854; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 744, x17, x15, 1240, x18)

inst_125:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2cd and fs3 == 0 and fe3 == 0x1e and fm3 == 0x04f and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x784d; op2val:0x3acd; op3val:0x784f; valaddr_reg:x16; val_offset:750; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 750, x17, x15, 1250, x18)

inst_126:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00f and fs2 == 0 and fe2 == 0x0e and fm2 == 0x3c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00e and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x780f; op2val:0x3bc2; op3val:0x780e; valaddr_reg:x16; val_offset:756; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 756, x17, x15, 1260, x18)

inst_127:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x007 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x113 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x03a and rm_val == 0  
// opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7807; op2val:0xc113; op3val:0x783a; valaddr_reg:x16; val_offset:762; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, 0x0, 0, x16, 762, x17, x15, 1270, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.hword 0x1e
.hword 0xbe88
.hword 0x30
.hword 0x785b
.hword 0x3649
.hword 0x3649
.hword 0x784d
.hword 0x3919
.hword 0x7841
.hword 0x7860
.hword 0x39b3
.hword 0x7860
.hword 0x7844
.hword 0x7844
.hword 0x780c
.hword 0x782f
.hword 0x782f
.hword 0x782f
.hword 0x7803
.hword 0x7803
.hword 0x7854
.hword 0x784d
.hword 0x784d
.hword 0x784d
.hword 0x7801
.hword 0x3b3e
.hword 0x785b
.hword 0x781c
.hword 0x3b0e
.hword 0x785d
.hword 0x780f
.hword 0x3bc2
.hword 0x780f
.hword 0x7807
.hword 0xc113
.hword 0xc113
.hword 0x7807
.hword 0xc182
.hword 0x781a
.hword 0x783b
.hword 0xc17d
.hword 0x781d
.hword 0x7833
.hword 0xc1ae
.hword 0x782f
.hword 0x783d
.hword 0xc1bc
.hword 0x7849
.hword 0x780c
.hword 0xc213
.hword 0x785c
.hword 0x7842
.hword 0xc1ca
.hword 0x785d
.hword 0x785d
.hword 0xc197
.hword 0x7839
.hword 0x7853
.hword 0xc193
.hword 0x7811
.hword 0x785d
.hword 0xc199
.hword 0x783a
.hword 0x40e
.hword 0x36bc
.hword 0x44b
.hword 0x431
.hword 0x3328
.hword 0x410
.hword 0x43d
.hword 0x2e5e
.hword 0x414
.hword 0x41d
.hword 0x2f0
.hword 0x440
.hword 0x41a
.hword 0xa99b
.hword 0x44e
.hword 0x410
.hword 0x1cec
.hword 0x40b
.hword 0x438
.hword 0xa9ce
.hword 0x439
.hword 0x417
.hword 0xa8e3
.hword 0x42c
.hword 0x44b
.hword 0xa4e4
.hword 0x417
.hword 0x405
.hword 0xae08
.hword 0x462
.hword 0x408
.hword 0xc11d
.hword 0x450
.hword 0x440
.hword 0xc048
.hword 0x41b
.hword 0x401
.hword 0xc068
.hword 0x453
.hword 0x42a
.hword 0xc00c
.hword 0x42f
.hword 0x427
.hword 0xbfff
.hword 0x42d
.hword 0x410
.hword 0xc027
.hword 0x460
.hword 0x455
.hword 0xbfae
.hword 0x44a
.hword 0x42c
.hword 0xbfdf
.hword 0x432
.hword 0x403
.hword 0xc006
.hword 0x412
.hword 0x409
.hword 0xc003
.hword 0x419
.hword 0x14
.hword 0x4d69
.hword 0x4e
.hword 0x3f
.hword 0x495d
.hword 0x5b
.hword 0x14
.hword 0x5130
.hword 0x41
.hword 0x44
.hword 0x4ab4
.hword 0x2f
.hword 0x62
.hword 0x48b6
.hword 0x43
.hword 0x55
.hword 0x49d7
.hword 0xe
.hword 0x5
.hword 0x5a46
.hword 0xb
.hword 0x5c
.hword 0x4977
.hword 0xd
.hword 0x9
.hword 0x56d5
.hword 0x25
.hword 0xb
.hword 0x5560
.hword 0x4c
.hword 0x35
.hword 0xc954
.hword 0x36
.hword 0x49
.hword 0xc9a6
.hword 0x3a
.hword 0x12
.hword 0xd295
.hword 0x35
.hword 0x38
.hword 0xcc6a
.hword 0x1e
.hword 0x16
.hword 0xd20b
.hword 0x49
.hword 0x31
.hword 0xcd5c
.hword 0x2c
.hword 0x2
.hword 0xe059
.hword 0x62
.hword 0x27
.hword 0xcea0
.hword 0xf
.hword 0x63
.hword 0xc943
.hword 0x15
.hword 0x4
.hword 0xdc18
.hword 0x1a
.hword 0x16
.hword 0x4cdd
.hword 0x55
.hword 0x33
.hword 0x44be
.hword 0xf
.hword 0x17
.hword 0x3fa6
.hword 0x55
.hword 0x5b
.hword 0x2fbc
.hword 0x36
.hword 0x31
.hword 0xafd6
.hword 0x27
.hword 0x37
.hword 0xb4a7
.hword 0x21
.hword 0x23
.hword 0x2f50
.hword 0x5
.hword 0x2c
.hword 0xb85d
.hword 0x1d
.hword 0x2
.hword 0xcc60
.hword 0x26
.hword 0x2d
.hword 0xb982
.hword 0x20
.hword 0x46
.hword 0xc7be
.hword 0x1d
.hword 0x41
.hword 0xc556
.hword 0x5a
.hword 0x55
.hword 0xbe8a
.hword 0xa
.hword 0x25
.hword 0xc314
.hword 0x42
.hword 0x2e
.hword 0xc064
.hword 0x44
.hword 0x28
.hword 0xbb66
.hword 0x14
.hword 0x50
.hword 0xb700
.hword 0x1a
.hword 0x40
.hword 0xbc60
.hword 0x41
.hword 0x2e
.hword 0xbf7a
.hword 0x53
.hword 0x29
.hword 0xc070
.hword 0x5a
.hword 0x3c45
.hword 0x3631
.hword 0x3c59
.hword 0x3c4d
.hword 0x3310
.hword 0x3c0d
.hword 0x3c15
.hword 0x2759
.hword 0x3c62
.hword 0x3c37
.hword 0x2974
.hword 0x3c12
.hword 0x3c48
.hword 0xa28a
.hword 0x3c2e
.hword 0x3c39
.hword 0xa4f9
.hword 0x3c25
.hword 0x3c5e
.hword 0xabab
.hword 0x3c4b
.hword 0x3c4b
.hword 0xaa67
.hword 0x3c3b
.hword 0x3c19
.hword 0xa426
.hword 0x3c13
.hword 0x3c3f
.hword 0xad3d
.hword 0x3c5a
.hword 0x3c46
.hword 0xc0b0
.hword 0x3c05
.hword 0x3c4e
.hword 0xc032
.hword 0x3c09
.hword 0x3c4b
.hword 0xbffd
.hword 0x3c13
.hword 0x3c43
.hword 0xbfd7
.hword 0x3c1b
.hword 0x3c40
.hword 0xbff4
.hword 0x3c54
.hword 0x3c59
.hword 0xbf75
.hword 0x3c0c
.hword 0x3c2c
.hword 0xbfd1
.hword 0x3c1f
.hword 0x3c55
.hword 0xbf6e
.hword 0x3c08
.hword 0x3c31
.hword 0xbfb1
.hword 0x3c0e
.hword 0x3c32
.hword 0xbfed
.hword 0x3c50
.hword 0xd
.hword 0x50d6
.hword 0x9
.hword 0x55
.hword 0x4139
.hword 0x22
.hword 0x5d
.hword 0x3cdc
.hword 0xf
.hword 0x3d
.hword 0x33de
.hword 0x31
.hword 0x43
.hword 0xb503
.hword 0x35
.hword 0x5a
.hword 0xb2c1
.hword 0x23
.hword 0x62
.hword 0x2a87
.hword 0x3
.hword 0x3f
.hword 0xb69a
.hword 0x1e
.hword 0x34
.hword 0xb227
.hword 0xc
.hword 0x4a
.hword 0xb530
.hword 0x19
.hword 0x32
.hword 0xc9c2
.hword 0x40
.hword 0x3f
.hword 0xc500
.hword 0x3b
.hword 0x4
.hword 0xd1d8
.hword 0x3b
.hword 0x34
.hword 0xc1a7
.hword 0x53
.hword 0x41
.hword 0xbb42
.hword 0x1b
.hword 0x12
.hword 0xc155
.hword 0x20
.hword 0x6
.hword 0xc255
.hword 0xb
.hword 0x19
.hword 0xc399
.hword 0x5b
.hword 0x31
.hword 0xb634
.hword 0x11
.hword 0x785b
.hword 0x3649
.hword 0x7849
.hword 0x7860
.hword 0x39b3
.hword 0x7861
.hword 0x7844
.hword 0x3af0
.hword 0x780c
.hword 0x782f
.hword 0x3afb
.hword 0x7838
.hword 0x7803
.hword 0x3b30
.hword 0x7854
.hword 0x784d
.hword 0x3acd
.hword 0x784f
.hword 0x780f
.hword 0x3bc2
.hword 0x780e
.hword 0x7807
.hword 0xc113
.hword 0x783a
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 256*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
