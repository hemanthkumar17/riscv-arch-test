
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.6.0
// timestamp : Mon Feb 14 07:47:35 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/zeusprime/riscv-project/riscof_zfh_env/tests/ctg_test/dataset.cgf \
//                  --cgf /home/zeusprime/riscv-project/riscof_zfh_env/tests/ctg_test/rv64f_zfhfull.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fcvt.lu.h instruction of the RISC-V RV64FZfh extension for the fcvt.lu.h_b1 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFZfh")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*F.*Zfh.*);def TEST_CASE_1=True;",fcvt.lu.h_b1)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:// rs1==f4, rd==x23, fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f4; dest:x23; op1val:0x0; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x23, f4, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:// rs1==f24, rd==x27, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f24; dest:x27; op1val:0xbc00; valaddr_reg:x16; val_offset:2; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x27, f24, 0x0, 0, x16, 2, x17, x15, 10, x18)

inst_2:// rs1==f15, rd==x19, fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f15; dest:x19; op1val:0x3c00; valaddr_reg:x16; val_offset:4; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x19, f15, 0x0, 0, x16, 4, x17, x15, 20, x18)

inst_3:// rs1==f26, rd==x22, fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f26; dest:x22; op1val:0xfd55; valaddr_reg:x16; val_offset:6; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x22, f26, 0x0, 0, x16, 6, x17, x15, 30, x18)

inst_4:// rs1==f12, rd==x4, fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f12; dest:x4; op1val:0x7c01; valaddr_reg:x16; val_offset:8; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x4, f12, 0x0, 0, x16, 8, x17, x15, 40, x18)

inst_5:// rs1==f30, rd==x7, fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f30; dest:x7; op1val:0xfe55; valaddr_reg:x16; val_offset:10; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x7, f30, 0x0, 0, x16, 10, x17, x15, 50, x18)

inst_6:// rs1==f18, rd==x31, fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f18; dest:x31; op1val:0x7e01; valaddr_reg:x16; val_offset:12; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x31, f18, 0x0, 0, x16, 12, x17, x15, 60, x18)

inst_7:// rs1==f20, rd==x28, fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f20; dest:x28; op1val:0xfe00; valaddr_reg:x16; val_offset:14; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x28, f20, 0x0, 0, x16, 14, x17, x15, 70, x18)

inst_8:// rs1==f0, rd==x30, fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f0; dest:x30; op1val:0x7e00; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x30, f0, 0x0, 0, x16, 16, x17, x15, 80, x18)

inst_9:// rs1==f31, rd==x0, fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f31; dest:x0; op1val:0xfc00; valaddr_reg:x16; val_offset:18; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x0, f31, 0x0, 0, x16, 18, x17, x15, 90, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_0)

inst_10:// rs1==f14, rd==x16, fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f14; dest:x16; op1val:0x7c00; valaddr_reg:x20; val_offset:20; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x16, f14, 0x0, 0, x20, 20, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_11:// rs1==f7, rd==x25, fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f7; dest:x25; op1val:0xfbff; valaddr_reg:x16; val_offset:22; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x25, f7, 0x0, 0, x16, 22, x17, x15, 0, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_1)

inst_12:// rs1==f25, rd==x15, fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f25; dest:x15; op1val:0x7bff; valaddr_reg:x20; val_offset:24; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x15, f25, 0x0, 0, x20, 24, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_13:// rs1==f16, rd==x5, fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f16; dest:x5; op1val:0x8455; valaddr_reg:x16; val_offset:26; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x5, f16, 0x0, 0, x16, 26, x17, x15, 0, x18)

inst_14:// rs1==f2, rd==x14, fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f2; dest:x14; op1val:0x401; valaddr_reg:x16; val_offset:28; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x14, f2, 0x0, 0, x16, 28, x17, x15, 10, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_2)

inst_15:// rs1==f5, rd==x17, fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f5; dest:x17; op1val:0x8400; valaddr_reg:x20; val_offset:30; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x17, f5, 0x0, 0, x20, 30, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_16:// rs1==f8, rd==x20, fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f8; dest:x20; op1val:0x400; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x20, f8, 0x0, 0, x16, 32, x17, x15, 0, x18)

inst_17:// rs1==f28, rd==x10, fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f28; dest:x10; op1val:0x83ff; valaddr_reg:x16; val_offset:34; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x10, f28, 0x0, 0, x16, 34, x17, x15, 10, x18)

inst_18:// rs1==f27, rd==x6, fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f27; dest:x6; op1val:0x3ff; valaddr_reg:x16; val_offset:36; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x6, f27, 0x0, 0, x16, 36, x17, x15, 20, x18)

inst_19:// rs1==f22, rd==x26, fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f22; dest:x26; op1val:0x83fe; valaddr_reg:x16; val_offset:38; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x26, f22, 0x0, 0, x16, 38, x17, x15, 30, x18)

inst_20:// rs1==f10, rd==x18, fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f10; dest:x18; op1val:0x2; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x22
TEST_FPID_OP(fcvt.lu.h, x18, f10, 0x0, 0, x16, 40, x17, x15, 40, x22)

inst_21:// rs1==f3, rd==x8, fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f3; dest:x8; op1val:0x8001; valaddr_reg:x16; val_offset:42; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x8, f3, 0x0, 0, x16, 42, x17, x15, 50, x18)

inst_22:// rs1==f13, rd==x24, fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f13; dest:x24; op1val:0x1; valaddr_reg:x16; val_offset:44; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x24, f13, 0x0, 0, x16, 44, x17, x15, 60, x18)

inst_23:// rs1==f1, rd==x3, fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f1; dest:x3; op1val:0x8000; valaddr_reg:x16; val_offset:46; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x3, f1, 0x0, 0, x16, 46, x17, x15, 70, x18)

inst_24:// rs1==f21, rd==x2, 
// opcode: fcvt.lu.h ; op1:f21; dest:x2; op1val:0x0; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x2, f21, 0x0, 0, x16, 48, x17, x15, 80, x18)

inst_25:// rs1==f9, rd==x29, 
// opcode: fcvt.lu.h ; op1:f9; dest:x29; op1val:0x0; valaddr_reg:x16; val_offset:50; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x29, f9, 0x0, 0, x16, 50, x17, x15, 90, x18)

inst_26:// rs1==f23, rd==x12, 
// opcode: fcvt.lu.h ; op1:f23; dest:x12; op1val:0x0; valaddr_reg:x16; val_offset:52; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x12, f23, 0x0, 0, x16, 52, x17, x15, 100, x18)

inst_27:// rs1==f19, rd==x13, 
// opcode: fcvt.lu.h ; op1:f19; dest:x13; op1val:0x0; valaddr_reg:x16; val_offset:54; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x13, f19, 0x0, 0, x16, 54, x17, x15, 110, x18)

inst_28:// rs1==f29, rd==x1, 
// opcode: fcvt.lu.h ; op1:f29; dest:x1; op1val:0x0; valaddr_reg:x16; val_offset:56; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x1, f29, 0x0, 0, x16, 56, x17, x15, 120, x18)

inst_29:// rs1==f11, rd==x9, 
// opcode: fcvt.lu.h ; op1:f11; dest:x9; op1val:0x0; valaddr_reg:x16; val_offset:58; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x9, f11, 0x0, 0, x16, 58, x17, x15, 130, x18)

inst_30:// rs1==f17, rd==x11, 
// opcode: fcvt.lu.h ; op1:f17; dest:x11; op1val:0x0; valaddr_reg:x16; val_offset:60; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x11, f17, 0x0, 0, x16, 60, x17, x15, 140, x18)

inst_31:// rs1==f6, rd==x21, 
// opcode: fcvt.lu.h ; op1:f6; dest:x21; op1val:0x0; valaddr_reg:x16; val_offset:62; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x21, f6, 0x0, 0, x16, 62, x17, x15, 150, x18)

inst_32:// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and rm_val == 0  
// opcode: fcvt.lu.h ; op1:f31; dest:x31; op1val:0xfc00; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.lu.h, x31, f31, 0x0, 0, x16, 64, x17, x15, 160, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.hword 0x0
.hword 0xbc00
.hword 0x3c00
.hword 0xfd55
.hword 0x7c01
.hword 0xfe55
.hword 0x7e01
.hword 0xfe00
.hword 0x7e00
.hword 0xfc00
.hword 0x7c00
.hword 0xfbff
.hword 0x7bff
.hword 0x8455
.hword 0x401
.hword 0x8400
.hword 0x400
.hword 0x83ff
.hword 0x3ff
.hword 0x83fe
.hword 0x2
.hword 0x8001
.hword 0x1
.hword 0x8000
.hword 0x0
.hword 0x0
.hword 0x0
.hword 0x0
.hword 0x0
.hword 0x0
.hword 0x0
.hword 0x0
.hword 0xfc00
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 20*(XLEN/32),4,0xdeadbeef


signature_x19_0:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x19_1:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 4*(XLEN/32),4,0xdeadbeef


signature_x19_2:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 34*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
