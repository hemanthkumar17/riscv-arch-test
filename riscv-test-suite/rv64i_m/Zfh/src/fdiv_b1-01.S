
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.6.0
// timestamp : Mon Feb 14 07:47:35 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/zeusprime/riscv-project/riscof_zfh_env/tests/ctg_test/dataset.cgf \
//                  --cgf /home/zeusprime/riscv-project/riscof_zfh_env/tests/ctg_test/rv64f_zfhfull.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fdiv.h instruction of the RISC-V RV64FZfh extension for the fdiv_b1 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFZfh")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*F.*Zfh.*);def TEST_CASE_1=True;",fdiv_b1)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs2 == rd, rs1==f21, rs2==f21, rd==f21, fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f21; op2:f21; dest:f21; op1val:0x0; op2val:0x0; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f21, f21, f21, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 != rd, rs1==f25, rs2==f25, rd==f26, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f25; op2:f25; dest:f26; op1val:0xbc00; op2val:0xbc00; valaddr_reg:x16; val_offset:4; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f26, f25, f25, 0x0, 0, x16, 4, x17, x15, 10, x18)

inst_2:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f26, rs2==f1, rd==f14, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f26; op2:f1; dest:f14; op1val:0xbc00; op2val:0x3c00; valaddr_reg:x16; val_offset:8; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f14, f26, f1, 0x0, 0, x16, 8, x17, x15, 20, x18)

inst_3:
// rs1 == rd != rs2, rs1==f8, rs2==f10, rd==f8, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f8; op2:f10; dest:f8; op1val:0xbc00; op2val:0xfd55; valaddr_reg:x16; val_offset:12; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f8, f8, f10, 0x0, 0, x16, 12, x17, x15, 30, x18)

inst_4:
// rs2 == rd != rs1, rs1==f14, rs2==f7, rd==f7, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f14; op2:f7; dest:f7; op1val:0xbc00; op2val:0x7c01; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f7, f14, f7, 0x0, 0, x16, 16, x17, x15, 40, x18)

inst_5:
// rs1==f0, rs2==f8, rd==f23, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f0; op2:f8; dest:f23; op1val:0xbc00; op2val:0xfe55; valaddr_reg:x16; val_offset:20; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f23, f0, f8, 0x0, 0, x16, 20, x17, x15, 50, x18)

inst_6:
// rs1==f5, rs2==f29, rd==f17, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f5; op2:f29; dest:f17; op1val:0xbc00; op2val:0x7e01; valaddr_reg:x16; val_offset:24; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f17, f5, f29, 0x0, 0, x16, 24, x17, x15, 60, x18)

inst_7:
// rs1==f19, rs2==f15, rd==f16, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f19; op2:f15; dest:f16; op1val:0xbc00; op2val:0xfe00; valaddr_reg:x16; val_offset:28; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f16, f19, f15, 0x0, 0, x16, 28, x17, x15, 70, x18)

inst_8:
// rs1==f30, rs2==f16, rd==f24, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f16; dest:f24; op1val:0xbc00; op2val:0x7e00; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f24, f30, f16, 0x0, 0, x16, 32, x17, x15, 80, x18)

inst_9:
// rs1==f13, rs2==f3, rd==f30, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f13; op2:f3; dest:f30; op1val:0xbc00; op2val:0xfc00; valaddr_reg:x16; val_offset:36; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f30, f13, f3, 0x0, 0, x16, 36, x17, x15, 90, x18)

inst_10:
// rs1==f27, rs2==f2, rd==f31, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f27; op2:f2; dest:f31; op1val:0xbc00; op2val:0x7c00; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f27, f2, 0x0, 0, x16, 40, x17, x15, 100, x18)

inst_11:
// rs1==f9, rs2==f28, rd==f20, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f9; op2:f28; dest:f20; op1val:0xbc00; op2val:0xfbff; valaddr_reg:x16; val_offset:44; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f20, f9, f28, 0x0, 0, x16, 44, x17, x15, 110, x18)

inst_12:
// rs1==f29, rs2==f22, rd==f10, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f29; op2:f22; dest:f10; op1val:0xbc00; op2val:0x7bff; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f10, f29, f22, 0x0, 0, x16, 48, x17, x15, 120, x18)

inst_13:
// rs1==f28, rs2==f23, rd==f6, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f28; op2:f23; dest:f6; op1val:0xbc00; op2val:0x8455; valaddr_reg:x16; val_offset:52; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f6, f28, f23, 0x0, 0, x16, 52, x17, x15, 130, x18)

inst_14:
// rs1==f23, rs2==f24, rd==f22, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f23; op2:f24; dest:f22; op1val:0xbc00; op2val:0x401; valaddr_reg:x16; val_offset:56; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f22, f23, f24, 0x0, 0, x16, 56, x17, x15, 140, x18)

inst_15:
// rs1==f10, rs2==f20, rd==f5, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f10; op2:f20; dest:f5; op1val:0xbc00; op2val:0x8400; valaddr_reg:x16; val_offset:60; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f5, f10, f20, 0x0, 0, x16, 60, x17, x15, 150, x18)

inst_16:
// rs1==f11, rs2==f19, rd==f4, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f11; op2:f19; dest:f4; op1val:0xbc00; op2val:0x400; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f4, f11, f19, 0x0, 0, x16, 64, x17, x15, 160, x18)

inst_17:
// rs1==f2, rs2==f18, rd==f11, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f2; op2:f18; dest:f11; op1val:0xbc00; op2val:0x83ff; valaddr_reg:x16; val_offset:68; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f11, f2, f18, 0x0, 0, x16, 68, x17, x15, 170, x18)

inst_18:
// rs1==f31, rs2==f27, rd==f19, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f31; op2:f27; dest:f19; op1val:0xbc00; op2val:0x3ff; valaddr_reg:x16; val_offset:72; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f19, f31, f27, 0x0, 0, x16, 72, x17, x15, 180, x18)

inst_19:
// rs1==f20, rs2==f6, rd==f25, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f20; op2:f6; dest:f25; op1val:0xbc00; op2val:0x83fe; valaddr_reg:x16; val_offset:76; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f25, f20, f6, 0x0, 0, x16, 76, x17, x15, 190, x18)

inst_20:
// rs1==f4, rs2==f9, rd==f13, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f4; op2:f9; dest:f13; op1val:0xbc00; op2val:0x2; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f13, f4, f9, 0x0, 0, x16, 80, x17, x15, 200, x18)

inst_21:
// rs1==f24, rs2==f30, rd==f12, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f24; op2:f30; dest:f12; op1val:0xbc00; op2val:0x8001; valaddr_reg:x16; val_offset:84; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f12, f24, f30, 0x0, 0, x16, 84, x17, x15, 210, x18)

inst_22:
// rs1==f7, rs2==f11, rd==f0, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f7; op2:f11; dest:f0; op1val:0xbc00; op2val:0x1; valaddr_reg:x16; val_offset:88; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f0, f7, f11, 0x0, 0, x16, 88, x17, x15, 220, x18)

inst_23:
// rs1==f18, rs2==f0, rd==f9, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f18; op2:f0; dest:f9; op1val:0xbc00; op2val:0x8000; valaddr_reg:x16; val_offset:92; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f9, f18, f0, 0x0, 0, x16, 92, x17, x15, 230, x18)

inst_24:
// rs1==f12, rs2==f5, rd==f15, fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f12; op2:f5; dest:f15; op1val:0xbc00; op2val:0x0; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f15, f12, f5, 0x0, 0, x16, 96, x17, x15, 240, x18)

inst_25:
// rs1==f16, rs2==f17, rd==f18, fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f16; op2:f17; dest:f18; op1val:0x3c00; op2val:0xbc00; valaddr_reg:x16; val_offset:100; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f18, f16, f17, 0x0, 0, x16, 100, x17, x15, 250, x18)

inst_26:
// rs1==f3, rs2==f13, rd==f1, fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f3; op2:f13; dest:f1; op1val:0x3c00; op2val:0x3c00; valaddr_reg:x16; val_offset:104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f1, f3, f13, 0x0, 0, x16, 104, x17, x15, 260, x18)

inst_27:
// rs1==f15, rs2==f14, rd==f27, fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f15; op2:f14; dest:f27; op1val:0x3c00; op2val:0xfd55; valaddr_reg:x16; val_offset:108; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f27, f15, f14, 0x0, 0, x16, 108, x17, x15, 270, x18)

inst_28:
// rs1==f1, rs2==f31, rd==f29, fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f1; op2:f31; dest:f29; op1val:0x3c00; op2val:0x7c01; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f29, f1, f31, 0x0, 0, x16, 112, x17, x15, 280, x18)

inst_29:
// rs1==f17, rs2==f4, rd==f28, fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f17; op2:f4; dest:f28; op1val:0x3c00; op2val:0xfe55; valaddr_reg:x16; val_offset:116; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f28, f17, f4, 0x0, 0, x16, 116, x17, x15, 290, x18)

inst_30:
// rs1==f6, rs2==f12, rd==f3, fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f6; op2:f12; dest:f3; op1val:0x3c00; op2val:0x7e01; valaddr_reg:x16; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f3, f6, f12, 0x0, 0, x16, 120, x17, x15, 300, x18)

inst_31:
// rs1==f22, rs2==f26, rd==f2, fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f22; op2:f26; dest:f2; op1val:0x3c00; op2val:0xfe00; valaddr_reg:x16; val_offset:124; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f2, f22, f26, 0x0, 0, x16, 124, x17, x15, 310, x18)

inst_32:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x7e00; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 128, x17, x15, 320, x18)

inst_33:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0xfc00; valaddr_reg:x16; val_offset:132; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 132, x17, x15, 330, x18)

inst_34:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x7c00; valaddr_reg:x16; val_offset:136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 136, x17, x15, 340, x18)

inst_35:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0xfbff; valaddr_reg:x16; val_offset:140; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 140, x17, x15, 350, x18)

inst_36:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x7bff; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 144, x17, x15, 360, x18)

inst_37:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x8455; valaddr_reg:x16; val_offset:148; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 148, x17, x15, 370, x18)

inst_38:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x401; valaddr_reg:x16; val_offset:152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 152, x17, x15, 380, x18)

inst_39:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x8400; valaddr_reg:x16; val_offset:156; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 156, x17, x15, 390, x18)

inst_40:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x400; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 160, x17, x15, 400, x18)

inst_41:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x83ff; valaddr_reg:x16; val_offset:164; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 164, x17, x15, 410, x18)

inst_42:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x3ff; valaddr_reg:x16; val_offset:168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 168, x17, x15, 420, x18)

inst_43:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x83fe; valaddr_reg:x16; val_offset:172; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 172, x17, x15, 430, x18)

inst_44:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x2; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 176, x17, x15, 440, x18)

inst_45:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x8001; valaddr_reg:x16; val_offset:180; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 180, x17, x15, 450, x18)

inst_46:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x1; valaddr_reg:x16; val_offset:184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 184, x17, x15, 460, x18)

inst_47:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x8000; valaddr_reg:x16; val_offset:188; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 188, x17, x15, 470, x18)

inst_48:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3c00; op2val:0x0; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 192, x17, x15, 480, x18)

inst_49:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0xbc00; valaddr_reg:x16; val_offset:196; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 196, x17, x15, 490, x18)

inst_50:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x3c00; valaddr_reg:x16; val_offset:200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 200, x17, x15, 500, x18)

inst_51:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0xfd55; valaddr_reg:x16; val_offset:204; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 204, x17, x15, 510, x18)

inst_52:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x7c01; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 208, x17, x15, 520, x18)

inst_53:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0xfe55; valaddr_reg:x16; val_offset:212; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 212, x17, x15, 530, x18)

inst_54:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x7e01; valaddr_reg:x16; val_offset:216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 216, x17, x15, 540, x18)

inst_55:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0xfe00; valaddr_reg:x16; val_offset:220; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 220, x17, x15, 550, x18)

inst_56:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x7e00; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 224, x17, x15, 560, x18)

inst_57:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0xfc00; valaddr_reg:x16; val_offset:228; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 228, x17, x15, 570, x18)

inst_58:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x7c00; valaddr_reg:x16; val_offset:232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 232, x17, x15, 580, x18)

inst_59:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0xfbff; valaddr_reg:x16; val_offset:236; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 236, x17, x15, 590, x18)

inst_60:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x7bff; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 240, x17, x15, 600, x18)

inst_61:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x8455; valaddr_reg:x16; val_offset:244; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 244, x17, x15, 610, x18)

inst_62:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x401; valaddr_reg:x16; val_offset:248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 248, x17, x15, 620, x18)

inst_63:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x8400; valaddr_reg:x16; val_offset:252; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 252, x17, x15, 630, x18)

inst_64:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x400; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 256, x17, x15, 640, x18)

inst_65:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x83ff; valaddr_reg:x16; val_offset:260; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 260, x17, x15, 650, x18)

inst_66:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x3ff; valaddr_reg:x16; val_offset:264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 264, x17, x15, 660, x18)

inst_67:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x83fe; valaddr_reg:x16; val_offset:268; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 268, x17, x15, 670, x18)

inst_68:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x2; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 272, x17, x15, 680, x18)

inst_69:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x8001; valaddr_reg:x16; val_offset:276; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 276, x17, x15, 690, x18)

inst_70:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x1; valaddr_reg:x16; val_offset:280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 280, x17, x15, 700, x18)

inst_71:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x8000; valaddr_reg:x16; val_offset:284; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 284, x17, x15, 710, x18)

inst_72:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x155 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfd55; op2val:0x0; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 288, x17, x15, 720, x18)

inst_73:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0xbc00; valaddr_reg:x16; val_offset:292; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 292, x17, x15, 730, x18)

inst_74:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x3c00; valaddr_reg:x16; val_offset:296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 296, x17, x15, 740, x18)

inst_75:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0xfd55; valaddr_reg:x16; val_offset:300; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 300, x17, x15, 750, x18)

inst_76:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x7c01; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 304, x17, x15, 760, x18)

inst_77:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0xfe55; valaddr_reg:x16; val_offset:308; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 308, x17, x15, 770, x18)

inst_78:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x7e01; valaddr_reg:x16; val_offset:312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 312, x17, x15, 780, x18)

inst_79:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0xfe00; valaddr_reg:x16; val_offset:316; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 316, x17, x15, 790, x18)

inst_80:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x7e00; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 320, x17, x15, 800, x18)

inst_81:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0xfc00; valaddr_reg:x16; val_offset:324; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 324, x17, x15, 810, x18)

inst_82:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x7c00; valaddr_reg:x16; val_offset:328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 328, x17, x15, 820, x18)

inst_83:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0xfbff; valaddr_reg:x16; val_offset:332; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 332, x17, x15, 830, x18)

inst_84:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x7bff; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 336, x17, x15, 840, x18)

inst_85:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x8455; valaddr_reg:x16; val_offset:340; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 340, x17, x15, 850, x18)

inst_86:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x401; valaddr_reg:x16; val_offset:344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 344, x17, x15, 860, x18)

inst_87:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x8400; valaddr_reg:x16; val_offset:348; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 348, x17, x15, 870, x18)

inst_88:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x400; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 352, x17, x15, 880, x18)

inst_89:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x83ff; valaddr_reg:x16; val_offset:356; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 356, x17, x15, 890, x18)

inst_90:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x3ff; valaddr_reg:x16; val_offset:360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 360, x17, x15, 900, x18)

inst_91:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x83fe; valaddr_reg:x16; val_offset:364; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 364, x17, x15, 910, x18)

inst_92:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x2; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 368, x17, x15, 920, x18)

inst_93:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x8001; valaddr_reg:x16; val_offset:372; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 372, x17, x15, 930, x18)

inst_94:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x1; valaddr_reg:x16; val_offset:376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 376, x17, x15, 940, x18)

inst_95:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x8000; valaddr_reg:x16; val_offset:380; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 380, x17, x15, 950, x18)

inst_96:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c01; op2val:0x0; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 384, x17, x15, 960, x18)

inst_97:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0xbc00; valaddr_reg:x16; val_offset:388; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 388, x17, x15, 970, x18)

inst_98:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x3c00; valaddr_reg:x16; val_offset:392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 392, x17, x15, 980, x18)

inst_99:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0xfd55; valaddr_reg:x16; val_offset:396; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 396, x17, x15, 990, x18)

inst_100:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x7c01; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 400, x17, x15, 1000, x18)

inst_101:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0xfe55; valaddr_reg:x16; val_offset:404; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 404, x17, x15, 1010, x18)

inst_102:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x7e01; valaddr_reg:x16; val_offset:408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 408, x17, x15, 1020, x18)

inst_103:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0xfe00; valaddr_reg:x16; val_offset:412; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 412, x17, x15, 1030, x18)

inst_104:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x7e00; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 416, x17, x15, 1040, x18)

inst_105:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0xfc00; valaddr_reg:x16; val_offset:420; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 420, x17, x15, 1050, x18)

inst_106:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x7c00; valaddr_reg:x16; val_offset:424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 424, x17, x15, 1060, x18)

inst_107:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0xfbff; valaddr_reg:x16; val_offset:428; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 428, x17, x15, 1070, x18)

inst_108:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x7bff; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 432, x17, x15, 1080, x18)

inst_109:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x8455; valaddr_reg:x16; val_offset:436; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 436, x17, x15, 1090, x18)

inst_110:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x401; valaddr_reg:x16; val_offset:440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 440, x17, x15, 1100, x18)

inst_111:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x8400; valaddr_reg:x16; val_offset:444; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 444, x17, x15, 1110, x18)

inst_112:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x400; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 448, x17, x15, 1120, x18)

inst_113:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x83ff; valaddr_reg:x16; val_offset:452; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 452, x17, x15, 1130, x18)

inst_114:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x3ff; valaddr_reg:x16; val_offset:456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 456, x17, x15, 1140, x18)

inst_115:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x83fe; valaddr_reg:x16; val_offset:460; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 460, x17, x15, 1150, x18)

inst_116:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x2; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 464, x17, x15, 1160, x18)

inst_117:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x8001; valaddr_reg:x16; val_offset:468; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 468, x17, x15, 1170, x18)

inst_118:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x1; valaddr_reg:x16; val_offset:472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 472, x17, x15, 1180, x18)

inst_119:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x8000; valaddr_reg:x16; val_offset:476; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 476, x17, x15, 1190, x18)

inst_120:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x255 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe55; op2val:0x0; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 480, x17, x15, 1200, x18)

inst_121:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0xbc00; valaddr_reg:x16; val_offset:484; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 484, x17, x15, 1210, x18)

inst_122:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x3c00; valaddr_reg:x16; val_offset:488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 488, x17, x15, 1220, x18)

inst_123:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0xfd55; valaddr_reg:x16; val_offset:492; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 492, x17, x15, 1230, x18)

inst_124:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x7c01; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 496, x17, x15, 1240, x18)

inst_125:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0xfe55; valaddr_reg:x16; val_offset:500; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 500, x17, x15, 1250, x18)

inst_126:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x7e01; valaddr_reg:x16; val_offset:504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 504, x17, x15, 1260, x18)

inst_127:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0xfe00; valaddr_reg:x16; val_offset:508; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 508, x17, x15, 1270, x18)

inst_128:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x7e00; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 512, x17, x15, 1280, x18)

inst_129:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0xfc00; valaddr_reg:x16; val_offset:516; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 516, x17, x15, 1290, x18)

inst_130:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x7c00; valaddr_reg:x16; val_offset:520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 520, x17, x15, 1300, x18)

inst_131:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0xfbff; valaddr_reg:x16; val_offset:524; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 524, x17, x15, 1310, x18)

inst_132:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x7bff; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 528, x17, x15, 1320, x18)

inst_133:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x8455; valaddr_reg:x16; val_offset:532; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 532, x17, x15, 1330, x18)

inst_134:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x401; valaddr_reg:x16; val_offset:536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 536, x17, x15, 1340, x18)

inst_135:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x8400; valaddr_reg:x16; val_offset:540; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 540, x17, x15, 1350, x18)

inst_136:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x400; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 544, x17, x15, 1360, x18)

inst_137:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x83ff; valaddr_reg:x16; val_offset:548; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 548, x17, x15, 1370, x18)

inst_138:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x3ff; valaddr_reg:x16; val_offset:552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 552, x17, x15, 1380, x18)

inst_139:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x83fe; valaddr_reg:x16; val_offset:556; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 556, x17, x15, 1390, x18)

inst_140:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x2; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 560, x17, x15, 1400, x18)

inst_141:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x8001; valaddr_reg:x16; val_offset:564; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 564, x17, x15, 1410, x18)

inst_142:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x1; valaddr_reg:x16; val_offset:568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 568, x17, x15, 1420, x18)

inst_143:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x8000; valaddr_reg:x16; val_offset:572; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 572, x17, x15, 1430, x18)

inst_144:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x201 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e01; op2val:0x0; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 576, x17, x15, 1440, x18)

inst_145:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0xbc00; valaddr_reg:x16; val_offset:580; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 580, x17, x15, 1450, x18)

inst_146:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x3c00; valaddr_reg:x16; val_offset:584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 584, x17, x15, 1460, x18)

inst_147:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0xfd55; valaddr_reg:x16; val_offset:588; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 588, x17, x15, 1470, x18)

inst_148:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x7c01; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 592, x17, x15, 1480, x18)

inst_149:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0xfe55; valaddr_reg:x16; val_offset:596; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 596, x17, x15, 1490, x18)

inst_150:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x7e01; valaddr_reg:x16; val_offset:600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 600, x17, x15, 1500, x18)

inst_151:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0xfe00; valaddr_reg:x16; val_offset:604; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 604, x17, x15, 1510, x18)

inst_152:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x7e00; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 608, x17, x15, 1520, x18)

inst_153:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0xfc00; valaddr_reg:x16; val_offset:612; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 612, x17, x15, 1530, x18)

inst_154:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x7c00; valaddr_reg:x16; val_offset:616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 616, x17, x15, 1540, x18)

inst_155:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0xfbff; valaddr_reg:x16; val_offset:620; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 620, x17, x15, 1550, x18)

inst_156:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x7bff; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 624, x17, x15, 1560, x18)

inst_157:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x8455; valaddr_reg:x16; val_offset:628; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 628, x17, x15, 1570, x18)

inst_158:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x401; valaddr_reg:x16; val_offset:632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 632, x17, x15, 1580, x18)

inst_159:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x8400; valaddr_reg:x16; val_offset:636; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 636, x17, x15, 1590, x18)

inst_160:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x400; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 640, x17, x15, 1600, x18)

inst_161:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x83ff; valaddr_reg:x16; val_offset:644; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 644, x17, x15, 1610, x18)

inst_162:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x3ff; valaddr_reg:x16; val_offset:648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 648, x17, x15, 1620, x18)

inst_163:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x83fe; valaddr_reg:x16; val_offset:652; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 652, x17, x15, 1630, x18)

inst_164:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x2; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 656, x17, x15, 1640, x18)

inst_165:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x8001; valaddr_reg:x16; val_offset:660; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 660, x17, x15, 1650, x18)

inst_166:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x1; valaddr_reg:x16; val_offset:664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 664, x17, x15, 1660, x18)

inst_167:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x8000; valaddr_reg:x16; val_offset:668; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 668, x17, x15, 1670, x18)

inst_168:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfe00; op2val:0x0; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 672, x17, x15, 1680, x18)

inst_169:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0xbc00; valaddr_reg:x16; val_offset:676; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 676, x17, x15, 1690, x18)

inst_170:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x3c00; valaddr_reg:x16; val_offset:680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 680, x17, x15, 1700, x18)

inst_171:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0xfd55; valaddr_reg:x16; val_offset:684; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 684, x17, x15, 1710, x18)

inst_172:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x7c01; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 688, x17, x15, 1720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0xfe55; valaddr_reg:x16; val_offset:692; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 692, x17, x15, 1730, x18)

inst_174:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x7e01; valaddr_reg:x16; val_offset:696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 696, x17, x15, 1740, x18)

inst_175:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0xfe00; valaddr_reg:x16; val_offset:700; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 700, x17, x15, 1750, x18)

inst_176:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x7e00; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 704, x17, x15, 1760, x18)

inst_177:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0xfc00; valaddr_reg:x16; val_offset:708; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 708, x17, x15, 1770, x18)

inst_178:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x7c00; valaddr_reg:x16; val_offset:712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 712, x17, x15, 1780, x18)

inst_179:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0xfbff; valaddr_reg:x16; val_offset:716; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 716, x17, x15, 1790, x18)

inst_180:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x7bff; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 720, x17, x15, 1800, x18)

inst_181:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x8455; valaddr_reg:x16; val_offset:724; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 724, x17, x15, 1810, x18)

inst_182:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x401; valaddr_reg:x16; val_offset:728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 728, x17, x15, 1820, x18)

inst_183:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x8400; valaddr_reg:x16; val_offset:732; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 732, x17, x15, 1830, x18)

inst_184:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x400; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 736, x17, x15, 1840, x18)

inst_185:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x83ff; valaddr_reg:x16; val_offset:740; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 740, x17, x15, 1850, x18)

inst_186:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x3ff; valaddr_reg:x16; val_offset:744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 744, x17, x15, 1860, x18)

inst_187:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x83fe; valaddr_reg:x16; val_offset:748; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 748, x17, x15, 1870, x18)

inst_188:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x2; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 752, x17, x15, 1880, x18)

inst_189:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x8001; valaddr_reg:x16; val_offset:756; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 756, x17, x15, 1890, x18)

inst_190:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x1; valaddr_reg:x16; val_offset:760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 760, x17, x15, 1900, x18)

inst_191:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x8000; valaddr_reg:x16; val_offset:764; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 764, x17, x15, 1910, x18)

inst_192:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x200 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7e00; op2val:0x0; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 768, x17, x15, 1920, x18)

inst_193:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0xbc00; valaddr_reg:x16; val_offset:772; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 772, x17, x15, 1930, x18)

inst_194:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x3c00; valaddr_reg:x16; val_offset:776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 776, x17, x15, 1940, x18)

inst_195:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0xfd55; valaddr_reg:x16; val_offset:780; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 780, x17, x15, 1950, x18)

inst_196:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x7c01; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 784, x17, x15, 1960, x18)

inst_197:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0xfe55; valaddr_reg:x16; val_offset:788; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 788, x17, x15, 1970, x18)

inst_198:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x7e01; valaddr_reg:x16; val_offset:792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 792, x17, x15, 1980, x18)

inst_199:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0xfe00; valaddr_reg:x16; val_offset:796; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 796, x17, x15, 1990, x18)

inst_200:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x7e00; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 800, x17, x15, 2000, x18)

inst_201:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0xfc00; valaddr_reg:x16; val_offset:804; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 804, x17, x15, 2010, x18)

inst_202:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x7c00; valaddr_reg:x16; val_offset:808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 808, x17, x15, 2020, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_203:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0xfbff; valaddr_reg:x16; val_offset:812; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 812, x17, x15, 0, x18)

inst_204:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x7bff; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 816, x17, x15, 10, x18)

inst_205:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x8455; valaddr_reg:x16; val_offset:820; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 820, x17, x15, 20, x18)

inst_206:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x401; valaddr_reg:x16; val_offset:824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 824, x17, x15, 30, x18)

inst_207:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x8400; valaddr_reg:x16; val_offset:828; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 828, x17, x15, 40, x18)

inst_208:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x400; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 832, x17, x15, 50, x18)

inst_209:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x83ff; valaddr_reg:x16; val_offset:836; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 836, x17, x15, 60, x18)

inst_210:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x3ff; valaddr_reg:x16; val_offset:840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 840, x17, x15, 70, x18)

inst_211:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x83fe; valaddr_reg:x16; val_offset:844; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 844, x17, x15, 80, x18)

inst_212:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x2; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 848, x17, x15, 90, x18)

inst_213:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x8001; valaddr_reg:x16; val_offset:852; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 852, x17, x15, 100, x18)

inst_214:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x1; valaddr_reg:x16; val_offset:856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 856, x17, x15, 110, x18)

inst_215:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x8000; valaddr_reg:x16; val_offset:860; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 860, x17, x15, 120, x18)

inst_216:
// fs1 == 1 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfc00; op2val:0x0; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 864, x17, x15, 130, x18)

inst_217:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0xbc00; valaddr_reg:x16; val_offset:868; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 868, x17, x15, 140, x18)

inst_218:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x3c00; valaddr_reg:x16; val_offset:872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 872, x17, x15, 150, x18)

inst_219:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0xfd55; valaddr_reg:x16; val_offset:876; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 876, x17, x15, 160, x18)

inst_220:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x7c01; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 880, x17, x15, 170, x18)

inst_221:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0xfe55; valaddr_reg:x16; val_offset:884; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 884, x17, x15, 180, x18)

inst_222:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x7e01; valaddr_reg:x16; val_offset:888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 888, x17, x15, 190, x18)

inst_223:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0xfe00; valaddr_reg:x16; val_offset:892; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 892, x17, x15, 200, x18)

inst_224:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x7e00; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 896, x17, x15, 210, x18)

inst_225:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0xfc00; valaddr_reg:x16; val_offset:900; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 900, x17, x15, 220, x18)

inst_226:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x7c00; valaddr_reg:x16; val_offset:904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 904, x17, x15, 230, x18)

inst_227:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0xfbff; valaddr_reg:x16; val_offset:908; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 908, x17, x15, 240, x18)

inst_228:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x7bff; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 912, x17, x15, 250, x18)

inst_229:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x8455; valaddr_reg:x16; val_offset:916; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 916, x17, x15, 260, x18)

inst_230:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x401; valaddr_reg:x16; val_offset:920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 920, x17, x15, 270, x18)

inst_231:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x8400; valaddr_reg:x16; val_offset:924; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 924, x17, x15, 280, x18)

inst_232:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x400; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 928, x17, x15, 290, x18)

inst_233:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x83ff; valaddr_reg:x16; val_offset:932; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 932, x17, x15, 300, x18)

inst_234:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x3ff; valaddr_reg:x16; val_offset:936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 936, x17, x15, 310, x18)

inst_235:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x83fe; valaddr_reg:x16; val_offset:940; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 940, x17, x15, 320, x18)

inst_236:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x2; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 944, x17, x15, 330, x18)

inst_237:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x8001; valaddr_reg:x16; val_offset:948; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 948, x17, x15, 340, x18)

inst_238:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x1; valaddr_reg:x16; val_offset:952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 952, x17, x15, 350, x18)

inst_239:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x8000; valaddr_reg:x16; val_offset:956; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 956, x17, x15, 360, x18)

inst_240:
// fs1 == 0 and fe1 == 0x1f and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7c00; op2val:0x0; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 960, x17, x15, 370, x18)

inst_241:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0xbc00; valaddr_reg:x16; val_offset:964; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 964, x17, x15, 380, x18)

inst_242:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x3c00; valaddr_reg:x16; val_offset:968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 968, x17, x15, 390, x18)

inst_243:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0xfd55; valaddr_reg:x16; val_offset:972; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 972, x17, x15, 400, x18)

inst_244:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x7c01; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 976, x17, x15, 410, x18)

inst_245:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0xfe55; valaddr_reg:x16; val_offset:980; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 980, x17, x15, 420, x18)

inst_246:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x7e01; valaddr_reg:x16; val_offset:984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 984, x17, x15, 430, x18)

inst_247:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0xfe00; valaddr_reg:x16; val_offset:988; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 988, x17, x15, 440, x18)

inst_248:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x7e00; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 992, x17, x15, 450, x18)

inst_249:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0xfc00; valaddr_reg:x16; val_offset:996; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 996, x17, x15, 460, x18)

inst_250:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x7c00; valaddr_reg:x16; val_offset:1000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1000, x17, x15, 470, x18)

inst_251:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0xfbff; valaddr_reg:x16; val_offset:1004; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1004, x17, x15, 480, x18)

inst_252:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x7bff; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1008, x17, x15, 490, x18)

inst_253:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x8455; valaddr_reg:x16; val_offset:1012; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1012, x17, x15, 500, x18)

inst_254:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x401; valaddr_reg:x16; val_offset:1016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1016, x17, x15, 510, x18)

inst_255:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x8400; valaddr_reg:x16; val_offset:1020; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1020, x17, x15, 520, x18)

inst_256:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x400; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1024, x17, x15, 530, x18)

inst_257:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x83ff; valaddr_reg:x16; val_offset:1028; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1028, x17, x15, 540, x18)

inst_258:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x3ff; valaddr_reg:x16; val_offset:1032; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1032, x17, x15, 550, x18)

inst_259:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x83fe; valaddr_reg:x16; val_offset:1036; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1036, x17, x15, 560, x18)

inst_260:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x2; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1040, x17, x15, 570, x18)

inst_261:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x8001; valaddr_reg:x16; val_offset:1044; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1044, x17, x15, 580, x18)

inst_262:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x1; valaddr_reg:x16; val_offset:1048; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1048, x17, x15, 590, x18)

inst_263:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x8000; valaddr_reg:x16; val_offset:1052; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1052, x17, x15, 600, x18)

inst_264:
// fs1 == 1 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xfbff; op2val:0x0; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1056, x17, x15, 610, x18)

inst_265:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0xbc00; valaddr_reg:x16; val_offset:1060; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1060, x17, x15, 620, x18)

inst_266:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x3c00; valaddr_reg:x16; val_offset:1064; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1064, x17, x15, 630, x18)

inst_267:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0xfd55; valaddr_reg:x16; val_offset:1068; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1068, x17, x15, 640, x18)

inst_268:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x7c01; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1072, x17, x15, 650, x18)

inst_269:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0xfe55; valaddr_reg:x16; val_offset:1076; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1076, x17, x15, 660, x18)

inst_270:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x7e01; valaddr_reg:x16; val_offset:1080; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1080, x17, x15, 670, x18)

inst_271:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0xfe00; valaddr_reg:x16; val_offset:1084; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1084, x17, x15, 680, x18)

inst_272:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x7e00; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1088, x17, x15, 690, x18)

inst_273:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0xfc00; valaddr_reg:x16; val_offset:1092; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1092, x17, x15, 700, x18)

inst_274:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x7c00; valaddr_reg:x16; val_offset:1096; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1096, x17, x15, 710, x18)

inst_275:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0xfbff; valaddr_reg:x16; val_offset:1100; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1100, x17, x15, 720, x18)

inst_276:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x7bff; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1104, x17, x15, 730, x18)

inst_277:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x8455; valaddr_reg:x16; val_offset:1108; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1108, x17, x15, 740, x18)

inst_278:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x401; valaddr_reg:x16; val_offset:1112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1112, x17, x15, 750, x18)

inst_279:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x8400; valaddr_reg:x16; val_offset:1116; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1116, x17, x15, 760, x18)

inst_280:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x400; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1120, x17, x15, 770, x18)

inst_281:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x83ff; valaddr_reg:x16; val_offset:1124; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1124, x17, x15, 780, x18)

inst_282:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x3ff; valaddr_reg:x16; val_offset:1128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1128, x17, x15, 790, x18)

inst_283:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x83fe; valaddr_reg:x16; val_offset:1132; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1132, x17, x15, 800, x18)

inst_284:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x2; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1136, x17, x15, 810, x18)

inst_285:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x8001; valaddr_reg:x16; val_offset:1140; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1140, x17, x15, 820, x18)

inst_286:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x1; valaddr_reg:x16; val_offset:1144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1144, x17, x15, 830, x18)

inst_287:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x8000; valaddr_reg:x16; val_offset:1148; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1148, x17, x15, 840, x18)

inst_288:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x7bff; op2val:0x0; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1152, x17, x15, 850, x18)

inst_289:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0xbc00; valaddr_reg:x16; val_offset:1156; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1156, x17, x15, 860, x18)

inst_290:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x3c00; valaddr_reg:x16; val_offset:1160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1160, x17, x15, 870, x18)

inst_291:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0xfd55; valaddr_reg:x16; val_offset:1164; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1164, x17, x15, 880, x18)

inst_292:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x7c01; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1168, x17, x15, 890, x18)

inst_293:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0xfe55; valaddr_reg:x16; val_offset:1172; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1172, x17, x15, 900, x18)

inst_294:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x7e01; valaddr_reg:x16; val_offset:1176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1176, x17, x15, 910, x18)

inst_295:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0xfe00; valaddr_reg:x16; val_offset:1180; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1180, x17, x15, 920, x18)

inst_296:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x7e00; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1184, x17, x15, 930, x18)

inst_297:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0xfc00; valaddr_reg:x16; val_offset:1188; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1188, x17, x15, 940, x18)

inst_298:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x7c00; valaddr_reg:x16; val_offset:1192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1192, x17, x15, 950, x18)

inst_299:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0xfbff; valaddr_reg:x16; val_offset:1196; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1196, x17, x15, 960, x18)

inst_300:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x7bff; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1200, x17, x15, 970, x18)

inst_301:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x8455; valaddr_reg:x16; val_offset:1204; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1204, x17, x15, 980, x18)

inst_302:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x401; valaddr_reg:x16; val_offset:1208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1208, x17, x15, 990, x18)

inst_303:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x8400; valaddr_reg:x16; val_offset:1212; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1212, x17, x15, 1000, x18)

inst_304:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x400; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1216, x17, x15, 1010, x18)

inst_305:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x83ff; valaddr_reg:x16; val_offset:1220; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1220, x17, x15, 1020, x18)

inst_306:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x3ff; valaddr_reg:x16; val_offset:1224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1224, x17, x15, 1030, x18)

inst_307:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x83fe; valaddr_reg:x16; val_offset:1228; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1228, x17, x15, 1040, x18)

inst_308:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x2; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1232, x17, x15, 1050, x18)

inst_309:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x8001; valaddr_reg:x16; val_offset:1236; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1236, x17, x15, 1060, x18)

inst_310:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x1; valaddr_reg:x16; val_offset:1240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1240, x17, x15, 1070, x18)

inst_311:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x8000; valaddr_reg:x16; val_offset:1244; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1244, x17, x15, 1080, x18)

inst_312:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8455; op2val:0x0; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1248, x17, x15, 1090, x18)

inst_313:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0xbc00; valaddr_reg:x16; val_offset:1252; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1252, x17, x15, 1100, x18)

inst_314:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x3c00; valaddr_reg:x16; val_offset:1256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1256, x17, x15, 1110, x18)

inst_315:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0xfd55; valaddr_reg:x16; val_offset:1260; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1260, x17, x15, 1120, x18)

inst_316:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x7c01; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1264, x17, x15, 1130, x18)

inst_317:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0xfe55; valaddr_reg:x16; val_offset:1268; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1268, x17, x15, 1140, x18)

inst_318:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x7e01; valaddr_reg:x16; val_offset:1272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1272, x17, x15, 1150, x18)

inst_319:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0xfe00; valaddr_reg:x16; val_offset:1276; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1276, x17, x15, 1160, x18)

inst_320:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x7e00; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1280, x17, x15, 1170, x18)

inst_321:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0xfc00; valaddr_reg:x16; val_offset:1284; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1284, x17, x15, 1180, x18)

inst_322:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x7c00; valaddr_reg:x16; val_offset:1288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1288, x17, x15, 1190, x18)

inst_323:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0xfbff; valaddr_reg:x16; val_offset:1292; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1292, x17, x15, 1200, x18)

inst_324:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x7bff; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1296, x17, x15, 1210, x18)

inst_325:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x8455; valaddr_reg:x16; val_offset:1300; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1300, x17, x15, 1220, x18)

inst_326:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x401; valaddr_reg:x16; val_offset:1304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1304, x17, x15, 1230, x18)

inst_327:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x8400; valaddr_reg:x16; val_offset:1308; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1308, x17, x15, 1240, x18)

inst_328:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x400; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1312, x17, x15, 1250, x18)

inst_329:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x83ff; valaddr_reg:x16; val_offset:1316; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1316, x17, x15, 1260, x18)

inst_330:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x3ff; valaddr_reg:x16; val_offset:1320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1320, x17, x15, 1270, x18)

inst_331:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x83fe; valaddr_reg:x16; val_offset:1324; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1324, x17, x15, 1280, x18)

inst_332:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x2; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1328, x17, x15, 1290, x18)

inst_333:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x8001; valaddr_reg:x16; val_offset:1332; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1332, x17, x15, 1300, x18)

inst_334:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x1; valaddr_reg:x16; val_offset:1336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1336, x17, x15, 1310, x18)

inst_335:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x8000; valaddr_reg:x16; val_offset:1340; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1340, x17, x15, 1320, x18)

inst_336:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x401; op2val:0x0; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1344, x17, x15, 1330, x18)

inst_337:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0xbc00; valaddr_reg:x16; val_offset:1348; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1348, x17, x15, 1340, x18)

inst_338:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x3c00; valaddr_reg:x16; val_offset:1352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1352, x17, x15, 1350, x18)

inst_339:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0xfd55; valaddr_reg:x16; val_offset:1356; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1356, x17, x15, 1360, x18)

inst_340:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x7c01; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1360, x17, x15, 1370, x18)

inst_341:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0xfe55; valaddr_reg:x16; val_offset:1364; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1364, x17, x15, 1380, x18)

inst_342:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x7e01; valaddr_reg:x16; val_offset:1368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1368, x17, x15, 1390, x18)

inst_343:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0xfe00; valaddr_reg:x16; val_offset:1372; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1372, x17, x15, 1400, x18)

inst_344:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x7e00; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1376, x17, x15, 1410, x18)

inst_345:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0xfc00; valaddr_reg:x16; val_offset:1380; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1380, x17, x15, 1420, x18)

inst_346:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x7c00; valaddr_reg:x16; val_offset:1384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1384, x17, x15, 1430, x18)

inst_347:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0xfbff; valaddr_reg:x16; val_offset:1388; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1388, x17, x15, 1440, x18)

inst_348:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x7bff; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1392, x17, x15, 1450, x18)

inst_349:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x8455; valaddr_reg:x16; val_offset:1396; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1396, x17, x15, 1460, x18)

inst_350:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x401; valaddr_reg:x16; val_offset:1400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1400, x17, x15, 1470, x18)

inst_351:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x8400; valaddr_reg:x16; val_offset:1404; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1404, x17, x15, 1480, x18)

inst_352:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x400; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1408, x17, x15, 1490, x18)

inst_353:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x83ff; valaddr_reg:x16; val_offset:1412; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1412, x17, x15, 1500, x18)

inst_354:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x3ff; valaddr_reg:x16; val_offset:1416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1416, x17, x15, 1510, x18)

inst_355:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x83fe; valaddr_reg:x16; val_offset:1420; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1420, x17, x15, 1520, x18)

inst_356:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x2; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1424, x17, x15, 1530, x18)

inst_357:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x8001; valaddr_reg:x16; val_offset:1428; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1428, x17, x15, 1540, x18)

inst_358:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x1; valaddr_reg:x16; val_offset:1432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1432, x17, x15, 1550, x18)

inst_359:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x8000; valaddr_reg:x16; val_offset:1436; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1436, x17, x15, 1560, x18)

inst_360:
// fs1 == 1 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8400; op2val:0x0; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1440, x17, x15, 1570, x18)

inst_361:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0xbc00; valaddr_reg:x16; val_offset:1444; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1444, x17, x15, 1580, x18)

inst_362:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x3c00; valaddr_reg:x16; val_offset:1448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1448, x17, x15, 1590, x18)

inst_363:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0xfd55; valaddr_reg:x16; val_offset:1452; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1452, x17, x15, 1600, x18)

inst_364:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x7c01; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1456, x17, x15, 1610, x18)

inst_365:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0xfe55; valaddr_reg:x16; val_offset:1460; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1460, x17, x15, 1620, x18)

inst_366:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x7e01; valaddr_reg:x16; val_offset:1464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1464, x17, x15, 1630, x18)

inst_367:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0xfe00; valaddr_reg:x16; val_offset:1468; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1468, x17, x15, 1640, x18)

inst_368:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x7e00; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1472, x17, x15, 1650, x18)

inst_369:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0xfc00; valaddr_reg:x16; val_offset:1476; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1476, x17, x15, 1660, x18)

inst_370:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x7c00; valaddr_reg:x16; val_offset:1480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1480, x17, x15, 1670, x18)

inst_371:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0xfbff; valaddr_reg:x16; val_offset:1484; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1484, x17, x15, 1680, x18)

inst_372:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x7bff; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1488, x17, x15, 1690, x18)

inst_373:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x8455; valaddr_reg:x16; val_offset:1492; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1492, x17, x15, 1700, x18)

inst_374:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x401; valaddr_reg:x16; val_offset:1496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1496, x17, x15, 1710, x18)

inst_375:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x8400; valaddr_reg:x16; val_offset:1500; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1500, x17, x15, 1720, x18)

inst_376:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x400; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1504, x17, x15, 1730, x18)

inst_377:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x83ff; valaddr_reg:x16; val_offset:1508; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1508, x17, x15, 1740, x18)

inst_378:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x3ff; valaddr_reg:x16; val_offset:1512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1512, x17, x15, 1750, x18)

inst_379:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x83fe; valaddr_reg:x16; val_offset:1516; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1516, x17, x15, 1760, x18)

inst_380:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x2; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1520, x17, x15, 1770, x18)

inst_381:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x8001; valaddr_reg:x16; val_offset:1524; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1524, x17, x15, 1780, x18)

inst_382:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x1; valaddr_reg:x16; val_offset:1528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1528, x17, x15, 1790, x18)

inst_383:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x8000; valaddr_reg:x16; val_offset:1532; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1532, x17, x15, 1800, x18)

inst_384:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x400; op2val:0x0; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1536, x17, x15, 1810, x18)

inst_385:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0xbc00; valaddr_reg:x16; val_offset:1540; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1540, x17, x15, 1820, x18)

inst_386:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x3c00; valaddr_reg:x16; val_offset:1544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1544, x17, x15, 1830, x18)

inst_387:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0xfd55; valaddr_reg:x16; val_offset:1548; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1548, x17, x15, 1840, x18)

inst_388:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x7c01; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1552, x17, x15, 1850, x18)

inst_389:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0xfe55; valaddr_reg:x16; val_offset:1556; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1556, x17, x15, 1860, x18)

inst_390:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x7e01; valaddr_reg:x16; val_offset:1560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1560, x17, x15, 1870, x18)

inst_391:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0xfe00; valaddr_reg:x16; val_offset:1564; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1564, x17, x15, 1880, x18)

inst_392:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x7e00; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1568, x17, x15, 1890, x18)

inst_393:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0xfc00; valaddr_reg:x16; val_offset:1572; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1572, x17, x15, 1900, x18)

inst_394:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x7c00; valaddr_reg:x16; val_offset:1576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1576, x17, x15, 1910, x18)

inst_395:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0xfbff; valaddr_reg:x16; val_offset:1580; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1580, x17, x15, 1920, x18)

inst_396:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x7bff; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1584, x17, x15, 1930, x18)

inst_397:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x8455; valaddr_reg:x16; val_offset:1588; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1588, x17, x15, 1940, x18)

inst_398:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x401; valaddr_reg:x16; val_offset:1592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1592, x17, x15, 1950, x18)

inst_399:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x8400; valaddr_reg:x16; val_offset:1596; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1596, x17, x15, 1960, x18)

inst_400:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x400; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1600, x17, x15, 1970, x18)

inst_401:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x83ff; valaddr_reg:x16; val_offset:1604; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1604, x17, x15, 1980, x18)

inst_402:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x3ff; valaddr_reg:x16; val_offset:1608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1608, x17, x15, 1990, x18)

inst_403:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x83fe; valaddr_reg:x16; val_offset:1612; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1612, x17, x15, 2000, x18)

inst_404:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x2; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1616, x17, x15, 2010, x18)

inst_405:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x8001; valaddr_reg:x16; val_offset:1620; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1620, x17, x15, 2020, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_406:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x1; valaddr_reg:x16; val_offset:1624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1624, x17, x15, 0, x18)

inst_407:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x8000; valaddr_reg:x16; val_offset:1628; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1628, x17, x15, 10, x18)

inst_408:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83ff; op2val:0x0; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1632, x17, x15, 20, x18)

inst_409:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0xbc00; valaddr_reg:x16; val_offset:1636; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1636, x17, x15, 30, x18)

inst_410:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x3c00; valaddr_reg:x16; val_offset:1640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1640, x17, x15, 40, x18)

inst_411:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0xfd55; valaddr_reg:x16; val_offset:1644; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1644, x17, x15, 50, x18)

inst_412:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x7c01; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1648, x17, x15, 60, x18)

inst_413:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0xfe55; valaddr_reg:x16; val_offset:1652; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1652, x17, x15, 70, x18)

inst_414:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x7e01; valaddr_reg:x16; val_offset:1656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1656, x17, x15, 80, x18)

inst_415:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0xfe00; valaddr_reg:x16; val_offset:1660; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1660, x17, x15, 90, x18)

inst_416:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x7e00; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1664, x17, x15, 100, x18)

inst_417:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0xfc00; valaddr_reg:x16; val_offset:1668; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1668, x17, x15, 110, x18)

inst_418:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x7c00; valaddr_reg:x16; val_offset:1672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1672, x17, x15, 120, x18)

inst_419:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0xfbff; valaddr_reg:x16; val_offset:1676; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1676, x17, x15, 130, x18)

inst_420:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x7bff; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1680, x17, x15, 140, x18)

inst_421:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x8455; valaddr_reg:x16; val_offset:1684; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1684, x17, x15, 150, x18)

inst_422:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x401; valaddr_reg:x16; val_offset:1688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1688, x17, x15, 160, x18)

inst_423:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x8400; valaddr_reg:x16; val_offset:1692; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1692, x17, x15, 170, x18)

inst_424:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x400; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1696, x17, x15, 180, x18)

inst_425:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x83ff; valaddr_reg:x16; val_offset:1700; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1700, x17, x15, 190, x18)

inst_426:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x3ff; valaddr_reg:x16; val_offset:1704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1704, x17, x15, 200, x18)

inst_427:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x83fe; valaddr_reg:x16; val_offset:1708; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1708, x17, x15, 210, x18)

inst_428:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x2; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1712, x17, x15, 220, x18)

inst_429:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x8001; valaddr_reg:x16; val_offset:1716; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1716, x17, x15, 230, x18)

inst_430:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x1; valaddr_reg:x16; val_offset:1720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1720, x17, x15, 240, x18)

inst_431:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x8000; valaddr_reg:x16; val_offset:1724; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1724, x17, x15, 250, x18)

inst_432:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ff; op2val:0x0; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1728, x17, x15, 260, x18)

inst_433:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0xbc00; valaddr_reg:x16; val_offset:1732; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1732, x17, x15, 270, x18)

inst_434:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x3c00; valaddr_reg:x16; val_offset:1736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1736, x17, x15, 280, x18)

inst_435:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0xfd55; valaddr_reg:x16; val_offset:1740; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1740, x17, x15, 290, x18)

inst_436:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x7c01; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1744, x17, x15, 300, x18)

inst_437:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0xfe55; valaddr_reg:x16; val_offset:1748; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1748, x17, x15, 310, x18)

inst_438:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x7e01; valaddr_reg:x16; val_offset:1752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1752, x17, x15, 320, x18)

inst_439:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0xfe00; valaddr_reg:x16; val_offset:1756; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1756, x17, x15, 330, x18)

inst_440:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x7e00; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1760, x17, x15, 340, x18)

inst_441:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0xfc00; valaddr_reg:x16; val_offset:1764; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1764, x17, x15, 350, x18)

inst_442:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x7c00; valaddr_reg:x16; val_offset:1768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1768, x17, x15, 360, x18)

inst_443:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0xfbff; valaddr_reg:x16; val_offset:1772; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1772, x17, x15, 370, x18)

inst_444:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x7bff; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1776, x17, x15, 380, x18)

inst_445:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x8455; valaddr_reg:x16; val_offset:1780; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1780, x17, x15, 390, x18)

inst_446:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x401; valaddr_reg:x16; val_offset:1784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1784, x17, x15, 400, x18)

inst_447:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x8400; valaddr_reg:x16; val_offset:1788; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1788, x17, x15, 410, x18)

inst_448:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x400; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1792, x17, x15, 420, x18)

inst_449:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x83ff; valaddr_reg:x16; val_offset:1796; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1796, x17, x15, 430, x18)

inst_450:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x3ff; valaddr_reg:x16; val_offset:1800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1800, x17, x15, 440, x18)

inst_451:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x83fe; valaddr_reg:x16; val_offset:1804; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1804, x17, x15, 450, x18)

inst_452:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x2; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1808, x17, x15, 460, x18)

inst_453:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x8001; valaddr_reg:x16; val_offset:1812; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1812, x17, x15, 470, x18)

inst_454:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x1; valaddr_reg:x16; val_offset:1816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1816, x17, x15, 480, x18)

inst_455:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x8000; valaddr_reg:x16; val_offset:1820; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1820, x17, x15, 490, x18)

inst_456:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x3fe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x83fe; op2val:0x0; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1824, x17, x15, 500, x18)

inst_457:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0xbc00; valaddr_reg:x16; val_offset:1828; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1828, x17, x15, 510, x18)

inst_458:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x3c00; valaddr_reg:x16; val_offset:1832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1832, x17, x15, 520, x18)

inst_459:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0xfd55; valaddr_reg:x16; val_offset:1836; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1836, x17, x15, 530, x18)

inst_460:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x7c01; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1840, x17, x15, 540, x18)

inst_461:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0xfe55; valaddr_reg:x16; val_offset:1844; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1844, x17, x15, 550, x18)

inst_462:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x7e01; valaddr_reg:x16; val_offset:1848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1848, x17, x15, 560, x18)

inst_463:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0xfe00; valaddr_reg:x16; val_offset:1852; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1852, x17, x15, 570, x18)

inst_464:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x7e00; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1856, x17, x15, 580, x18)

inst_465:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0xfc00; valaddr_reg:x16; val_offset:1860; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1860, x17, x15, 590, x18)

inst_466:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x7c00; valaddr_reg:x16; val_offset:1864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1864, x17, x15, 600, x18)

inst_467:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0xfbff; valaddr_reg:x16; val_offset:1868; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1868, x17, x15, 610, x18)

inst_468:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x7bff; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1872, x17, x15, 620, x18)

inst_469:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x8455; valaddr_reg:x16; val_offset:1876; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1876, x17, x15, 630, x18)

inst_470:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x401; valaddr_reg:x16; val_offset:1880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1880, x17, x15, 640, x18)

inst_471:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x8400; valaddr_reg:x16; val_offset:1884; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1884, x17, x15, 650, x18)

inst_472:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x400; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1888, x17, x15, 660, x18)

inst_473:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x83ff; valaddr_reg:x16; val_offset:1892; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1892, x17, x15, 670, x18)

inst_474:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x3ff; valaddr_reg:x16; val_offset:1896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1896, x17, x15, 680, x18)

inst_475:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x83fe; valaddr_reg:x16; val_offset:1900; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1900, x17, x15, 690, x18)

inst_476:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x2; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1904, x17, x15, 700, x18)

inst_477:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x8001; valaddr_reg:x16; val_offset:1908; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1908, x17, x15, 710, x18)

inst_478:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x1; valaddr_reg:x16; val_offset:1912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1912, x17, x15, 720, x18)

inst_479:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x8000; valaddr_reg:x16; val_offset:1916; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1916, x17, x15, 730, x18)

inst_480:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x2; op2val:0x0; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1920, x17, x15, 740, x18)

inst_481:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0xbc00; valaddr_reg:x16; val_offset:1924; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1924, x17, x15, 750, x18)

inst_482:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x3c00; valaddr_reg:x16; val_offset:1928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1928, x17, x15, 760, x18)

inst_483:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0xfd55; valaddr_reg:x16; val_offset:1932; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1932, x17, x15, 770, x18)

inst_484:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x7c01; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1936, x17, x15, 780, x18)

inst_485:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0xfe55; valaddr_reg:x16; val_offset:1940; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1940, x17, x15, 790, x18)

inst_486:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x7e01; valaddr_reg:x16; val_offset:1944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1944, x17, x15, 800, x18)

inst_487:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0xfe00; valaddr_reg:x16; val_offset:1948; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1948, x17, x15, 810, x18)

inst_488:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x7e00; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1952, x17, x15, 820, x18)

inst_489:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0xfc00; valaddr_reg:x16; val_offset:1956; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1956, x17, x15, 830, x18)

inst_490:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x7c00; valaddr_reg:x16; val_offset:1960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1960, x17, x15, 840, x18)

inst_491:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0xfbff; valaddr_reg:x16; val_offset:1964; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1964, x17, x15, 850, x18)

inst_492:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x7bff; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1968, x17, x15, 860, x18)

inst_493:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x8455; valaddr_reg:x16; val_offset:1972; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1972, x17, x15, 870, x18)

inst_494:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x401; valaddr_reg:x16; val_offset:1976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1976, x17, x15, 880, x18)

inst_495:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x8400; valaddr_reg:x16; val_offset:1980; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1980, x17, x15, 890, x18)

inst_496:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x400; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1984, x17, x15, 900, x18)

inst_497:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x83ff; valaddr_reg:x16; val_offset:1988; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1988, x17, x15, 910, x18)

inst_498:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x3ff; valaddr_reg:x16; val_offset:1992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1992, x17, x15, 920, x18)

inst_499:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x83fe; valaddr_reg:x16; val_offset:1996; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 1996, x17, x15, 930, x18)

inst_500:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x2; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 2000, x17, x15, 940, x18)

inst_501:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x8001; valaddr_reg:x16; val_offset:2004; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 2004, x17, x15, 950, x18)

inst_502:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x1; valaddr_reg:x16; val_offset:2008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 2008, x17, x15, 960, x18)

inst_503:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x8000; valaddr_reg:x16; val_offset:2012; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 2012, x17, x15, 970, x18)

inst_504:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8001; op2val:0x0; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 2016, x17, x15, 980, x18)

inst_505:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xbc00; valaddr_reg:x16; val_offset:2020; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 2020, x17, x15, 990, x18)

inst_506:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x3c00; valaddr_reg:x16; val_offset:2024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 2024, x17, x15, 1000, x18)

inst_507:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfd55; valaddr_reg:x16; val_offset:2028; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 2028, x17, x15, 1010, x18)
addi x16,x16,2032

inst_508:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7c01; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 0, x17, x15, 1020, x18)

inst_509:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfe55; valaddr_reg:x16; val_offset:4; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 4, x17, x15, 1030, x18)

inst_510:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7e01; valaddr_reg:x16; val_offset:8; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 8, x17, x15, 1040, x18)

inst_511:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfe00; valaddr_reg:x16; val_offset:12; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 12, x17, x15, 1050, x18)

inst_512:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7e00; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 16, x17, x15, 1060, x18)

inst_513:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfc00; valaddr_reg:x16; val_offset:20; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 20, x17, x15, 1070, x18)

inst_514:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7c00; valaddr_reg:x16; val_offset:24; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 24, x17, x15, 1080, x18)

inst_515:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0xfbff; valaddr_reg:x16; val_offset:28; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 28, x17, x15, 1090, x18)

inst_516:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x7bff; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 32, x17, x15, 1100, x18)

inst_517:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x8455; valaddr_reg:x16; val_offset:36; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 36, x17, x15, 1110, x18)

inst_518:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x401; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 40, x17, x15, 1120, x18)

inst_519:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x8400; valaddr_reg:x16; val_offset:44; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 44, x17, x15, 1130, x18)

inst_520:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x400; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 48, x17, x15, 1140, x18)

inst_521:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x83ff; valaddr_reg:x16; val_offset:52; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 52, x17, x15, 1150, x18)

inst_522:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x3ff; valaddr_reg:x16; val_offset:56; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 56, x17, x15, 1160, x18)

inst_523:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x83fe; valaddr_reg:x16; val_offset:60; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 60, x17, x15, 1170, x18)

inst_524:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x2; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 64, x17, x15, 1180, x18)

inst_525:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x8001; valaddr_reg:x16; val_offset:68; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 68, x17, x15, 1190, x18)

inst_526:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x1; valaddr_reg:x16; val_offset:72; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 72, x17, x15, 1200, x18)

inst_527:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x8000; valaddr_reg:x16; val_offset:76; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 76, x17, x15, 1210, x18)

inst_528:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x1; op2val:0x0; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 80, x17, x15, 1220, x18)

inst_529:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0xbc00; valaddr_reg:x16; val_offset:84; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 84, x17, x15, 1230, x18)

inst_530:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x3c00; valaddr_reg:x16; val_offset:88; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 88, x17, x15, 1240, x18)

inst_531:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0xfd55; valaddr_reg:x16; val_offset:92; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 92, x17, x15, 1250, x18)

inst_532:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x7c01; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 96, x17, x15, 1260, x18)

inst_533:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0xfe55; valaddr_reg:x16; val_offset:100; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 100, x17, x15, 1270, x18)

inst_534:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x7e01; valaddr_reg:x16; val_offset:104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 104, x17, x15, 1280, x18)

inst_535:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0xfe00; valaddr_reg:x16; val_offset:108; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 108, x17, x15, 1290, x18)

inst_536:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x7e00; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 112, x17, x15, 1300, x18)

inst_537:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0xfc00; valaddr_reg:x16; val_offset:116; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 116, x17, x15, 1310, x18)

inst_538:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x7c00; valaddr_reg:x16; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 120, x17, x15, 1320, x18)

inst_539:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0xfbff; valaddr_reg:x16; val_offset:124; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 124, x17, x15, 1330, x18)

inst_540:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x7bff; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 128, x17, x15, 1340, x18)

inst_541:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x8455; valaddr_reg:x16; val_offset:132; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 132, x17, x15, 1350, x18)

inst_542:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x401; valaddr_reg:x16; val_offset:136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 136, x17, x15, 1360, x18)

inst_543:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x8400; valaddr_reg:x16; val_offset:140; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 140, x17, x15, 1370, x18)

inst_544:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x400; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 144, x17, x15, 1380, x18)

inst_545:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x83ff; valaddr_reg:x16; val_offset:148; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 148, x17, x15, 1390, x18)

inst_546:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x3ff; valaddr_reg:x16; val_offset:152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 152, x17, x15, 1400, x18)

inst_547:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x83fe; valaddr_reg:x16; val_offset:156; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 156, x17, x15, 1410, x18)

inst_548:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x2; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 160, x17, x15, 1420, x18)

inst_549:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x8001; valaddr_reg:x16; val_offset:164; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 164, x17, x15, 1430, x18)

inst_550:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x1; valaddr_reg:x16; val_offset:168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 168, x17, x15, 1440, x18)

inst_551:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x8000; valaddr_reg:x16; val_offset:172; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 172, x17, x15, 1450, x18)

inst_552:
// fs1 == 1 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x8000; op2val:0x0; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 176, x17, x15, 1460, x18)

inst_553:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xbc00; valaddr_reg:x16; val_offset:180; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 180, x17, x15, 1470, x18)

inst_554:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x3c00; valaddr_reg:x16; val_offset:184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 184, x17, x15, 1480, x18)

inst_555:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x155 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfd55; valaddr_reg:x16; val_offset:188; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 188, x17, x15, 1490, x18)

inst_556:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7c01; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 192, x17, x15, 1500, x18)

inst_557:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x255 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfe55; valaddr_reg:x16; val_offset:196; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 196, x17, x15, 1510, x18)

inst_558:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x201 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7e01; valaddr_reg:x16; val_offset:200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 200, x17, x15, 1520, x18)

inst_559:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfe00; valaddr_reg:x16; val_offset:204; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 204, x17, x15, 1530, x18)

inst_560:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x200 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7e00; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 208, x17, x15, 1540, x18)

inst_561:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfc00; valaddr_reg:x16; val_offset:212; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 212, x17, x15, 1550, x18)

inst_562:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7c00; valaddr_reg:x16; val_offset:216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 216, x17, x15, 1560, x18)

inst_563:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0xfbff; valaddr_reg:x16; val_offset:220; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 220, x17, x15, 1570, x18)

inst_564:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x1e and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x7bff; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 224, x17, x15, 1580, x18)

inst_565:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x055 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x8455; valaddr_reg:x16; val_offset:228; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 228, x17, x15, 1590, x18)

inst_566:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x401; valaddr_reg:x16; val_offset:232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 232, x17, x15, 1600, x18)

inst_567:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x8400; valaddr_reg:x16; val_offset:236; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 236, x17, x15, 1610, x18)

inst_568:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x400; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 240, x17, x15, 1620, x18)

inst_569:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x83ff; valaddr_reg:x16; val_offset:244; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 244, x17, x15, 1630, x18)

inst_570:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3ff and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x3ff; valaddr_reg:x16; val_offset:248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 248, x17, x15, 1640, x18)

inst_571:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3fe and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x83fe; valaddr_reg:x16; val_offset:252; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 252, x17, x15, 1650, x18)

inst_572:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x2; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 256, x17, x15, 1660, x18)

inst_573:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x8001; valaddr_reg:x16; val_offset:260; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 260, x17, x15, 1670, x18)

inst_574:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x001 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x1; valaddr_reg:x16; val_offset:264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 264, x17, x15, 1680, x18)

inst_575:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x8000; valaddr_reg:x16; val_offset:268; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 268, x17, x15, 1690, x18)

inst_576:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0x0; op2val:0x0; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 272, x17, x15, 1700, x18)

inst_577:
// fs1 == 1 and fe1 == 0x0f and fm1 == 0x000 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x000 and rm_val == 0  
// opcode: fdiv.h ; op1:f30; op2:f29; dest:f31; op1val:0xbc00; op2val:0xbc00; valaddr_reg:x16; val_offset:276; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.h, f31, f30, f29, 0x0, 0, x16, 276, x17, x15, 1710, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.hword 0x0
.hword 0x0
.hword 0xbc00
.hword 0xbc00
.hword 0xbc00
.hword 0x3c00
.hword 0xbc00
.hword 0xfd55
.hword 0xbc00
.hword 0x7c01
.hword 0xbc00
.hword 0xfe55
.hword 0xbc00
.hword 0x7e01
.hword 0xbc00
.hword 0xfe00
.hword 0xbc00
.hword 0x7e00
.hword 0xbc00
.hword 0xfc00
.hword 0xbc00
.hword 0x7c00
.hword 0xbc00
.hword 0xfbff
.hword 0xbc00
.hword 0x7bff
.hword 0xbc00
.hword 0x8455
.hword 0xbc00
.hword 0x401
.hword 0xbc00
.hword 0x8400
.hword 0xbc00
.hword 0x400
.hword 0xbc00
.hword 0x83ff
.hword 0xbc00
.hword 0x3ff
.hword 0xbc00
.hword 0x83fe
.hword 0xbc00
.hword 0x2
.hword 0xbc00
.hword 0x8001
.hword 0xbc00
.hword 0x1
.hword 0xbc00
.hword 0x8000
.hword 0xbc00
.hword 0x0
.hword 0x3c00
.hword 0xbc00
.hword 0x3c00
.hword 0x3c00
.hword 0x3c00
.hword 0xfd55
.hword 0x3c00
.hword 0x7c01
.hword 0x3c00
.hword 0xfe55
.hword 0x3c00
.hword 0x7e01
.hword 0x3c00
.hword 0xfe00
.hword 0x3c00
.hword 0x7e00
.hword 0x3c00
.hword 0xfc00
.hword 0x3c00
.hword 0x7c00
.hword 0x3c00
.hword 0xfbff
.hword 0x3c00
.hword 0x7bff
.hword 0x3c00
.hword 0x8455
.hword 0x3c00
.hword 0x401
.hword 0x3c00
.hword 0x8400
.hword 0x3c00
.hword 0x400
.hword 0x3c00
.hword 0x83ff
.hword 0x3c00
.hword 0x3ff
.hword 0x3c00
.hword 0x83fe
.hword 0x3c00
.hword 0x2
.hword 0x3c00
.hword 0x8001
.hword 0x3c00
.hword 0x1
.hword 0x3c00
.hword 0x8000
.hword 0x3c00
.hword 0x0
.hword 0xfd55
.hword 0xbc00
.hword 0xfd55
.hword 0x3c00
.hword 0xfd55
.hword 0xfd55
.hword 0xfd55
.hword 0x7c01
.hword 0xfd55
.hword 0xfe55
.hword 0xfd55
.hword 0x7e01
.hword 0xfd55
.hword 0xfe00
.hword 0xfd55
.hword 0x7e00
.hword 0xfd55
.hword 0xfc00
.hword 0xfd55
.hword 0x7c00
.hword 0xfd55
.hword 0xfbff
.hword 0xfd55
.hword 0x7bff
.hword 0xfd55
.hword 0x8455
.hword 0xfd55
.hword 0x401
.hword 0xfd55
.hword 0x8400
.hword 0xfd55
.hword 0x400
.hword 0xfd55
.hword 0x83ff
.hword 0xfd55
.hword 0x3ff
.hword 0xfd55
.hword 0x83fe
.hword 0xfd55
.hword 0x2
.hword 0xfd55
.hword 0x8001
.hword 0xfd55
.hword 0x1
.hword 0xfd55
.hword 0x8000
.hword 0xfd55
.hword 0x0
.hword 0x7c01
.hword 0xbc00
.hword 0x7c01
.hword 0x3c00
.hword 0x7c01
.hword 0xfd55
.hword 0x7c01
.hword 0x7c01
.hword 0x7c01
.hword 0xfe55
.hword 0x7c01
.hword 0x7e01
.hword 0x7c01
.hword 0xfe00
.hword 0x7c01
.hword 0x7e00
.hword 0x7c01
.hword 0xfc00
.hword 0x7c01
.hword 0x7c00
.hword 0x7c01
.hword 0xfbff
.hword 0x7c01
.hword 0x7bff
.hword 0x7c01
.hword 0x8455
.hword 0x7c01
.hword 0x401
.hword 0x7c01
.hword 0x8400
.hword 0x7c01
.hword 0x400
.hword 0x7c01
.hword 0x83ff
.hword 0x7c01
.hword 0x3ff
.hword 0x7c01
.hword 0x83fe
.hword 0x7c01
.hword 0x2
.hword 0x7c01
.hword 0x8001
.hword 0x7c01
.hword 0x1
.hword 0x7c01
.hword 0x8000
.hword 0x7c01
.hword 0x0
.hword 0xfe55
.hword 0xbc00
.hword 0xfe55
.hword 0x3c00
.hword 0xfe55
.hword 0xfd55
.hword 0xfe55
.hword 0x7c01
.hword 0xfe55
.hword 0xfe55
.hword 0xfe55
.hword 0x7e01
.hword 0xfe55
.hword 0xfe00
.hword 0xfe55
.hword 0x7e00
.hword 0xfe55
.hword 0xfc00
.hword 0xfe55
.hword 0x7c00
.hword 0xfe55
.hword 0xfbff
.hword 0xfe55
.hword 0x7bff
.hword 0xfe55
.hword 0x8455
.hword 0xfe55
.hword 0x401
.hword 0xfe55
.hword 0x8400
.hword 0xfe55
.hword 0x400
.hword 0xfe55
.hword 0x83ff
.hword 0xfe55
.hword 0x3ff
.hword 0xfe55
.hword 0x83fe
.hword 0xfe55
.hword 0x2
.hword 0xfe55
.hword 0x8001
.hword 0xfe55
.hword 0x1
.hword 0xfe55
.hword 0x8000
.hword 0xfe55
.hword 0x0
.hword 0x7e01
.hword 0xbc00
.hword 0x7e01
.hword 0x3c00
.hword 0x7e01
.hword 0xfd55
.hword 0x7e01
.hword 0x7c01
.hword 0x7e01
.hword 0xfe55
.hword 0x7e01
.hword 0x7e01
.hword 0x7e01
.hword 0xfe00
.hword 0x7e01
.hword 0x7e00
.hword 0x7e01
.hword 0xfc00
.hword 0x7e01
.hword 0x7c00
.hword 0x7e01
.hword 0xfbff
.hword 0x7e01
.hword 0x7bff
.hword 0x7e01
.hword 0x8455
.hword 0x7e01
.hword 0x401
.hword 0x7e01
.hword 0x8400
.hword 0x7e01
.hword 0x400
.hword 0x7e01
.hword 0x83ff
.hword 0x7e01
.hword 0x3ff
.hword 0x7e01
.hword 0x83fe
.hword 0x7e01
.hword 0x2
.hword 0x7e01
.hword 0x8001
.hword 0x7e01
.hword 0x1
.hword 0x7e01
.hword 0x8000
.hword 0x7e01
.hword 0x0
.hword 0xfe00
.hword 0xbc00
.hword 0xfe00
.hword 0x3c00
.hword 0xfe00
.hword 0xfd55
.hword 0xfe00
.hword 0x7c01
.hword 0xfe00
.hword 0xfe55
.hword 0xfe00
.hword 0x7e01
.hword 0xfe00
.hword 0xfe00
.hword 0xfe00
.hword 0x7e00
.hword 0xfe00
.hword 0xfc00
.hword 0xfe00
.hword 0x7c00
.hword 0xfe00
.hword 0xfbff
.hword 0xfe00
.hword 0x7bff
.hword 0xfe00
.hword 0x8455
.hword 0xfe00
.hword 0x401
.hword 0xfe00
.hword 0x8400
.hword 0xfe00
.hword 0x400
.hword 0xfe00
.hword 0x83ff
.hword 0xfe00
.hword 0x3ff
.hword 0xfe00
.hword 0x83fe
.hword 0xfe00
.hword 0x2
.hword 0xfe00
.hword 0x8001
.hword 0xfe00
.hword 0x1
.hword 0xfe00
.hword 0x8000
.hword 0xfe00
.hword 0x0
.hword 0x7e00
.hword 0xbc00
.hword 0x7e00
.hword 0x3c00
.hword 0x7e00
.hword 0xfd55
.hword 0x7e00
.hword 0x7c01
.hword 0x7e00
.hword 0xfe55
.hword 0x7e00
.hword 0x7e01
.hword 0x7e00
.hword 0xfe00
.hword 0x7e00
.hword 0x7e00
.hword 0x7e00
.hword 0xfc00
.hword 0x7e00
.hword 0x7c00
.hword 0x7e00
.hword 0xfbff
.hword 0x7e00
.hword 0x7bff
.hword 0x7e00
.hword 0x8455
.hword 0x7e00
.hword 0x401
.hword 0x7e00
.hword 0x8400
.hword 0x7e00
.hword 0x400
.hword 0x7e00
.hword 0x83ff
.hword 0x7e00
.hword 0x3ff
.hword 0x7e00
.hword 0x83fe
.hword 0x7e00
.hword 0x2
.hword 0x7e00
.hword 0x8001
.hword 0x7e00
.hword 0x1
.hword 0x7e00
.hword 0x8000
.hword 0x7e00
.hword 0x0
.hword 0xfc00
.hword 0xbc00
.hword 0xfc00
.hword 0x3c00
.hword 0xfc00
.hword 0xfd55
.hword 0xfc00
.hword 0x7c01
.hword 0xfc00
.hword 0xfe55
.hword 0xfc00
.hword 0x7e01
.hword 0xfc00
.hword 0xfe00
.hword 0xfc00
.hword 0x7e00
.hword 0xfc00
.hword 0xfc00
.hword 0xfc00
.hword 0x7c00
.hword 0xfc00
.hword 0xfbff
.hword 0xfc00
.hword 0x7bff
.hword 0xfc00
.hword 0x8455
.hword 0xfc00
.hword 0x401
.hword 0xfc00
.hword 0x8400
.hword 0xfc00
.hword 0x400
.hword 0xfc00
.hword 0x83ff
.hword 0xfc00
.hword 0x3ff
.hword 0xfc00
.hword 0x83fe
.hword 0xfc00
.hword 0x2
.hword 0xfc00
.hword 0x8001
.hword 0xfc00
.hword 0x1
.hword 0xfc00
.hword 0x8000
.hword 0xfc00
.hword 0x0
.hword 0x7c00
.hword 0xbc00
.hword 0x7c00
.hword 0x3c00
.hword 0x7c00
.hword 0xfd55
.hword 0x7c00
.hword 0x7c01
.hword 0x7c00
.hword 0xfe55
.hword 0x7c00
.hword 0x7e01
.hword 0x7c00
.hword 0xfe00
.hword 0x7c00
.hword 0x7e00
.hword 0x7c00
.hword 0xfc00
.hword 0x7c00
.hword 0x7c00
.hword 0x7c00
.hword 0xfbff
.hword 0x7c00
.hword 0x7bff
.hword 0x7c00
.hword 0x8455
.hword 0x7c00
.hword 0x401
.hword 0x7c00
.hword 0x8400
.hword 0x7c00
.hword 0x400
.hword 0x7c00
.hword 0x83ff
.hword 0x7c00
.hword 0x3ff
.hword 0x7c00
.hword 0x83fe
.hword 0x7c00
.hword 0x2
.hword 0x7c00
.hword 0x8001
.hword 0x7c00
.hword 0x1
.hword 0x7c00
.hword 0x8000
.hword 0x7c00
.hword 0x0
.hword 0xfbff
.hword 0xbc00
.hword 0xfbff
.hword 0x3c00
.hword 0xfbff
.hword 0xfd55
.hword 0xfbff
.hword 0x7c01
.hword 0xfbff
.hword 0xfe55
.hword 0xfbff
.hword 0x7e01
.hword 0xfbff
.hword 0xfe00
.hword 0xfbff
.hword 0x7e00
.hword 0xfbff
.hword 0xfc00
.hword 0xfbff
.hword 0x7c00
.hword 0xfbff
.hword 0xfbff
.hword 0xfbff
.hword 0x7bff
.hword 0xfbff
.hword 0x8455
.hword 0xfbff
.hword 0x401
.hword 0xfbff
.hword 0x8400
.hword 0xfbff
.hword 0x400
.hword 0xfbff
.hword 0x83ff
.hword 0xfbff
.hword 0x3ff
.hword 0xfbff
.hword 0x83fe
.hword 0xfbff
.hword 0x2
.hword 0xfbff
.hword 0x8001
.hword 0xfbff
.hword 0x1
.hword 0xfbff
.hword 0x8000
.hword 0xfbff
.hword 0x0
.hword 0x7bff
.hword 0xbc00
.hword 0x7bff
.hword 0x3c00
.hword 0x7bff
.hword 0xfd55
.hword 0x7bff
.hword 0x7c01
.hword 0x7bff
.hword 0xfe55
.hword 0x7bff
.hword 0x7e01
.hword 0x7bff
.hword 0xfe00
.hword 0x7bff
.hword 0x7e00
.hword 0x7bff
.hword 0xfc00
.hword 0x7bff
.hword 0x7c00
.hword 0x7bff
.hword 0xfbff
.hword 0x7bff
.hword 0x7bff
.hword 0x7bff
.hword 0x8455
.hword 0x7bff
.hword 0x401
.hword 0x7bff
.hword 0x8400
.hword 0x7bff
.hword 0x400
.hword 0x7bff
.hword 0x83ff
.hword 0x7bff
.hword 0x3ff
.hword 0x7bff
.hword 0x83fe
.hword 0x7bff
.hword 0x2
.hword 0x7bff
.hword 0x8001
.hword 0x7bff
.hword 0x1
.hword 0x7bff
.hword 0x8000
.hword 0x7bff
.hword 0x0
.hword 0x8455
.hword 0xbc00
.hword 0x8455
.hword 0x3c00
.hword 0x8455
.hword 0xfd55
.hword 0x8455
.hword 0x7c01
.hword 0x8455
.hword 0xfe55
.hword 0x8455
.hword 0x7e01
.hword 0x8455
.hword 0xfe00
.hword 0x8455
.hword 0x7e00
.hword 0x8455
.hword 0xfc00
.hword 0x8455
.hword 0x7c00
.hword 0x8455
.hword 0xfbff
.hword 0x8455
.hword 0x7bff
.hword 0x8455
.hword 0x8455
.hword 0x8455
.hword 0x401
.hword 0x8455
.hword 0x8400
.hword 0x8455
.hword 0x400
.hword 0x8455
.hword 0x83ff
.hword 0x8455
.hword 0x3ff
.hword 0x8455
.hword 0x83fe
.hword 0x8455
.hword 0x2
.hword 0x8455
.hword 0x8001
.hword 0x8455
.hword 0x1
.hword 0x8455
.hword 0x8000
.hword 0x8455
.hword 0x0
.hword 0x401
.hword 0xbc00
.hword 0x401
.hword 0x3c00
.hword 0x401
.hword 0xfd55
.hword 0x401
.hword 0x7c01
.hword 0x401
.hword 0xfe55
.hword 0x401
.hword 0x7e01
.hword 0x401
.hword 0xfe00
.hword 0x401
.hword 0x7e00
.hword 0x401
.hword 0xfc00
.hword 0x401
.hword 0x7c00
.hword 0x401
.hword 0xfbff
.hword 0x401
.hword 0x7bff
.hword 0x401
.hword 0x8455
.hword 0x401
.hword 0x401
.hword 0x401
.hword 0x8400
.hword 0x401
.hword 0x400
.hword 0x401
.hword 0x83ff
.hword 0x401
.hword 0x3ff
.hword 0x401
.hword 0x83fe
.hword 0x401
.hword 0x2
.hword 0x401
.hword 0x8001
.hword 0x401
.hword 0x1
.hword 0x401
.hword 0x8000
.hword 0x401
.hword 0x0
.hword 0x8400
.hword 0xbc00
.hword 0x8400
.hword 0x3c00
.hword 0x8400
.hword 0xfd55
.hword 0x8400
.hword 0x7c01
.hword 0x8400
.hword 0xfe55
.hword 0x8400
.hword 0x7e01
.hword 0x8400
.hword 0xfe00
.hword 0x8400
.hword 0x7e00
.hword 0x8400
.hword 0xfc00
.hword 0x8400
.hword 0x7c00
.hword 0x8400
.hword 0xfbff
.hword 0x8400
.hword 0x7bff
.hword 0x8400
.hword 0x8455
.hword 0x8400
.hword 0x401
.hword 0x8400
.hword 0x8400
.hword 0x8400
.hword 0x400
.hword 0x8400
.hword 0x83ff
.hword 0x8400
.hword 0x3ff
.hword 0x8400
.hword 0x83fe
.hword 0x8400
.hword 0x2
.hword 0x8400
.hword 0x8001
.hword 0x8400
.hword 0x1
.hword 0x8400
.hword 0x8000
.hword 0x8400
.hword 0x0
.hword 0x400
.hword 0xbc00
.hword 0x400
.hword 0x3c00
.hword 0x400
.hword 0xfd55
.hword 0x400
.hword 0x7c01
.hword 0x400
.hword 0xfe55
.hword 0x400
.hword 0x7e01
.hword 0x400
.hword 0xfe00
.hword 0x400
.hword 0x7e00
.hword 0x400
.hword 0xfc00
.hword 0x400
.hword 0x7c00
.hword 0x400
.hword 0xfbff
.hword 0x400
.hword 0x7bff
.hword 0x400
.hword 0x8455
.hword 0x400
.hword 0x401
.hword 0x400
.hword 0x8400
.hword 0x400
.hword 0x400
.hword 0x400
.hword 0x83ff
.hword 0x400
.hword 0x3ff
.hword 0x400
.hword 0x83fe
.hword 0x400
.hword 0x2
.hword 0x400
.hword 0x8001
.hword 0x400
.hword 0x1
.hword 0x400
.hword 0x8000
.hword 0x400
.hword 0x0
.hword 0x83ff
.hword 0xbc00
.hword 0x83ff
.hword 0x3c00
.hword 0x83ff
.hword 0xfd55
.hword 0x83ff
.hword 0x7c01
.hword 0x83ff
.hword 0xfe55
.hword 0x83ff
.hword 0x7e01
.hword 0x83ff
.hword 0xfe00
.hword 0x83ff
.hword 0x7e00
.hword 0x83ff
.hword 0xfc00
.hword 0x83ff
.hword 0x7c00
.hword 0x83ff
.hword 0xfbff
.hword 0x83ff
.hword 0x7bff
.hword 0x83ff
.hword 0x8455
.hword 0x83ff
.hword 0x401
.hword 0x83ff
.hword 0x8400
.hword 0x83ff
.hword 0x400
.hword 0x83ff
.hword 0x83ff
.hword 0x83ff
.hword 0x3ff
.hword 0x83ff
.hword 0x83fe
.hword 0x83ff
.hword 0x2
.hword 0x83ff
.hword 0x8001
.hword 0x83ff
.hword 0x1
.hword 0x83ff
.hword 0x8000
.hword 0x83ff
.hword 0x0
.hword 0x3ff
.hword 0xbc00
.hword 0x3ff
.hword 0x3c00
.hword 0x3ff
.hword 0xfd55
.hword 0x3ff
.hword 0x7c01
.hword 0x3ff
.hword 0xfe55
.hword 0x3ff
.hword 0x7e01
.hword 0x3ff
.hword 0xfe00
.hword 0x3ff
.hword 0x7e00
.hword 0x3ff
.hword 0xfc00
.hword 0x3ff
.hword 0x7c00
.hword 0x3ff
.hword 0xfbff
.hword 0x3ff
.hword 0x7bff
.hword 0x3ff
.hword 0x8455
.hword 0x3ff
.hword 0x401
.hword 0x3ff
.hword 0x8400
.hword 0x3ff
.hword 0x400
.hword 0x3ff
.hword 0x83ff
.hword 0x3ff
.hword 0x3ff
.hword 0x3ff
.hword 0x83fe
.hword 0x3ff
.hword 0x2
.hword 0x3ff
.hword 0x8001
.hword 0x3ff
.hword 0x1
.hword 0x3ff
.hword 0x8000
.hword 0x3ff
.hword 0x0
.hword 0x83fe
.hword 0xbc00
.hword 0x83fe
.hword 0x3c00
.hword 0x83fe
.hword 0xfd55
.hword 0x83fe
.hword 0x7c01
.hword 0x83fe
.hword 0xfe55
.hword 0x83fe
.hword 0x7e01
.hword 0x83fe
.hword 0xfe00
.hword 0x83fe
.hword 0x7e00
.hword 0x83fe
.hword 0xfc00
.hword 0x83fe
.hword 0x7c00
.hword 0x83fe
.hword 0xfbff
.hword 0x83fe
.hword 0x7bff
.hword 0x83fe
.hword 0x8455
.hword 0x83fe
.hword 0x401
.hword 0x83fe
.hword 0x8400
.hword 0x83fe
.hword 0x400
.hword 0x83fe
.hword 0x83ff
.hword 0x83fe
.hword 0x3ff
.hword 0x83fe
.hword 0x83fe
.hword 0x83fe
.hword 0x2
.hword 0x83fe
.hword 0x8001
.hword 0x83fe
.hword 0x1
.hword 0x83fe
.hword 0x8000
.hword 0x83fe
.hword 0x0
.hword 0x2
.hword 0xbc00
.hword 0x2
.hword 0x3c00
.hword 0x2
.hword 0xfd55
.hword 0x2
.hword 0x7c01
.hword 0x2
.hword 0xfe55
.hword 0x2
.hword 0x7e01
.hword 0x2
.hword 0xfe00
.hword 0x2
.hword 0x7e00
.hword 0x2
.hword 0xfc00
.hword 0x2
.hword 0x7c00
.hword 0x2
.hword 0xfbff
.hword 0x2
.hword 0x7bff
.hword 0x2
.hword 0x8455
.hword 0x2
.hword 0x401
.hword 0x2
.hword 0x8400
.hword 0x2
.hword 0x400
.hword 0x2
.hword 0x83ff
.hword 0x2
.hword 0x3ff
.hword 0x2
.hword 0x83fe
.hword 0x2
.hword 0x2
.hword 0x2
.hword 0x8001
.hword 0x2
.hword 0x1
.hword 0x2
.hword 0x8000
.hword 0x2
.hword 0x0
.hword 0x8001
.hword 0xbc00
.hword 0x8001
.hword 0x3c00
.hword 0x8001
.hword 0xfd55
.hword 0x8001
.hword 0x7c01
.hword 0x8001
.hword 0xfe55
.hword 0x8001
.hword 0x7e01
.hword 0x8001
.hword 0xfe00
.hword 0x8001
.hword 0x7e00
.hword 0x8001
.hword 0xfc00
.hword 0x8001
.hword 0x7c00
.hword 0x8001
.hword 0xfbff
.hword 0x8001
.hword 0x7bff
.hword 0x8001
.hword 0x8455
.hword 0x8001
.hword 0x401
.hword 0x8001
.hword 0x8400
.hword 0x8001
.hword 0x400
.hword 0x8001
.hword 0x83ff
.hword 0x8001
.hword 0x3ff
.hword 0x8001
.hword 0x83fe
.hword 0x8001
.hword 0x2
.hword 0x8001
.hword 0x8001
.hword 0x8001
.hword 0x1
.hword 0x8001
.hword 0x8000
.hword 0x8001
.hword 0x0
.hword 0x1
.hword 0xbc00
.hword 0x1
.hword 0x3c00
.hword 0x1
.hword 0xfd55
.hword 0x1
.hword 0x7c01
.hword 0x1
.hword 0xfe55
.hword 0x1
.hword 0x7e01
.hword 0x1
.hword 0xfe00
.hword 0x1
.hword 0x7e00
.hword 0x1
.hword 0xfc00
.hword 0x1
.hword 0x7c00
.hword 0x1
.hword 0xfbff
.hword 0x1
.hword 0x7bff
.hword 0x1
.hword 0x8455
.hword 0x1
.hword 0x401
.hword 0x1
.hword 0x8400
.hword 0x1
.hword 0x400
.hword 0x1
.hword 0x83ff
.hword 0x1
.hword 0x3ff
.hword 0x1
.hword 0x83fe
.hword 0x1
.hword 0x2
.hword 0x1
.hword 0x8001
.hword 0x1
.hword 0x1
.hword 0x1
.hword 0x8000
.hword 0x1
.hword 0x0
.hword 0x8000
.hword 0xbc00
.hword 0x8000
.hword 0x3c00
.hword 0x8000
.hword 0xfd55
.hword 0x8000
.hword 0x7c01
.hword 0x8000
.hword 0xfe55
.hword 0x8000
.hword 0x7e01
.hword 0x8000
.hword 0xfe00
.hword 0x8000
.hword 0x7e00
.hword 0x8000
.hword 0xfc00
.hword 0x8000
.hword 0x7c00
.hword 0x8000
.hword 0xfbff
.hword 0x8000
.hword 0x7bff
.hword 0x8000
.hword 0x8455
.hword 0x8000
.hword 0x401
.hword 0x8000
.hword 0x8400
.hword 0x8000
.hword 0x400
.hword 0x8000
.hword 0x83ff
.hword 0x8000
.hword 0x3ff
.hword 0x8000
.hword 0x83fe
.hword 0x8000
.hword 0x2
.hword 0x8000
.hword 0x8001
.hword 0x8000
.hword 0x1
.hword 0x8000
.hword 0x8000
.hword 0x8000
.hword 0x0
.hword 0x0
.hword 0xbc00
.hword 0x0
.hword 0x3c00
.hword 0x0
.hword 0xfd55
.hword 0x0
.hword 0x7c01
.hword 0x0
.hword 0xfe55
.hword 0x0
.hword 0x7e01
.hword 0x0
.hword 0xfe00
.hword 0x0
.hword 0x7e00
.hword 0x0
.hword 0xfc00
.hword 0x0
.hword 0x7c00
.hword 0x0
.hword 0xfbff
.hword 0x0
.hword 0x7bff
.hword 0x0
.hword 0x8455
.hword 0x0
.hword 0x401
.hword 0x0
.hword 0x8400
.hword 0x0
.hword 0x400
.hword 0x0
.hword 0x83ff
.hword 0x0
.hword 0x3ff
.hword 0x0
.hword 0x83fe
.hword 0x0
.hword 0x2
.hword 0x0
.hword 0x8001
.hword 0x0
.hword 0x1
.hword 0x0
.hword 0x8000
.hword 0x0
.hword 0x0
.hword 0xbc00
.hword 0xbc00
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 406*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 406*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 344*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
