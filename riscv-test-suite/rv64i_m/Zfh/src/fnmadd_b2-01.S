
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.6.0
// timestamp : Mon Feb 14 07:47:35 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/zeusprime/riscv-project/riscof_zfh_env/tests/ctg_test/dataset.cgf \
//                  --cgf /home/zeusprime/riscv-project/riscof_zfh_env/tests/ctg_test/rv64f_zfhfull.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.h instruction of the RISC-V RV64FZfh extension for the fnmadd_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFZfh")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*F.*Zfh.*);def TEST_CASE_1=True;",fnmadd_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f27, rs2==f24, rs3==f30, rd==f30, fs1 == 0 and fe1 == 0x00 and fm1 == 0x04a and fs2 == 0 and fe2 == 0x0c and fm2 == 0x052 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00b and rm_val == 0  
// opcode: fnmadd.h ; op1:f27; op2:f24; op3:f30; dest:f30; op1val:0x4a; op2val:0x3052; op3val:0xb; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f30, f27, f24, f30, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f8, rs2==f20, rs3==f20, rd==f10, fs1 == 0 and fe1 == 0x1e and fm1 == 0x05d and fs2 == 0 and fe2 == 0x10 and fm2 == 0x099 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x009 and rm_val == 0  
// opcode: fnmadd.h ; op1:f8; op2:f20; op3:f20; dest:f10; op1val:0x785d; op2val:0x4099; op3val:0x4099; valaddr_reg:x16; val_offset:6; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f10, f8, f20, f20, 0x0, 0, x16, 6, x17, x15, 10, x18)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f16, rs2==f13, rs3==f23, rd==f16, fs1 == 0 and fe1 == 0x1e and fm1 == 0x03e and fs2 == 0 and fe2 == 0x10 and fm2 == 0x14b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x03c and rm_val == 0  
// opcode: fnmadd.h ; op1:f16; op2:f13; op3:f23; dest:f16; op1val:0x783e; op2val:0x414b; op3val:0x783c; valaddr_reg:x16; val_offset:12; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f16, f16, f13, f23, 0x0, 0, x16, 12, x17, x15, 20, x18)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f11, rs2==f0, rs3==f11, rd==f12, fs1 == 0 and fe1 == 0x1e and fm1 == 0x006 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x053 and rm_val == 0  
// opcode: fnmadd.h ; op1:f11; op2:f0; op3:f11; dest:f12; op1val:0x7806; op2val:0x41e0; op3val:0x7806; valaddr_reg:x16; val_offset:18; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f12, f11, f0, f11, 0x0, 0, x16, 18, x17, x15, 30, x18)

inst_4:
// rs1 == rs2 == rd != rs3, rs1==f29, rs2==f29, rs3==f12, rd==f29, fs1 == 0 and fe1 == 0x1e and fm1 == 0x05c and fs2 == 0 and fe2 == 0x10 and fm2 == 0x169 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00e and rm_val == 0  
// opcode: fnmadd.h ; op1:f29; op2:f29; op3:f12; dest:f29; op1val:0x785c; op2val:0x785c; op3val:0x780e; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f29, f29, f29, f12, 0x0, 0, x16, 24, x17, x15, 40, x18)

inst_5:
// rs1 == rs2 == rs3 == rd, rs1==f9, rs2==f9, rs3==f9, rd==f9, fs1 == 0 and fe1 == 0x1e and fm1 == 0x056 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x17f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00d and rm_val == 0  
// opcode: fnmadd.h ; op1:f9; op2:f9; op3:f9; dest:f9; op1val:0x7856; op2val:0x7856; op3val:0x7856; valaddr_reg:x16; val_offset:30; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f9, f9, f9, f9, 0x0, 0, x16, 30, x17, x15, 50, x18)

inst_6:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f15, rs2==f15, rs3==f29, rd==f22, fs1 == 0 and fe1 == 0x1e and fm1 == 0x005 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x218 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x051 and rm_val == 0  
// opcode: fnmadd.h ; op1:f15; op2:f15; op3:f29; dest:f22; op1val:0x7805; op2val:0x7805; op3val:0x7851; valaddr_reg:x16; val_offset:36; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f22, f15, f15, f29, 0x0, 0, x16, 36, x17, x15, 60, x18)

inst_7:
// rs1 == rs2 == rs3 != rd, rs1==f2, rs2==f2, rs3==f2, rd==f25, fs1 == 0 and fe1 == 0x1e and fm1 == 0x029 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x1c9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x013 and rm_val == 0  
// opcode: fnmadd.h ; op1:f2; op2:f2; op3:f2; dest:f25; op1val:0x7829; op2val:0x7829; op3val:0x7829; valaddr_reg:x16; val_offset:42; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f25, f2, f2, f2, 0x0, 0, x16, 42, x17, x15, 70, x18)

inst_8:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f18, rs2==f23, rs3==f27, rd==f23, fs1 == 0 and fe1 == 0x1e and fm1 == 0x020 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x1f4 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x04e and rm_val == 0  
// opcode: fnmadd.h ; op1:f18; op2:f23; op3:f27; dest:f23; op1val:0x7820; op2val:0x41f4; op3val:0x784e; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f23, f18, f23, f27, 0x0, 0, x16, 48, x17, x15, 80, x18)

inst_9:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f0, rs2==f16, rs3==f4, rd==f28, fs1 == 0 and fe1 == 0x1e and fm1 == 0x058 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x1aa and fs3 == 0 and fe3 == 0x1e and fm3 == 0x051 and rm_val == 0  
// opcode: fnmadd.h ; op1:f0; op2:f16; op3:f4; dest:f28; op1val:0x7858; op2val:0x41aa; op3val:0x7851; valaddr_reg:x16; val_offset:54; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f28, f0, f16, f4, 0x0, 0, x16, 54, x17, x15, 90, x18)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==f1, rs2==f8, rs3==f1, rd==f1, fs1 == 0 and fe1 == 0x1e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x10 and fm2 == 0x1c4 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x013 and rm_val == 0  
// opcode: fnmadd.h ; op1:f1; op2:f8; op3:f1; dest:f1; op1val:0x782f; op2val:0x41c4; op3val:0x782f; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f1, f1, f8, f1, 0x0, 0, x16, 60, x17, x15, 100, x18)

inst_11:
// rd == rs2 == rs3 != rs1, rs1==f22, rs2==f18, rs3==f18, rd==f18, fs1 == 0 and fe1 == 0x1e and fm1 == 0x00d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x324 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x030 and rm_val == 0  
// opcode: fnmadd.h ; op1:f22; op2:f18; op3:f18; dest:f18; op1val:0x780d; op2val:0xb724; op3val:0xb724; valaddr_reg:x16; val_offset:66; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f18, f22, f18, f18, 0x0, 0, x16, 66, x17, x15, 110, x18)

inst_12:
// rs1==f28, rs2==f5, rs3==f6, rd==f17, fs1 == 0 and fe1 == 0x1e and fm1 == 0x03d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x16f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x01e and rm_val == 0  
// opcode: fnmadd.h ; op1:f28; op2:f5; op3:f6; dest:f17; op1val:0x783d; op2val:0xb96f; op3val:0x781e; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f17, f28, f5, f6, 0x0, 0, x16, 72, x17, x15, 120, x18)

inst_13:
// rs1==f12, rs2==f4, rs3==f31, rd==f3, fs1 == 0 and fe1 == 0x1e and fm1 == 0x03f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x283 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00a and rm_val == 0  
// opcode: fnmadd.h ; op1:f12; op2:f4; op3:f31; dest:f3; op1val:0x783f; op2val:0xba83; op3val:0x780a; valaddr_reg:x16; val_offset:78; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f3, f12, f4, f31, 0x0, 0, x16, 78, x17, x15, 130, x18)

inst_14:
// rs1==f10, rs2==f30, rs3==f7, rd==f13, fs1 == 0 and fe1 == 0x1e and fm1 == 0x037 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x29b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x044 and rm_val == 0  
// opcode: fnmadd.h ; op1:f10; op2:f30; op3:f7; dest:f13; op1val:0x7837; op2val:0xba9b; op3val:0x7844; valaddr_reg:x16; val_offset:84; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f13, f10, f30, f7, 0x0, 0, x16, 84, x17, x15, 140, x18)

inst_15:
// rs1==f25, rs2==f1, rs3==f13, rd==f5, fs1 == 0 and fe1 == 0x1e and fm1 == 0x04f and fs2 == 1 and fe2 == 0x0e and fm2 == 0x32c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x002 and rm_val == 0  
// opcode: fnmadd.h ; op1:f25; op2:f1; op3:f13; dest:f5; op1val:0x784f; op2val:0xbb2c; op3val:0x7802; valaddr_reg:x16; val_offset:90; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f5, f25, f1, f13, 0x0, 0, x16, 90, x17, x15, 150, x18)

inst_16:
// rs1==f14, rs2==f11, rs3==f26, rd==f20, fs1 == 0 and fe1 == 0x1e and fm1 == 0x014 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x372 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x023 and rm_val == 0  
// opcode: fnmadd.h ; op1:f14; op2:f11; op3:f26; dest:f20; op1val:0x7814; op2val:0xbb72; op3val:0x7823; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f20, f14, f11, f26, 0x0, 0, x16, 96, x17, x15, 160, x18)

inst_17:
// rs1==f19, rs2==f6, rs3==f25, rd==f21, fs1 == 0 and fe1 == 0x1e and fm1 == 0x008 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x3ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x019 and rm_val == 0  
// opcode: fnmadd.h ; op1:f19; op2:f6; op3:f25; dest:f21; op1val:0x7808; op2val:0xbbac; op3val:0x7819; valaddr_reg:x16; val_offset:102; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f21, f19, f6, f25, 0x0, 0, x16, 102, x17, x15, 170, x18)

inst_18:
// rs1==f20, rs2==f19, rs3==f17, rd==f26, fs1 == 0 and fe1 == 0x1e and fm1 == 0x040 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2ef and fs3 == 0 and fe3 == 0x1e and fm3 == 0x04c and rm_val == 0  
// opcode: fnmadd.h ; op1:f20; op2:f19; op3:f17; dest:f26; op1val:0x7840; op2val:0xbaef; op3val:0x784c; valaddr_reg:x16; val_offset:108; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f26, f20, f19, f17, 0x0, 0, x16, 108, x17, x15, 180, x18)

inst_19:
// rs1==f4, rs2==f7, rs3==f28, rd==f14, fs1 == 0 and fe1 == 0x1e and fm1 == 0x030 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x344 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x02f and rm_val == 0  
// opcode: fnmadd.h ; op1:f4; op2:f7; op3:f28; dest:f14; op1val:0x7830; op2val:0xbb44; op3val:0x782f; valaddr_reg:x16; val_offset:114; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f14, f4, f7, f28, 0x0, 0, x16, 114, x17, x15, 190, x18)

inst_20:
// rs1==f30, rs2==f21, rs3==f22, rd==f15, fs1 == 0 and fe1 == 0x1e and fm1 == 0x058 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x2b0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05c and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f21; op3:f22; dest:f15; op1val:0x7858; op2val:0xbab0; op3val:0x785c; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f15, f30, f21, f22, 0x0, 0, x16, 120, x17, x15, 200, x18)

inst_21:
// rs1==f5, rs2==f14, rs3==f16, rd==f19, fs1 == 0 and fe1 == 0x01 and fm1 == 0x049 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0b1 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00f and rm_val == 0  
// opcode: fnmadd.h ; op1:f5; op2:f14; op3:f16; dest:f19; op1val:0x449; op2val:0x40b1; op3val:0x40f; valaddr_reg:x16; val_offset:126; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f19, f5, f14, f16, 0x0, 0, x16, 126, x17, x15, 210, x18)

inst_22:
// rs1==f7, rs2==f26, rs3==f15, rd==f4, fs1 == 0 and fe1 == 0x01 and fm1 == 0x004 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0a2 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x04f and rm_val == 0  
// opcode: fnmadd.h ; op1:f7; op2:f26; op3:f15; dest:f4; op1val:0x404; op2val:0x40a2; op3val:0x44f; valaddr_reg:x16; val_offset:132; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f4, f7, f26, f15, 0x0, 0, x16, 132, x17, x15, 220, x18)

inst_23:
// rs1==f6, rs2==f27, rs3==f21, rd==f7, fs1 == 0 and fe1 == 0x01 and fm1 == 0x008 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x043 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x018 and rm_val == 0  
// opcode: fnmadd.h ; op1:f6; op2:f27; op3:f21; dest:f7; op1val:0x408; op2val:0x4043; op3val:0x418; valaddr_reg:x16; val_offset:138; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f7, f6, f27, f21, 0x0, 0, x16, 138, x17, x15, 230, x18)

inst_24:
// rs1==f26, rs2==f28, rs3==f3, rd==f0, fs1 == 0 and fe1 == 0x01 and fm1 == 0x050 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3dc and fs3 == 0 and fe3 == 0x01 and fm3 == 0x03a and rm_val == 0  
// opcode: fnmadd.h ; op1:f26; op2:f28; op3:f3; dest:f0; op1val:0x450; op2val:0x3fdc; op3val:0x43a; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f0, f26, f28, f3, 0x0, 0, x16, 144, x17, x15, 240, x18)

inst_25:
// rs1==f3, rs2==f25, rs3==f14, rd==f24, fs1 == 0 and fe1 == 0x01 and fm1 == 0x048 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x398 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x001 and rm_val == 0  
// opcode: fnmadd.h ; op1:f3; op2:f25; op3:f14; dest:f24; op1val:0x448; op2val:0x3f98; op3val:0x401; valaddr_reg:x16; val_offset:150; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f24, f3, f25, f14, 0x0, 0, x16, 150, x17, x15, 250, x18)

inst_26:
// rs1==f23, rs2==f3, rs3==f0, rd==f8, fs1 == 0 and fe1 == 0x01 and fm1 == 0x015 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x005 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x026 and rm_val == 0  
// opcode: fnmadd.h ; op1:f23; op2:f3; op3:f0; dest:f8; op1val:0x415; op2val:0x4005; op3val:0x426; valaddr_reg:x16; val_offset:156; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f8, f23, f3, f0, 0x0, 0, x16, 156, x17, x15, 260, x18)

inst_27:
// rs1==f21, rs2==f10, rs3==f5, rd==f6, fs1 == 0 and fe1 == 0x01 and fm1 == 0x03f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3e9 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x05e and rm_val == 0  
// opcode: fnmadd.h ; op1:f21; op2:f10; op3:f5; dest:f6; op1val:0x43f; op2val:0x3fe9; op3val:0x45e; valaddr_reg:x16; val_offset:162; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f6, f21, f10, f5, 0x0, 0, x16, 162, x17, x15, 270, x18)

inst_28:
// rs1==f13, rs2==f12, rs3==f24, rd==f27, fs1 == 0 and fe1 == 0x01 and fm1 == 0x053 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x399 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x033 and rm_val == 0  
// opcode: fnmadd.h ; op1:f13; op2:f12; op3:f24; dest:f27; op1val:0x453; op2val:0x3f99; op3val:0x433; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f27, f13, f12, f24, 0x0, 0, x16, 168, x17, x15, 280, x18)

inst_29:
// rs1==f17, rs2==f31, rs3==f8, rd==f2, fs1 == 0 and fe1 == 0x01 and fm1 == 0x023 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3e5 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x029 and rm_val == 0  
// opcode: fnmadd.h ; op1:f17; op2:f31; op3:f8; dest:f2; op1val:0x423; op2val:0x3fe5; op3val:0x429; valaddr_reg:x16; val_offset:174; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f2, f17, f31, f8, 0x0, 0, x16, 174, x17, x15, 290, x18)

inst_30:
// rs1==f24, rs2==f17, rs3==f19, rd==f31, fs1 == 0 and fe1 == 0x01 and fm1 == 0x059 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3a4 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x04e and rm_val == 0  
// opcode: fnmadd.h ; op1:f24; op2:f17; op3:f19; dest:f31; op1val:0x459; op2val:0x3fa4; op3val:0x44e; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f24, f17, f19, 0x0, 0, x16, 180, x17, x15, 300, x18)

inst_31:
// rs1==f31, rs2==f22, rs3==f10, rd==f11, fs1 == 0 and fe1 == 0x01 and fm1 == 0x050 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x2b5 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x031 and rm_val == 0  
// opcode: fnmadd.h ; op1:f31; op2:f22; op3:f10; dest:f11; op1val:0x450; op2val:0xb6b5; op3val:0x431; valaddr_reg:x16; val_offset:186; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f11, f31, f22, f10, 0x0, 0, x16, 186, x17, x15, 310, x18)

inst_32:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2c7 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x015 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x455; op2val:0xb2c7; op3val:0x415; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 192, x17, x15, 320, x18)

inst_33:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x02a and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0dc and fs3 == 0 and fe3 == 0x01 and fm3 == 0x02f and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x42a; op2val:0xacdc; op3val:0x42f; valaddr_reg:x16; val_offset:198; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 198, x17, x15, 330, x18)

inst_34:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x052 and fs2 == 1 and fe2 == 0x06 and fm2 == 0x368 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x03c and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x452; op2val:0x9b68; op3val:0x43c; valaddr_reg:x16; val_offset:204; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 204, x17, x15, 340, x18)

inst_35:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x040 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x387 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x028 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x440; op2val:0x1f87; op3val:0x428; valaddr_reg:x16; val_offset:210; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 210, x17, x15, 350, x18)

inst_36:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x05d and fs2 == 0 and fe2 == 0x09 and fm2 == 0x390 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x031 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x45d; op2val:0x2790; op3val:0x431; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 216, x17, x15, 360, x18)

inst_37:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x03f and fs2 == 0 and fe2 == 0x08 and fm2 == 0x12e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x013 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x43f; op2val:0x212e; op3val:0x413; valaddr_reg:x16; val_offset:222; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 222, x17, x15, 370, x18)

inst_38:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2b1 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x03e and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x455; op2val:0x2ab1; op3val:0x43e; valaddr_reg:x16; val_offset:228; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 228, x17, x15, 380, x18)

inst_39:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x04e and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2da and fs3 == 0 and fe3 == 0x01 and fm3 == 0x03d and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x44e; op2val:0x2ada; op3val:0x43d; valaddr_reg:x16; val_offset:234; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 234, x17, x15, 390, x18)

inst_40:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x03f and fs2 == 0 and fe2 == 0x0a and fm2 == 0x000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x023 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x43f; op2val:0x2800; op3val:0x423; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 240, x17, x15, 400, x18)

inst_41:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x036 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x176 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04f and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x36; op2val:0x4976; op3val:0x4f; valaddr_reg:x16; val_offset:246; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 246, x17, x15, 410, x18)

inst_42:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x021 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x236 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x035 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x21; op2val:0x4e36; op3val:0x35; valaddr_reg:x16; val_offset:252; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 252, x17, x15, 420, x18)

inst_43:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02b and fs2 == 0 and fe2 == 0x13 and fm2 == 0x197 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x043 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2b; op2val:0x4d97; op3val:0x43; valaddr_reg:x16; val_offset:258; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 258, x17, x15, 430, x18)

inst_44:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x041 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x3d2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x41; op2val:0x4bd2; op3val:0x3a; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 264, x17, x15, 440, x18)

inst_45:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x019 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x11e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x021 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x19; op2val:0x511e; op3val:0x21; valaddr_reg:x16; val_offset:270; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 270, x17, x15, 450, x18)

inst_46:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04c and fs2 == 0 and fe2 == 0x12 and fm2 == 0x2ef and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02f and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4c; op2val:0x4aef; op3val:0x2f; valaddr_reg:x16; val_offset:276; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 276, x17, x15, 460, x18)

inst_47:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x010 and fs2 == 0 and fe2 == 0x15 and fm2 == 0x018 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x021 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x10; op2val:0x5418; op3val:0x21; valaddr_reg:x16; val_offset:282; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 282, x17, x15, 470, x18)

inst_48:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003 and fs2 == 0 and fe2 == 0x17 and fm2 == 0x1aa and fs3 == 0 and fe3 == 0x00 and fm3 == 0x045 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3; op2val:0x5daa; op3val:0x45; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 288, x17, x15, 480, x18)

inst_49:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x017 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x190 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x003 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x17; op2val:0x5190; op3val:0x3; valaddr_reg:x16; val_offset:294; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 294, x17, x15, 490, x18)

inst_50:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 0 and fe2 == 0x13 and fm2 == 0x06c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05d and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3f; op2val:0x4c6c; op3val:0x5d; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 300, x17, x15, 500, x18)

inst_51:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x023 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x278 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x23; op2val:0xca78; op3val:0x3a; valaddr_reg:x16; val_offset:306; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 306, x17, x15, 510, x18)

inst_52:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x060 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x312 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x058 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x60; op2val:0xc712; op3val:0x58; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 312, x17, x15, 520, x18)

inst_53:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00b and fs2 == 1 and fe2 == 0x15 and fm2 == 0x0f1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x019 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0xb; op2val:0xd4f1; op3val:0x19; valaddr_reg:x16; val_offset:318; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 318, x17, x15, 530, x18)

inst_54:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05b and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0fa and fs3 == 0 and fe3 == 0x00 and fm3 == 0x035 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5b; op2val:0xc8fa; op3val:0x35; valaddr_reg:x16; val_offset:324; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 324, x17, x15, 540, x18)

inst_55:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03d and fs2 == 1 and fe2 == 0x12 and fm2 == 0x3cd and fs3 == 0 and fe3 == 0x00 and fm3 == 0x027 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3d; op2val:0xcbcd; op3val:0x27; valaddr_reg:x16; val_offset:330; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 330, x17, x15, 550, x18)

inst_56:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x043 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x31a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x037 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x43; op2val:0xcb1a; op3val:0x37; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 336, x17, x15, 560, x18)

inst_57:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x120 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x31; op2val:0xcd20; op3val:0xa; valaddr_reg:x16; val_offset:342; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 342, x17, x15, 570, x18)

inst_58:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03a and fs2 == 1 and fe2 == 0x13 and fm2 == 0x024 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3a; op2val:0xcc24; op3val:0x3a; valaddr_reg:x16; val_offset:348; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 348, x17, x15, 580, x18)

inst_59:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04e and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1fe and fs3 == 0 and fe3 == 0x00 and fm3 == 0x056 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4e; op2val:0xc9fe; op3val:0x56; valaddr_reg:x16; val_offset:354; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 354, x17, x15, 590, x18)

inst_60:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x020 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x3e4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00c and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x20; op2val:0xcfe4; op3val:0xc; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 360, x17, x15, 600, x18)

inst_61:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d and fs2 == 0 and fe2 == 0x14 and fm2 == 0x17b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x039 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0xd; op2val:0x517b; op3val:0x39; valaddr_reg:x16; val_offset:366; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 366, x17, x15, 610, x18)

inst_62:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x060 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x26a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x033 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x60; op2val:0x426a; op3val:0x33; valaddr_reg:x16; val_offset:372; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 372, x17, x15, 620, x18)

inst_63:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x037 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x37d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04d and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x37; op2val:0x437d; op3val:0x4d; valaddr_reg:x16; val_offset:378; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 378, x17, x15, 630, x18)

inst_64:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x007 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x25b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x018 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7; op2val:0x4a5b; op3val:0x18; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 384, x17, x15, 640, x18)

inst_65:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x057 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x069 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03f and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x57; op2val:0x3c69; op3val:0x3f; valaddr_reg:x16; val_offset:390; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 390, x17, x15, 650, x18)

inst_66:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x026 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x328 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x011 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x26; op2val:0x3b28; op3val:0x11; valaddr_reg:x16; val_offset:396; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 396, x17, x15, 660, x18)

inst_67:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x044 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2f0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x032 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x44; op2val:0x3af0; op3val:0x32; valaddr_reg:x16; val_offset:402; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 402, x17, x15, 670, x18)

inst_68:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x030 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x080 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x031 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x30; op2val:0x3c80; op3val:0x31; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 408, x17, x15, 680, x18)

inst_69:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x050 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x04c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x028 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x50; op2val:0x384c; op3val:0x28; valaddr_reg:x16; val_offset:414; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 414, x17, x15, 690, x18)

inst_70:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x056 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x389 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x050 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x56; op2val:0x3b89; op3val:0x50; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 420, x17, x15, 700, x18)

inst_71:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02b and fs2 == 1 and fe2 == 0x12 and fm2 == 0x120 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x048 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2b; op2val:0xc920; op3val:0x48; valaddr_reg:x16; val_offset:426; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 426, x17, x15, 710, x18)

inst_72:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x340 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x053 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3; op2val:0xd340; op3val:0x53; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 432, x17, x15, 720, x18)

inst_73:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x019 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x047 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x016 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x19; op2val:0xc447; op3val:0x16; valaddr_reg:x16; val_offset:438; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 438, x17, x15, 730, x18)

inst_74:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x385 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x002 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x43; op2val:0xbb85; op3val:0x2; valaddr_reg:x16; val_offset:444; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 444, x17, x15, 740, x18)

inst_75:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01b and fs2 == 0 and fe2 == 0x10 and fm2 == 0x038 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x1b; op2val:0x4038; op3val:0x5a; valaddr_reg:x16; val_offset:450; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 450, x17, x15, 750, x18)

inst_76:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x2aa and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04d and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x12; op2val:0x42aa; op3val:0x4d; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 456, x17, x15, 760, x18)

inst_77:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03e and fs2 == 0 and fe2 == 0x0d and fm2 == 0x129 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01d and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3e; op2val:0x3529; op3val:0x1d; valaddr_reg:x16; val_offset:462; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 462, x17, x15, 770, x18)

inst_78:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01a and fs2 == 0 and fe2 == 0x0f and fm2 == 0x2c4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x031 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x1a; op2val:0x3ec4; op3val:0x31; valaddr_reg:x16; val_offset:468; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 468, x17, x15, 780, x18)

inst_79:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x028 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x080 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05d and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x28; op2val:0x4080; op3val:0x5d; valaddr_reg:x16; val_offset:474; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 474, x17, x15, 790, x18)

inst_80:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x266 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x023 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x55; op2val:0x3666; op3val:0x23; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 480, x17, x15, 800, x18)

inst_81:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x00f and fs2 == 0 and fe2 == 0x10 and fm2 == 0x113 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x04e and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c0f; op2val:0x4113; op3val:0x3c4e; valaddr_reg:x16; val_offset:486; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 486, x17, x15, 810, x18)

inst_82:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x044 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x044 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c44; op2val:0x4044; op3val:0x3c1a; valaddr_reg:x16; val_offset:492; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 492, x17, x15, 820, x18)

inst_83:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x041 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x027 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x057 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c41; op2val:0x4027; op3val:0x3c57; valaddr_reg:x16; val_offset:498; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 498, x17, x15, 830, x18)

inst_84:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x010 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x015 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00c and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c10; op2val:0x4015; op3val:0x3c0c; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 504, x17, x15, 840, x18)

inst_85:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x02e and fs2 == 0 and fe2 == 0x10 and fm2 == 0x007 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x04c and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c2e; op2val:0x4007; op3val:0x3c4c; valaddr_reg:x16; val_offset:510; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 510, x17, x15, 850, x18)

inst_86:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x038 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3c9 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x027 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c38; op2val:0x3fc9; op3val:0x3c27; valaddr_reg:x16; val_offset:516; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 516, x17, x15, 860, x18)

inst_87:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x020 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x00a and fs3 == 0 and fe3 == 0x0f and fm3 == 0x04e and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c20; op2val:0x400a; op3val:0x3c4e; valaddr_reg:x16; val_offset:522; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 522, x17, x15, 870, x18)

inst_88:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x052 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x397 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x02f and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c52; op2val:0x3f97; op3val:0x3c2f; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 528, x17, x15, 880, x18)

inst_89:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x041 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x38b and fs3 == 0 and fe3 == 0x0f and fm3 == 0x004 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c41; op2val:0x3f8b; op3val:0x3c04; valaddr_reg:x16; val_offset:534; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 534, x17, x15, 890, x18)

inst_90:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x053 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3ba and fs3 == 0 and fe3 == 0x0f and fm3 == 0x05a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c53; op2val:0x3fba; op3val:0x3c5a; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 540, x17, x15, 900, x18)

inst_91:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x042 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x26d and fs3 == 0 and fe3 == 0x0f and fm3 == 0x04a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c42; op2val:0xb66d; op3val:0x3c4a; valaddr_reg:x16; val_offset:546; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 546, x17, x15, 910, x18)

inst_92:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x03f and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2cc and fs3 == 0 and fe3 == 0x0f and fm3 == 0x019 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c3f; op2val:0xb2cc; op3val:0x3c19; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 552, x17, x15, 920, x18)

inst_93:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x054 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x0ad and fs3 == 0 and fe3 == 0x0f and fm3 == 0x02f and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c54; op2val:0xacad; op3val:0x3c2f; valaddr_reg:x16; val_offset:558; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 558, x17, x15, 930, x18)

inst_94:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x04c and fs2 == 1 and fe2 == 0x0a and fm2 == 0x06b and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c4c; op2val:0xa86b; op3val:0x3c1a; valaddr_reg:x16; val_offset:564; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 564, x17, x15, 940, x18)

inst_95:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x00d and fs2 == 1 and fe2 == 0x09 and fm2 == 0x26b and fs3 == 0 and fe3 == 0x0f and fm3 == 0x006 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c0d; op2val:0xa66b; op3val:0x3c06; valaddr_reg:x16; val_offset:570; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 570, x17, x15, 950, x18)

inst_96:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x052 and fs2 == 0 and fe2 == 0x09 and fm2 == 0x117 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x026 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c52; op2val:0x2517; op3val:0x3c26; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 576, x17, x15, 960, x18)

inst_97:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x01a and fs2 == 0 and fe2 == 0x0b and fm2 == 0x0ff and fs3 == 0 and fe3 == 0x0f and fm3 == 0x05a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c1a; op2val:0x2cff; op3val:0x3c5a; valaddr_reg:x16; val_offset:582; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 582, x17, x15, 970, x18)

inst_98:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x00d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x1bd and fs3 == 0 and fe3 == 0x0f and fm3 == 0x061 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c0d; op2val:0x2dbd; op3val:0x3c61; valaddr_reg:x16; val_offset:588; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 588, x17, x15, 980, x18)

inst_99:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x039 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x135 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x05a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c39; op2val:0x2d35; op3val:0x3c5a; valaddr_reg:x16; val_offset:594; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 594, x17, x15, 990, x18)

inst_100:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x035 and fs2 == 0 and fe2 == 0x09 and fm2 == 0x39b and fs3 == 0 and fe3 == 0x0f and fm3 == 0x021 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c35; op2val:0x279b; op3val:0x3c21; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 600, x17, x15, 1000, x18)

inst_101:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00c and fs2 == 0 and fe2 == 0x14 and fm2 == 0x1d2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02f and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0xc; op2val:0x51d2; op3val:0x2f; valaddr_reg:x16; val_offset:606; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 606, x17, x15, 1010, x18)

inst_102:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x037 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x16f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02b and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x37; op2val:0x456f; op3val:0x2b; valaddr_reg:x16; val_offset:612; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 612, x17, x15, 1020, x18)

inst_103:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x058 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x25d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00c and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x58; op2val:0x3e5d; op3val:0xc; valaddr_reg:x16; val_offset:618; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 618, x17, x15, 1030, x18)

inst_104:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x2ba and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04f and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x55; op2val:0x3eba; op3val:0x4f; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 624, x17, x15, 1040, x18)

inst_105:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05e and fs2 == 0 and fe2 == 0x0e and fm2 == 0x19d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x022 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5e; op2val:0x399d; op3val:0x22; valaddr_reg:x16; val_offset:630; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 630, x17, x15, 1050, x18)

inst_106:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x047 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1f8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x47; op2val:0x3df8; op3val:0x5a; valaddr_reg:x16; val_offset:636; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 636, x17, x15, 1060, x18)

inst_107:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x019 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x27a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x049 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x19; op2val:0x427a; op3val:0x49; valaddr_reg:x16; val_offset:642; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 642, x17, x15, 1070, x18)

inst_108:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x058 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x22e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00d and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x58; op2val:0x322e; op3val:0xd; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 648, x17, x15, 1080, x18)

inst_109:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x045 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x02c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x046 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x45; op2val:0x3c2c; op3val:0x46; valaddr_reg:x16; val_offset:654; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 654, x17, x15, 1090, x18)

inst_110:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05e and fs2 == 0 and fe2 == 0x0e and fm2 == 0x098 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x035 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5e; op2val:0x3898; op3val:0x35; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 660, x17, x15, 1100, x18)

inst_111:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 1 and fe2 == 0x11 and fm2 == 0x3b6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01a and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3f; op2val:0xc7b6; op3val:0x1a; valaddr_reg:x16; val_offset:666; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 666, x17, x15, 1110, x18)

inst_112:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003 and fs2 == 1 and fe2 == 0x15 and fm2 == 0x09a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x023 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3; op2val:0xd49a; op3val:0x23; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 672, x17, x15, 1120, x18)

inst_113:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x029 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x1a8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x063 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x29; op2val:0xb9a8; op3val:0x63; valaddr_reg:x16; val_offset:678; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 678, x17, x15, 1130, x18)

inst_114:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05f and fs2 == 1 and fe2 == 0x0c and fm2 == 0x163 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x030 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f; op2val:0xb163; op3val:0x30; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 684, x17, x15, 1140, x18)

inst_115:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03d and fs2 == 0 and fe2 == 0x0f and fm2 == 0x053 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x062 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3d; op2val:0x3c53; op3val:0x62; valaddr_reg:x16; val_offset:690; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 690, x17, x15, 1150, x18)

inst_116:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x1a5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04c and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x55; op2val:0x39a5; op3val:0x4c; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 696, x17, x15, 1160, x18)

inst_117:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x001 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x176 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x013 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x1; op2val:0x4976; op3val:0x13; valaddr_reg:x16; val_offset:702; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 702, x17, x15, 1170, x18)

inst_118:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x022 and fs2 == 0 and fe2 == 0x09 and fm2 == 0x387 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x005 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x22; op2val:0x2787; op3val:0x5; valaddr_reg:x16; val_offset:708; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 708, x17, x15, 1180, x18)

inst_119:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x218 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x062 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3f; op2val:0x3e18; op3val:0x62; valaddr_reg:x16; val_offset:714; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 714, x17, x15, 1190, x18)

inst_120:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05d and fs2 == 0 and fe2 == 0x10 and fm2 == 0x099 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x009 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x785d; op2val:0x4099; op3val:0x7809; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_121:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x006 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x053 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7806; op2val:0x41e0; op3val:0x7853; valaddr_reg:x16; val_offset:726; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 726, x17, x15, 1210, x18)

inst_122:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05c and fs2 == 0 and fe2 == 0x10 and fm2 == 0x169 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00e and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x785c; op2val:0x4169; op3val:0x780e; valaddr_reg:x16; val_offset:732; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 732, x17, x15, 1220, x18)

inst_123:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x056 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x17f and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00d and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7856; op2val:0x417f; op3val:0x780d; valaddr_reg:x16; val_offset:738; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 738, x17, x15, 1230, x18)

inst_124:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x005 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x218 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x051 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7805; op2val:0x4218; op3val:0x7851; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 744, x17, x15, 1240, x18)

inst_125:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x029 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x1c9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x013 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7829; op2val:0x41c9; op3val:0x7813; valaddr_reg:x16; val_offset:750; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 750, x17, x15, 1250, x18)

inst_126:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x10 and fm2 == 0x1c4 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x013 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x782f; op2val:0x41c4; op3val:0x7813; valaddr_reg:x16; val_offset:756; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 756, x17, x15, 1260, x18)

inst_127:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00d and fs2 == 1 and fe2 == 0x0d and fm2 == 0x324 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x030 and rm_val == 0  
// opcode: fnmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x780d; op2val:0xb724; op3val:0x7830; valaddr_reg:x16; val_offset:762; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.h, f31, f30, f29, f28, 0x0, 0, x16, 762, x17, x15, 1270, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.hword 0x4a
.hword 0x3052
.hword 0xb
.hword 0x785d
.hword 0x4099
.hword 0x4099
.hword 0x783e
.hword 0x414b
.hword 0x783c
.hword 0x7806
.hword 0x41e0
.hword 0x7806
.hword 0x785c
.hword 0x785c
.hword 0x780e
.hword 0x7856
.hword 0x7856
.hword 0x7856
.hword 0x7805
.hword 0x7805
.hword 0x7851
.hword 0x7829
.hword 0x7829
.hword 0x7829
.hword 0x7820
.hword 0x41f4
.hword 0x784e
.hword 0x7858
.hword 0x41aa
.hword 0x7851
.hword 0x782f
.hword 0x41c4
.hword 0x782f
.hword 0x780d
.hword 0xb724
.hword 0xb724
.hword 0x783d
.hword 0xb96f
.hword 0x781e
.hword 0x783f
.hword 0xba83
.hword 0x780a
.hword 0x7837
.hword 0xba9b
.hword 0x7844
.hword 0x784f
.hword 0xbb2c
.hword 0x7802
.hword 0x7814
.hword 0xbb72
.hword 0x7823
.hword 0x7808
.hword 0xbbac
.hword 0x7819
.hword 0x7840
.hword 0xbaef
.hword 0x784c
.hword 0x7830
.hword 0xbb44
.hword 0x782f
.hword 0x7858
.hword 0xbab0
.hword 0x785c
.hword 0x449
.hword 0x40b1
.hword 0x40f
.hword 0x404
.hword 0x40a2
.hword 0x44f
.hword 0x408
.hword 0x4043
.hword 0x418
.hword 0x450
.hword 0x3fdc
.hword 0x43a
.hword 0x448
.hword 0x3f98
.hword 0x401
.hword 0x415
.hword 0x4005
.hword 0x426
.hword 0x43f
.hword 0x3fe9
.hword 0x45e
.hword 0x453
.hword 0x3f99
.hword 0x433
.hword 0x423
.hword 0x3fe5
.hword 0x429
.hword 0x459
.hword 0x3fa4
.hword 0x44e
.hword 0x450
.hword 0xb6b5
.hword 0x431
.hword 0x455
.hword 0xb2c7
.hword 0x415
.hword 0x42a
.hword 0xacdc
.hword 0x42f
.hword 0x452
.hword 0x9b68
.hword 0x43c
.hword 0x440
.hword 0x1f87
.hword 0x428
.hword 0x45d
.hword 0x2790
.hword 0x431
.hword 0x43f
.hword 0x212e
.hword 0x413
.hword 0x455
.hword 0x2ab1
.hword 0x43e
.hword 0x44e
.hword 0x2ada
.hword 0x43d
.hword 0x43f
.hword 0x2800
.hword 0x423
.hword 0x36
.hword 0x4976
.hword 0x4f
.hword 0x21
.hword 0x4e36
.hword 0x35
.hword 0x2b
.hword 0x4d97
.hword 0x43
.hword 0x41
.hword 0x4bd2
.hword 0x3a
.hword 0x19
.hword 0x511e
.hword 0x21
.hword 0x4c
.hword 0x4aef
.hword 0x2f
.hword 0x10
.hword 0x5418
.hword 0x21
.hword 0x3
.hword 0x5daa
.hword 0x45
.hword 0x17
.hword 0x5190
.hword 0x3
.hword 0x3f
.hword 0x4c6c
.hword 0x5d
.hword 0x23
.hword 0xca78
.hword 0x3a
.hword 0x60
.hword 0xc712
.hword 0x58
.hword 0xb
.hword 0xd4f1
.hword 0x19
.hword 0x5b
.hword 0xc8fa
.hword 0x35
.hword 0x3d
.hword 0xcbcd
.hword 0x27
.hword 0x43
.hword 0xcb1a
.hword 0x37
.hword 0x31
.hword 0xcd20
.hword 0xa
.hword 0x3a
.hword 0xcc24
.hword 0x3a
.hword 0x4e
.hword 0xc9fe
.hword 0x56
.hword 0x20
.hword 0xcfe4
.hword 0xc
.hword 0xd
.hword 0x517b
.hword 0x39
.hword 0x60
.hword 0x426a
.hword 0x33
.hword 0x37
.hword 0x437d
.hword 0x4d
.hword 0x7
.hword 0x4a5b
.hword 0x18
.hword 0x57
.hword 0x3c69
.hword 0x3f
.hword 0x26
.hword 0x3b28
.hword 0x11
.hword 0x44
.hword 0x3af0
.hword 0x32
.hword 0x30
.hword 0x3c80
.hword 0x31
.hword 0x50
.hword 0x384c
.hword 0x28
.hword 0x56
.hword 0x3b89
.hword 0x50
.hword 0x2b
.hword 0xc920
.hword 0x48
.hword 0x3
.hword 0xd340
.hword 0x53
.hword 0x19
.hword 0xc447
.hword 0x16
.hword 0x43
.hword 0xbb85
.hword 0x2
.hword 0x1b
.hword 0x4038
.hword 0x5a
.hword 0x12
.hword 0x42aa
.hword 0x4d
.hword 0x3e
.hword 0x3529
.hword 0x1d
.hword 0x1a
.hword 0x3ec4
.hword 0x31
.hword 0x28
.hword 0x4080
.hword 0x5d
.hword 0x55
.hword 0x3666
.hword 0x23
.hword 0x3c0f
.hword 0x4113
.hword 0x3c4e
.hword 0x3c44
.hword 0x4044
.hword 0x3c1a
.hword 0x3c41
.hword 0x4027
.hword 0x3c57
.hword 0x3c10
.hword 0x4015
.hword 0x3c0c
.hword 0x3c2e
.hword 0x4007
.hword 0x3c4c
.hword 0x3c38
.hword 0x3fc9
.hword 0x3c27
.hword 0x3c20
.hword 0x400a
.hword 0x3c4e
.hword 0x3c52
.hword 0x3f97
.hword 0x3c2f
.hword 0x3c41
.hword 0x3f8b
.hword 0x3c04
.hword 0x3c53
.hword 0x3fba
.hword 0x3c5a
.hword 0x3c42
.hword 0xb66d
.hword 0x3c4a
.hword 0x3c3f
.hword 0xb2cc
.hword 0x3c19
.hword 0x3c54
.hword 0xacad
.hword 0x3c2f
.hword 0x3c4c
.hword 0xa86b
.hword 0x3c1a
.hword 0x3c0d
.hword 0xa66b
.hword 0x3c06
.hword 0x3c52
.hword 0x2517
.hword 0x3c26
.hword 0x3c1a
.hword 0x2cff
.hword 0x3c5a
.hword 0x3c0d
.hword 0x2dbd
.hword 0x3c61
.hword 0x3c39
.hword 0x2d35
.hword 0x3c5a
.hword 0x3c35
.hword 0x279b
.hword 0x3c21
.hword 0xc
.hword 0x51d2
.hword 0x2f
.hword 0x37
.hword 0x456f
.hword 0x2b
.hword 0x58
.hword 0x3e5d
.hword 0xc
.hword 0x55
.hword 0x3eba
.hword 0x4f
.hword 0x5e
.hword 0x399d
.hword 0x22
.hword 0x47
.hword 0x3df8
.hword 0x5a
.hword 0x19
.hword 0x427a
.hword 0x49
.hword 0x58
.hword 0x322e
.hword 0xd
.hword 0x45
.hword 0x3c2c
.hword 0x46
.hword 0x5e
.hword 0x3898
.hword 0x35
.hword 0x3f
.hword 0xc7b6
.hword 0x1a
.hword 0x3
.hword 0xd49a
.hword 0x23
.hword 0x29
.hword 0xb9a8
.hword 0x63
.hword 0x5f
.hword 0xb163
.hword 0x30
.hword 0x3d
.hword 0x3c53
.hword 0x62
.hword 0x55
.hword 0x39a5
.hword 0x4c
.hword 0x1
.hword 0x4976
.hword 0x13
.hword 0x22
.hword 0x2787
.hword 0x5
.hword 0x3f
.hword 0x3e18
.hword 0x62
.hword 0x785d
.hword 0x4099
.hword 0x7809
.hword 0x7806
.hword 0x41e0
.hword 0x7853
.hword 0x785c
.hword 0x4169
.hword 0x780e
.hword 0x7856
.hword 0x417f
.hword 0x780d
.hword 0x7805
.hword 0x4218
.hword 0x7851
.hword 0x7829
.hword 0x41c9
.hword 0x7813
.hword 0x782f
.hword 0x41c4
.hword 0x7813
.hword 0x780d
.hword 0xb724
.hword 0x7830
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 256*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
